<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="566" onload="init(evt)" viewBox="0 0 1200 566" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="566" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="549.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="549.00"> </text><svg id="frames" x="10" width="1180" total_samples="23822758177"><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3,221,960 samples, 0.01%)</title><rect x="0.0034%" y="485" width="0.0135%" height="15" fill="rgb(227,0,7)" fg:x="814388" fg:w="3221960"/><text x="0.2534%" y="495.50"></text></g><g><title>malloc (3,221,960 samples, 0.01%)</title><rect x="0.0034%" y="469" width="0.0135%" height="15" fill="rgb(217,0,24)" fg:x="814388" fg:w="3221960"/><text x="0.2534%" y="479.50"></text></g><g><title>&lt;tokio::fs::file::File as tokio::io::async_write::AsyncWrite&gt;::poll_write (32,903,861 samples, 0.14%)</title><rect x="0.0170%" y="469" width="0.1381%" height="15" fill="rgb(221,193,54)" fg:x="4048595" fg:w="32903861"/><text x="0.2670%" y="479.50"></text></g><g><title>tokio::runtime::blocking::pool::spawn_mandatory_blocking (32,903,861 samples, 0.14%)</title><rect x="0.0170%" y="453" width="0.1381%" height="15" fill="rgb(248,212,6)" fg:x="4048595" fg:w="32903861"/><text x="0.2670%" y="463.50"></text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_task (32,903,861 samples, 0.14%)</title><rect x="0.0170%" y="437" width="0.1381%" height="15" fill="rgb(208,68,35)" fg:x="4048595" fg:w="32903861"/><text x="0.2670%" y="447.50"></text></g><g><title>syscall (32,903,861 samples, 0.14%)</title><rect x="0.0170%" y="421" width="0.1381%" height="15" fill="rgb(232,128,0)" fg:x="4048595" fg:w="32903861"/><text x="0.2670%" y="431.50"></text></g><g><title>[unknown] (32,903,861 samples, 0.14%)</title><rect x="0.0170%" y="405" width="0.1381%" height="15" fill="rgb(207,160,47)" fg:x="4048595" fg:w="32903861"/><text x="0.2670%" y="415.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Parker::park (4,708,481 samples, 0.02%)</title><rect x="0.1551%" y="469" width="0.0198%" height="15" fill="rgb(228,23,34)" fg:x="36955981" fg:w="4708481"/><text x="0.4051%" y="479.50"></text></g><g><title>parking_lot::condvar::Condvar::wait_until_internal (4,708,481 samples, 0.02%)</title><rect x="0.1551%" y="453" width="0.0198%" height="15" fill="rgb(218,30,26)" fg:x="36955981" fg:w="4708481"/><text x="0.4051%" y="463.50"></text></g><g><title>syscall (4,708,481 samples, 0.02%)</title><rect x="0.1551%" y="437" width="0.0198%" height="15" fill="rgb(220,122,19)" fg:x="36955981" fg:w="4708481"/><text x="0.4051%" y="447.50"></text></g><g><title>[unknown] (4,708,481 samples, 0.02%)</title><rect x="0.1551%" y="421" width="0.0198%" height="15" fill="rgb(250,228,42)" fg:x="36955981" fg:w="4708481"/><text x="0.4051%" y="431.50"></text></g><g><title>[[heap]] (45,118,172 samples, 0.19%)</title><rect x="0.0170%" y="485" width="0.1894%" height="15" fill="rgb(240,193,28)" fg:x="4048595" fg:w="45118172"/><text x="0.2670%" y="495.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (7,502,305 samples, 0.03%)</title><rect x="0.1749%" y="469" width="0.0315%" height="15" fill="rgb(216,20,37)" fg:x="41664462" fg:w="7502305"/><text x="0.4249%" y="479.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (7,502,305 samples, 0.03%)</title><rect x="0.1749%" y="453" width="0.0315%" height="15" fill="rgb(206,188,39)" fg:x="41664462" fg:w="7502305"/><text x="0.4249%" y="463.50"></text></g><g><title>_ZN5sider8database16restore_from_aof28_$u7b$$u7b$closure$u7d$$u7d$17h8aac0991414130d3E.llvm.8398839834326230875 (7,502,305 samples, 0.03%)</title><rect x="0.1749%" y="437" width="0.0315%" height="15" fill="rgb(217,207,13)" fg:x="41664462" fg:w="7502305"/><text x="0.4249%" y="447.50"></text></g><g><title>sider::process::process_command::_{{closure}} (7,502,305 samples, 0.03%)</title><rect x="0.1749%" y="421" width="0.0315%" height="15" fill="rgb(231,73,38)" fg:x="41664462" fg:w="7502305"/><text x="0.4249%" y="431.50"></text></g><g><title>tokio::fs::open_options::OpenOptions::open::_{{closure}} (7,502,305 samples, 0.03%)</title><rect x="0.1749%" y="405" width="0.0315%" height="15" fill="rgb(225,20,46)" fg:x="41664462" fg:w="7502305"/><text x="0.4249%" y="415.50"></text></g><g><title>tokio::runtime::blocking::pool::spawn_blocking (7,502,305 samples, 0.03%)</title><rect x="0.1749%" y="389" width="0.0315%" height="15" fill="rgb(210,31,41)" fg:x="41664462" fg:w="7502305"/><text x="0.4249%" y="399.50"></text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_task (7,502,305 samples, 0.03%)</title><rect x="0.1749%" y="373" width="0.0315%" height="15" fill="rgb(221,200,47)" fg:x="41664462" fg:w="7502305"/><text x="0.4249%" y="383.50"></text></g><g><title>syscall (7,502,305 samples, 0.03%)</title><rect x="0.1749%" y="357" width="0.0315%" height="15" fill="rgb(226,26,5)" fg:x="41664462" fg:w="7502305"/><text x="0.4249%" y="367.50"></text></g><g><title>[unknown] (7,502,305 samples, 0.03%)</title><rect x="0.1749%" y="341" width="0.0315%" height="15" fill="rgb(249,33,26)" fg:x="41664462" fg:w="7502305"/><text x="0.4249%" y="351.50"></text></g><g><title>__close (80,890,157 samples, 0.34%)</title><rect x="0.2064%" y="469" width="0.3395%" height="15" fill="rgb(235,183,28)" fg:x="49166767" fg:w="80890157"/><text x="0.4564%" y="479.50"></text></g><g><title>[unknown] (80,890,157 samples, 0.34%)</title><rect x="0.2064%" y="453" width="0.3395%" height="15" fill="rgb(221,5,38)" fg:x="49166767" fg:w="80890157"/><text x="0.4564%" y="463.50"></text></g><g><title>malloc (6,375,664 samples, 0.03%)</title><rect x="0.5459%" y="469" width="0.0268%" height="15" fill="rgb(247,18,42)" fg:x="130056924" fg:w="6375664"/><text x="0.7959%" y="479.50"></text></g><g><title>tokio::runtime::blocking::pool::spawn_mandatory_blocking (6,375,664 samples, 0.03%)</title><rect x="0.5459%" y="453" width="0.0268%" height="15" fill="rgb(241,131,45)" fg:x="130056924" fg:w="6375664"/><text x="0.7959%" y="463.50"></text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_task (6,375,664 samples, 0.03%)</title><rect x="0.5459%" y="437" width="0.0268%" height="15" fill="rgb(249,31,29)" fg:x="130056924" fg:w="6375664"/><text x="0.7959%" y="447.50"></text></g><g><title>syscall (6,375,664 samples, 0.03%)</title><rect x="0.5459%" y="421" width="0.0268%" height="15" fill="rgb(225,111,53)" fg:x="130056924" fg:w="6375664"/><text x="0.7959%" y="431.50"></text></g><g><title>[unknown] (6,375,664 samples, 0.03%)</title><rect x="0.5459%" y="405" width="0.0268%" height="15" fill="rgb(238,160,17)" fg:x="130056924" fg:w="6375664"/><text x="0.7959%" y="415.50"></text></g><g><title>syscall (40,568,121 samples, 0.17%)</title><rect x="0.5727%" y="469" width="0.1703%" height="15" fill="rgb(214,148,48)" fg:x="136432588" fg:w="40568121"/><text x="0.8227%" y="479.50"></text></g><g><title>[unknown] (40,568,121 samples, 0.17%)</title><rect x="0.5727%" y="453" width="0.1703%" height="15" fill="rgb(232,36,49)" fg:x="136432588" fg:w="40568121"/><text x="0.8227%" y="463.50"></text></g><g><title>[anon] (137,336,931 samples, 0.58%)</title><rect x="0.2064%" y="485" width="0.5765%" height="15" fill="rgb(209,103,24)" fg:x="49166767" fg:w="137336931"/><text x="0.4564%" y="495.50"></text></g><g><title>tokio::runtime::blocking::pool::spawn_mandatory_blocking (9,502,989 samples, 0.04%)</title><rect x="0.7430%" y="469" width="0.0399%" height="15" fill="rgb(229,88,8)" fg:x="177000709" fg:w="9502989"/><text x="0.9930%" y="479.50"></text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_task (9,502,989 samples, 0.04%)</title><rect x="0.7430%" y="453" width="0.0399%" height="15" fill="rgb(213,181,19)" fg:x="177000709" fg:w="9502989"/><text x="0.9930%" y="463.50"></text></g><g><title>syscall (9,502,989 samples, 0.04%)</title><rect x="0.7430%" y="437" width="0.0399%" height="15" fill="rgb(254,191,54)" fg:x="177000709" fg:w="9502989"/><text x="0.9930%" y="447.50"></text></g><g><title>[unknown] (9,502,989 samples, 0.04%)</title><rect x="0.7430%" y="421" width="0.0399%" height="15" fill="rgb(241,83,37)" fg:x="177000709" fg:w="9502989"/><text x="0.9930%" y="431.50"></text></g><g><title>parking_lot::condvar::Condvar::wait_until_internal (28,353,225 samples, 0.12%)</title><rect x="0.8413%" y="469" width="0.1190%" height="15" fill="rgb(233,36,39)" fg:x="200411091" fg:w="28353225"/><text x="1.0913%" y="479.50"></text></g><g><title>syscall (28,353,225 samples, 0.12%)</title><rect x="0.8413%" y="453" width="0.1190%" height="15" fill="rgb(226,3,54)" fg:x="200411091" fg:w="28353225"/><text x="1.0913%" y="463.50"></text></g><g><title>[unknown] (28,353,225 samples, 0.12%)</title><rect x="0.8413%" y="437" width="0.1190%" height="15" fill="rgb(245,192,40)" fg:x="200411091" fg:w="28353225"/><text x="1.0913%" y="447.50"></text></g><g><title>[unknown] (91,593,132 samples, 0.38%)</title><rect x="0.7829%" y="485" width="0.3845%" height="15" fill="rgb(238,167,29)" fg:x="186503698" fg:w="91593132"/><text x="1.0329%" y="495.50"></text></g><g><title>statx (49,332,514 samples, 0.21%)</title><rect x="0.9603%" y="469" width="0.2071%" height="15" fill="rgb(232,182,51)" fg:x="228764316" fg:w="49332514"/><text x="1.2103%" y="479.50"></text></g><g><title>[unknown] (49,332,514 samples, 0.21%)</title><rect x="0.9603%" y="453" width="0.2071%" height="15" fill="rgb(231,60,39)" fg:x="228764316" fg:w="49332514"/><text x="1.2103%" y="463.50"></text></g><g><title>_int_free_maybe_consolidate.part.0 (47,366,719 samples, 0.20%)</title><rect x="2.7934%" y="357" width="0.1988%" height="15" fill="rgb(208,69,12)" fg:x="665469305" fg:w="47366719"/><text x="3.0434%" y="367.50"></text></g><g><title>malloc_consolidate (47,366,719 samples, 0.20%)</title><rect x="2.7934%" y="341" width="0.1988%" height="15" fill="rgb(235,93,37)" fg:x="665469305" fg:w="47366719"/><text x="3.0434%" y="351.50"></text></g><g><title>cfree@GLIBC_2.2.5 (111,018,006 samples, 0.47%)</title><rect x="2.5643%" y="389" width="0.4660%" height="15" fill="rgb(213,116,39)" fg:x="610898327" fg:w="111018006"/><text x="2.8143%" y="399.50"></text></g><g><title>_int_free (110,791,742 samples, 0.47%)</title><rect x="2.5653%" y="373" width="0.4651%" height="15" fill="rgb(222,207,29)" fg:x="611124591" fg:w="110791742"/><text x="2.8153%" y="383.50"></text></g><g><title>_int_free_merge_chunk (9,080,309 samples, 0.04%)</title><rect x="2.9922%" y="357" width="0.0381%" height="15" fill="rgb(206,96,30)" fg:x="712836024" fg:w="9080309"/><text x="3.2422%" y="367.50"></text></g><g><title>unlink_chunk.isra.0 (6,141,179 samples, 0.03%)</title><rect x="3.0046%" y="341" width="0.0258%" height="15" fill="rgb(218,138,4)" fg:x="715775154" fg:w="6141179"/><text x="3.2546%" y="351.50"></text></g><g><title>&lt;std::time::Instant as core::ops::arith::Sub&gt;::sub (4,625,143 samples, 0.02%)</title><rect x="4.0478%" y="373" width="0.0194%" height="15" fill="rgb(250,191,14)" fg:x="964289402" fg:w="4625143"/><text x="4.2978%" y="383.50"></text></g><g><title>_ZN3std3sys3pal4unix4time8Timespec12sub_timespec17h41a57eccb9be52b6E.llvm.17919143677255518582 (2,855,881 samples, 0.01%)</title><rect x="4.0552%" y="357" width="0.0120%" height="15" fill="rgb(239,60,40)" fg:x="966058664" fg:w="2855881"/><text x="4.3052%" y="367.50"></text></g><g><title>parking_lot::raw_mutex::RawMutex::lock_slow (24,305,323 samples, 0.10%)</title><rect x="4.0672%" y="373" width="0.1020%" height="15" fill="rgb(206,27,48)" fg:x="968918528" fg:w="24305323"/><text x="4.3172%" y="383.50"></text></g><g><title>parking_lot_core::word_lock::WordLock::lock_slow (5,308,180 samples, 0.02%)</title><rect x="4.1469%" y="357" width="0.0223%" height="15" fill="rgb(225,35,8)" fg:x="987915671" fg:w="5308180"/><text x="4.3969%" y="367.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (101,477,666 samples, 0.43%)</title><rect x="4.1692%" y="373" width="0.4260%" height="15" fill="rgb(250,213,24)" fg:x="993229238" fg:w="101477666"/><text x="4.4192%" y="383.50"></text></g><g><title>clock_gettime@@GLIBC_2.17 (100,509,444 samples, 0.42%)</title><rect x="4.1733%" y="357" width="0.4219%" height="15" fill="rgb(247,123,22)" fg:x="994197460" fg:w="100509444"/><text x="4.4233%" y="367.50"></text></g><g><title>__vdso_clock_gettime (88,597,244 samples, 0.37%)</title><rect x="4.2233%" y="341" width="0.3719%" height="15" fill="rgb(231,138,38)" fg:x="1006109660" fg:w="88597244"/><text x="4.4733%" y="351.50"></text></g><g><title>parking_lot::condvar::Condvar::wait_until_internal (546,932,042 samples, 2.30%)</title><rect x="3.0304%" y="389" width="2.2958%" height="15" fill="rgb(231,145,46)" fg:x="721916333" fg:w="546932042"/><text x="3.2804%" y="399.50">p..</text></g><g><title>syscall (174,141,471 samples, 0.73%)</title><rect x="4.5952%" y="373" width="0.7310%" height="15" fill="rgb(251,118,11)" fg:x="1094706904" fg:w="174141471"/><text x="4.8452%" y="383.50"></text></g><g><title>[unknown] (174,138,266 samples, 0.73%)</title><rect x="4.5952%" y="357" width="0.7310%" height="15" fill="rgb(217,147,25)" fg:x="1094710109" fg:w="174138266"/><text x="4.8452%" y="367.50"></text></g><g><title>[unknown] (119,962,591 samples, 0.50%)</title><rect x="4.8226%" y="341" width="0.5036%" height="15" fill="rgb(247,81,37)" fg:x="1148885784" fg:w="119962591"/><text x="5.0726%" y="351.50"></text></g><g><title>[unknown] (119,712,688 samples, 0.50%)</title><rect x="4.8237%" y="325" width="0.5025%" height="15" fill="rgb(209,12,38)" fg:x="1149135687" fg:w="119712688"/><text x="5.0737%" y="335.50"></text></g><g><title>[unknown] (95,072,487 samples, 0.40%)</title><rect x="4.9271%" y="309" width="0.3991%" height="15" fill="rgb(227,1,9)" fg:x="1173775888" fg:w="95072487"/><text x="5.1771%" y="319.50"></text></g><g><title>[unknown] (65,330,931 samples, 0.27%)</title><rect x="5.0520%" y="293" width="0.2742%" height="15" fill="rgb(248,47,43)" fg:x="1203517444" fg:w="65330931"/><text x="5.3020%" y="303.50"></text></g><g><title>parking_lot::raw_mutex::RawMutex::unlock_slow (2,678,029 samples, 0.01%)</title><rect x="5.3307%" y="389" width="0.0112%" height="15" fill="rgb(221,10,30)" fg:x="1269931330" fg:w="2678029"/><text x="5.5807%" y="399.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (63,115,341 samples, 0.26%)</title><rect x="5.3420%" y="389" width="0.2649%" height="15" fill="rgb(210,229,1)" fg:x="1272609359" fg:w="63115341"/><text x="5.5920%" y="399.50"></text></g><g><title>clock_gettime@@GLIBC_2.17 (63,104,048 samples, 0.26%)</title><rect x="5.3420%" y="373" width="0.2649%" height="15" fill="rgb(222,148,37)" fg:x="1272620652" fg:w="63104048"/><text x="5.5920%" y="383.50"></text></g><g><title>__vdso_clock_gettime (62,043,741 samples, 0.26%)</title><rect x="5.3465%" y="357" width="0.2604%" height="15" fill="rgb(234,67,33)" fg:x="1273680959" fg:w="62043741"/><text x="5.5965%" y="367.50"></text></g><g><title>std::time::SystemTime::checked_add (3,128,154 samples, 0.01%)</title><rect x="5.6069%" y="389" width="0.0131%" height="15" fill="rgb(247,98,35)" fg:x="1335726973" fg:w="3128154"/><text x="5.8569%" y="399.50"></text></g><g><title>syscall (7,147,406 samples, 0.03%)</title><rect x="5.6201%" y="389" width="0.0300%" height="15" fill="rgb(247,138,52)" fg:x="1338855127" fg:w="7147406"/><text x="5.8701%" y="399.50"></text></g><g><title>[unknown] (7,147,406 samples, 0.03%)</title><rect x="5.6201%" y="373" width="0.0300%" height="15" fill="rgb(213,79,30)" fg:x="1338855127" fg:w="7147406"/><text x="5.8701%" y="383.50"></text></g><g><title>[unknown] (7,071,941 samples, 0.03%)</title><rect x="5.6204%" y="357" width="0.0297%" height="15" fill="rgb(246,177,23)" fg:x="1338930592" fg:w="7071941"/><text x="5.8704%" y="367.50"></text></g><g><title>[unknown] (7,071,941 samples, 0.03%)</title><rect x="5.6204%" y="341" width="0.0297%" height="15" fill="rgb(230,62,27)" fg:x="1338930592" fg:w="7071941"/><text x="5.8704%" y="351.50"></text></g><g><title>[unknown] (7,071,941 samples, 0.03%)</title><rect x="5.6204%" y="325" width="0.0297%" height="15" fill="rgb(216,154,8)" fg:x="1338930592" fg:w="7071941"/><text x="5.8704%" y="335.50"></text></g><g><title>[unknown] (7,071,941 samples, 0.03%)</title><rect x="5.6204%" y="309" width="0.0297%" height="15" fill="rgb(244,35,45)" fg:x="1338930592" fg:w="7071941"/><text x="5.8704%" y="319.50"></text></g><g><title>[unknown] (2,704,381 samples, 0.01%)</title><rect x="5.6387%" y="293" width="0.0114%" height="15" fill="rgb(251,115,12)" fg:x="1343298152" fg:w="2704381"/><text x="5.8887%" y="303.50"></text></g><g><title>_ZN5tokio7runtime4task7harness20Harness$LT$T$C$S$GT$8complete17haa47575028a782ccE.llvm.5028265998975039680 (76,598,949 samples, 0.32%)</title><rect x="5.7927%" y="373" width="0.3215%" height="15" fill="rgb(240,54,50)" fg:x="1379982721" fg:w="76598949"/><text x="6.0427%" y="383.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::set_stage (75,044,975 samples, 0.32%)</title><rect x="5.7992%" y="357" width="0.3150%" height="15" fill="rgb(233,84,52)" fg:x="1381536695" fg:w="75044975"/><text x="6.0492%" y="367.50"></text></g><g><title>cfree@GLIBC_2.2.5 (9,973,303 samples, 0.04%)</title><rect x="6.0724%" y="341" width="0.0419%" height="15" fill="rgb(207,117,47)" fg:x="1446608367" fg:w="9973303"/><text x="6.3224%" y="351.50"></text></g><g><title>_int_free (9,430,255 samples, 0.04%)</title><rect x="6.0747%" y="325" width="0.0396%" height="15" fill="rgb(249,43,39)" fg:x="1447151415" fg:w="9430255"/><text x="6.3247%" y="335.50"></text></g><g><title>_ZN5tokio7runtime9scheduler12multi_thread6worker73_$LT$impl$u20$tokio..runtime..scheduler..multi_thread..handle..Handle$GT$16push_remote_task17h876995ad3021b1ceE.llvm.7890778762390715423 (104,312,905 samples, 0.44%)</title><rect x="6.6865%" y="341" width="0.4379%" height="15" fill="rgb(209,38,44)" fg:x="1592907601" fg:w="104312905"/><text x="6.9365%" y="351.50"></text></g><g><title>parking_lot_core::parking_lot::lock_bucket_pair (9,881,300 samples, 0.04%)</title><rect x="7.3442%" y="325" width="0.0415%" height="15" fill="rgb(236,212,23)" fg:x="1749589941" fg:w="9881300"/><text x="7.5942%" y="335.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (36,621,568 samples, 0.15%)</title><rect x="7.3857%" y="325" width="0.1537%" height="15" fill="rgb(242,79,21)" fg:x="1759471241" fg:w="36621568"/><text x="7.6357%" y="335.50"></text></g><g><title>clock_gettime@@GLIBC_2.17 (34,801,689 samples, 0.15%)</title><rect x="7.3933%" y="309" width="0.1461%" height="15" fill="rgb(211,96,35)" fg:x="1761291120" fg:w="34801689"/><text x="7.6433%" y="319.50"></text></g><g><title>__vdso_clock_gettime (34,587,355 samples, 0.15%)</title><rect x="7.3942%" y="293" width="0.1452%" height="15" fill="rgb(253,215,40)" fg:x="1761505454" fg:w="34587355"/><text x="7.6442%" y="303.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (108,884,954 samples, 0.46%)</title><rect x="7.1244%" y="341" width="0.4571%" height="15" fill="rgb(211,81,21)" fg:x="1697220506" fg:w="108884954"/><text x="7.3744%" y="351.50"></text></g><g><title>syscall (10,012,651 samples, 0.04%)</title><rect x="7.5394%" y="325" width="0.0420%" height="15" fill="rgb(208,190,38)" fg:x="1796092809" fg:w="10012651"/><text x="7.7894%" y="335.50"></text></g><g><title>[unknown] (10,012,651 samples, 0.04%)</title><rect x="7.5394%" y="309" width="0.0420%" height="15" fill="rgb(235,213,38)" fg:x="1796092809" fg:w="10012651"/><text x="7.7894%" y="319.50"></text></g><g><title>[unknown] (10,012,651 samples, 0.04%)</title><rect x="7.5394%" y="293" width="0.0420%" height="15" fill="rgb(237,122,38)" fg:x="1796092809" fg:w="10012651"/><text x="7.7894%" y="303.50"></text></g><g><title>[unknown] (10,012,651 samples, 0.04%)</title><rect x="7.5394%" y="277" width="0.0420%" height="15" fill="rgb(244,218,35)" fg:x="1796092809" fg:w="10012651"/><text x="7.7894%" y="287.50"></text></g><g><title>[unknown] (10,012,651 samples, 0.04%)</title><rect x="7.5394%" y="261" width="0.0420%" height="15" fill="rgb(240,68,47)" fg:x="1796092809" fg:w="10012651"/><text x="7.7894%" y="271.50"></text></g><g><title>[unknown] (10,012,651 samples, 0.04%)</title><rect x="7.5394%" y="245" width="0.0420%" height="15" fill="rgb(210,16,53)" fg:x="1796092809" fg:w="10012651"/><text x="7.7894%" y="255.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task (433,690,398 samples, 1.82%)</title><rect x="6.1142%" y="357" width="1.8205%" height="15" fill="rgb(235,124,12)" fg:x="1456581671" fg:w="433690398"/><text x="6.3642%" y="367.50">t..</text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Unparker::unpark (82,146,149 samples, 0.34%)</title><rect x="7.5899%" y="341" width="0.3448%" height="15" fill="rgb(224,169,11)" fg:x="1808125920" fg:w="82146149"/><text x="7.8399%" y="351.50"></text></g><g><title>tokio::runtime::task::core::Trailer::wake_join (2,432,303 samples, 0.01%)</title><rect x="7.9347%" y="357" width="0.0102%" height="15" fill="rgb(250,166,2)" fg:x="1890272168" fg:w="2432303"/><text x="8.1847%" y="367.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_terminal (7,056,224 samples, 0.03%)</title><rect x="7.9524%" y="357" width="0.0296%" height="15" fill="rgb(242,216,29)" fg:x="1894492698" fg:w="7056224"/><text x="8.2024%" y="367.50"></text></g><g><title>_ZN5tokio7runtime4task7harness20Harness$LT$T$C$S$GT$8complete17hed70054b26fe6bdcE.llvm.14467471787634668200 (467,920,809 samples, 1.96%)</title><rect x="6.1142%" y="373" width="1.9642%" height="15" fill="rgb(230,116,27)" fg:x="1456581670" fg:w="467920809"/><text x="6.3642%" y="383.50">_..</text></g><g><title>tokio::runtime::task::waker::wake_by_ref (22,953,464 samples, 0.10%)</title><rect x="7.9821%" y="357" width="0.0964%" height="15" fill="rgb(228,99,48)" fg:x="1901549015" fg:w="22953464"/><text x="8.2321%" y="367.50"></text></g><g><title>__rdl_dealloc (7,466,389 samples, 0.03%)</title><rect x="8.6746%" y="341" width="0.0313%" height="15" fill="rgb(253,11,6)" fg:x="2066526617" fg:w="7466389"/><text x="8.9246%" y="351.50"></text></g><g><title>__rust_dealloc (6,551,243 samples, 0.03%)</title><rect x="8.7059%" y="341" width="0.0275%" height="15" fill="rgb(247,143,39)" fg:x="2073993006" fg:w="6551243"/><text x="8.9559%" y="351.50"></text></g><g><title>[unknown] (12,869,708 samples, 0.05%)</title><rect x="8.7764%" y="309" width="0.0540%" height="15" fill="rgb(236,97,10)" fg:x="2090774198" fg:w="12869708"/><text x="9.0264%" y="319.50"></text></g><g><title>[unknown] (12,869,655 samples, 0.05%)</title><rect x="8.7764%" y="293" width="0.0540%" height="15" fill="rgb(233,208,19)" fg:x="2090774251" fg:w="12869655"/><text x="9.0264%" y="303.50"></text></g><g><title>[unknown] (12,869,655 samples, 0.05%)</title><rect x="8.7764%" y="277" width="0.0540%" height="15" fill="rgb(216,164,2)" fg:x="2090774251" fg:w="12869655"/><text x="9.0264%" y="287.50"></text></g><g><title>[unknown] (12,858,716 samples, 0.05%)</title><rect x="8.7764%" y="261" width="0.0540%" height="15" fill="rgb(220,129,5)" fg:x="2090785190" fg:w="12858716"/><text x="9.0264%" y="271.50"></text></g><g><title>[unknown] (12,847,769 samples, 0.05%)</title><rect x="8.7765%" y="245" width="0.0539%" height="15" fill="rgb(242,17,10)" fg:x="2090796137" fg:w="12847769"/><text x="9.0265%" y="255.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (40,143,679 samples, 0.17%)</title><rect x="8.7334%" y="341" width="0.1685%" height="15" fill="rgb(242,107,0)" fg:x="2080544249" fg:w="40143679"/><text x="8.9834%" y="351.50"></text></g><g><title>__close (30,541,107 samples, 0.13%)</title><rect x="8.7737%" y="325" width="0.1282%" height="15" fill="rgb(251,28,31)" fg:x="2090146821" fg:w="30541107"/><text x="9.0237%" y="335.50"></text></g><g><title>__GI___pthread_enable_asynccancel (17,044,022 samples, 0.07%)</title><rect x="8.8304%" y="309" width="0.0715%" height="15" fill="rgb(233,223,10)" fg:x="2103643906" fg:w="17044022"/><text x="9.0804%" y="319.50"></text></g><g><title>cfree@GLIBC_2.2.5 (64,068,021 samples, 0.27%)</title><rect x="8.9019%" y="341" width="0.2689%" height="15" fill="rgb(215,21,27)" fg:x="2120687928" fg:w="64068021"/><text x="9.1519%" y="351.50"></text></g><g><title>_int_free (30,163,853 samples, 0.13%)</title><rect x="9.0443%" y="325" width="0.1266%" height="15" fill="rgb(232,23,21)" fg:x="2154592096" fg:w="30163853"/><text x="9.2943%" y="335.50"></text></g><g><title>[unknown] (15,988,571 samples, 0.07%)</title><rect x="9.3135%" y="277" width="0.0671%" height="15" fill="rgb(244,5,23)" fg:x="2218730336" fg:w="15988571"/><text x="9.5635%" y="287.50"></text></g><g><title>[unknown] (15,988,571 samples, 0.07%)</title><rect x="9.3135%" y="261" width="0.0671%" height="15" fill="rgb(226,81,46)" fg:x="2218730336" fg:w="15988571"/><text x="9.5635%" y="271.50"></text></g><g><title>[unknown] (15,988,571 samples, 0.07%)</title><rect x="9.3135%" y="245" width="0.0671%" height="15" fill="rgb(247,70,30)" fg:x="2218730336" fg:w="15988571"/><text x="9.5635%" y="255.50"></text></g><g><title>[unknown] (15,988,571 samples, 0.07%)</title><rect x="9.3135%" y="229" width="0.0671%" height="15" fill="rgb(212,68,19)" fg:x="2218730336" fg:w="15988571"/><text x="9.5635%" y="239.50"></text></g><g><title>[unknown] (15,988,571 samples, 0.07%)</title><rect x="9.3135%" y="213" width="0.0671%" height="15" fill="rgb(240,187,13)" fg:x="2218730336" fg:w="15988571"/><text x="9.5635%" y="223.50"></text></g><g><title>[unknown] (14,985,055 samples, 0.06%)</title><rect x="9.3177%" y="197" width="0.0629%" height="15" fill="rgb(223,113,26)" fg:x="2219733852" fg:w="14985055"/><text x="9.5677%" y="207.50"></text></g><g><title>[unknown] (2,415,260 samples, 0.01%)</title><rect x="9.3705%" y="181" width="0.0101%" height="15" fill="rgb(206,192,2)" fg:x="2232303647" fg:w="2415260"/><text x="9.6205%" y="191.50"></text></g><g><title>_ZN3std3sys3pal4unix2fs4File4open28_$u7b$$u7b$closure$u7d$$u7d$17h7ad264f52e504b10E.llvm.12208559908432827118 (45,796,471 samples, 0.19%)</title><rect x="9.2017%" y="325" width="0.1922%" height="15" fill="rgb(241,108,4)" fg:x="2192108267" fg:w="45796471"/><text x="9.4517%" y="335.50"></text></g><g><title>std::sys::pal::unix::fs::File::open_c (27,276,736 samples, 0.11%)</title><rect x="9.2795%" y="309" width="0.1145%" height="15" fill="rgb(247,173,49)" fg:x="2210628002" fg:w="27276736"/><text x="9.5295%" y="319.50"></text></g><g><title>__GI___libc_open (25,559,663 samples, 0.11%)</title><rect x="9.2867%" y="293" width="0.1073%" height="15" fill="rgb(224,114,35)" fg:x="2212345075" fg:w="25559663"/><text x="9.5367%" y="303.50"></text></g><g><title>__GI___pthread_enable_asynccancel (3,185,827 samples, 0.01%)</title><rect x="9.3806%" y="277" width="0.0134%" height="15" fill="rgb(245,159,27)" fg:x="2234718911" fg:w="3185827"/><text x="9.6306%" y="287.50"></text></g><g><title>__memmove_avx512_unaligned_erms (16,084,763 samples, 0.07%)</title><rect x="9.3940%" y="325" width="0.0675%" height="15" fill="rgb(245,172,44)" fg:x="2237904738" fg:w="16084763"/><text x="9.6440%" y="335.50"></text></g><g><title>std::fs::OpenOptions::_open (70,188,293 samples, 0.29%)</title><rect x="9.1709%" y="341" width="0.2946%" height="15" fill="rgb(236,23,11)" fg:x="2184755949" fg:w="70188293"/><text x="9.4209%" y="351.50"></text></g><g><title>[unknown] (25,241,408 samples, 0.11%)</title><rect x="9.6344%" y="293" width="0.1060%" height="15" fill="rgb(205,117,38)" fg:x="2295176184" fg:w="25241408"/><text x="9.8844%" y="303.50"></text></g><g><title>[unknown] (16,659,932 samples, 0.07%)</title><rect x="9.6704%" y="277" width="0.0699%" height="15" fill="rgb(237,72,25)" fg:x="2303757660" fg:w="16659932"/><text x="9.9204%" y="287.50"></text></g><g><title>[unknown] (16,659,932 samples, 0.07%)</title><rect x="9.6704%" y="261" width="0.0699%" height="15" fill="rgb(244,70,9)" fg:x="2303757660" fg:w="16659932"/><text x="9.9204%" y="271.50"></text></g><g><title>[unknown] (16,659,932 samples, 0.07%)</title><rect x="9.6704%" y="245" width="0.0699%" height="15" fill="rgb(217,125,39)" fg:x="2303757660" fg:w="16659932"/><text x="9.9204%" y="255.50"></text></g><g><title>[unknown] (16,659,932 samples, 0.07%)</title><rect x="9.6704%" y="229" width="0.0699%" height="15" fill="rgb(235,36,10)" fg:x="2303757660" fg:w="16659932"/><text x="9.9204%" y="239.50"></text></g><g><title>std::io::Write::write_all (67,002,089 samples, 0.28%)</title><rect x="9.4655%" y="341" width="0.2813%" height="15" fill="rgb(251,123,47)" fg:x="2254944242" fg:w="67002089"/><text x="9.7155%" y="351.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (65,863,251 samples, 0.28%)</title><rect x="9.4703%" y="325" width="0.2765%" height="15" fill="rgb(221,13,13)" fg:x="2256083080" fg:w="65863251"/><text x="9.7203%" y="335.50"></text></g><g><title>__GI___libc_write (36,471,571 samples, 0.15%)</title><rect x="9.5937%" y="309" width="0.1531%" height="15" fill="rgb(238,131,9)" fg:x="2285474760" fg:w="36471571"/><text x="9.8437%" y="319.50"></text></g><g><title>tokio::runtime::coop::stop (2,544,361 samples, 0.01%)</title><rect x="9.7468%" y="341" width="0.0107%" height="15" fill="rgb(211,50,8)" fg:x="2321946331" fg:w="2544361"/><text x="9.9968%" y="351.50"></text></g><g><title>&lt;std::time::Instant as core::ops::arith::Sub&gt;::sub (6,783,583 samples, 0.03%)</title><rect x="11.2566%" y="293" width="0.0285%" height="15" fill="rgb(245,182,24)" fg:x="2681642973" fg:w="6783583"/><text x="11.5066%" y="303.50"></text></g><g><title>__floattidf (2,681,039 samples, 0.01%)</title><rect x="11.2851%" y="293" width="0.0113%" height="15" fill="rgb(242,14,37)" fg:x="2688426556" fg:w="2681039"/><text x="11.5351%" y="303.50"></text></g><g><title>pow@@GLIBC_2.29 (53,863,902 samples, 0.23%)</title><rect x="11.2964%" y="293" width="0.2261%" height="15" fill="rgb(246,228,12)" fg:x="2691107595" fg:w="53863902"/><text x="11.5464%" y="303.50"></text></g><g><title>__ieee754_pow_fma (47,852,485 samples, 0.20%)</title><rect x="11.3216%" y="277" width="0.2009%" height="15" fill="rgb(213,55,15)" fg:x="2697119012" fg:w="47852485"/><text x="11.5716%" y="287.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (118,535,573 samples, 0.50%)</title><rect x="11.5225%" y="293" width="0.4976%" height="15" fill="rgb(209,9,3)" fg:x="2744971497" fg:w="118535573"/><text x="11.7725%" y="303.50"></text></g><g><title>clock_gettime@@GLIBC_2.17 (114,913,249 samples, 0.48%)</title><rect x="11.5377%" y="277" width="0.4824%" height="15" fill="rgb(230,59,30)" fg:x="2748593821" fg:w="114913249"/><text x="11.7877%" y="287.50"></text></g><g><title>__vdso_clock_gettime (109,223,075 samples, 0.46%)</title><rect x="11.5616%" y="261" width="0.4585%" height="15" fill="rgb(209,121,21)" fg:x="2754283995" fg:w="109223075"/><text x="11.8116%" y="271.50"></text></g><g><title>std::time::Instant::now (4,589,468 samples, 0.02%)</title><rect x="12.0200%" y="293" width="0.0193%" height="15" fill="rgb(220,109,13)" fg:x="2863507070" fg:w="4589468"/><text x="12.2700%" y="303.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::transition_worker_to_parked (83,783,997 samples, 0.35%)</title><rect x="12.0393%" y="293" width="0.3517%" height="15" fill="rgb(232,18,1)" fg:x="2868096538" fg:w="83783997"/><text x="12.2893%" y="303.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Steal&lt;T&gt;::steal_into (190,976,983 samples, 0.80%)</title><rect x="12.3910%" y="293" width="0.8017%" height="15" fill="rgb(215,41,42)" fg:x="2951880535" fg:w="190976983"/><text x="12.6410%" y="303.50"></text></g><g><title>_ZN5tokio7runtime4time5wheel5Wheel15next_expiration17h06cb420ada50ef8eE.llvm.3438195294553739473 (2,991,157 samples, 0.01%)</title><rect x="13.1927%" y="261" width="0.0126%" height="15" fill="rgb(224,123,36)" fg:x="3142857801" fg:w="2991157"/><text x="13.4427%" y="271.50"></text></g><g><title>_ZN5tokio7runtime4time6Driver13park_internal17h07d7677d94913ea1E.llvm.15610051396830749606 (3,156,566 samples, 0.01%)</title><rect x="13.1927%" y="277" width="0.0133%" height="15" fill="rgb(240,125,3)" fg:x="3142857801" fg:w="3156566"/><text x="13.4427%" y="287.50"></text></g><g><title>[unknown] (2,543,851 samples, 0.01%)</title><rect x="14.7240%" y="245" width="0.0107%" height="15" fill="rgb(205,98,50)" fg:x="3507672497" fg:w="2543851"/><text x="14.9740%" y="255.50"></text></g><g><title>[unknown] (15,605,200 samples, 0.07%)</title><rect x="14.7680%" y="197" width="0.0655%" height="15" fill="rgb(205,185,37)" fg:x="3518143919" fg:w="15605200"/><text x="15.0180%" y="207.50"></text></g><g><title>_ZN5tokio7runtime2io6driver6Driver4turn17h8675aa24e133238cE.llvm.4663335772621512570 (23,532,775 samples, 0.10%)</title><rect x="14.7347%" y="245" width="0.0988%" height="15" fill="rgb(238,207,15)" fg:x="3510216348" fg:w="23532775"/><text x="14.9847%" y="255.50"></text></g><g><title>mio::sys::unix::selector::Selector::select (15,605,207 samples, 0.07%)</title><rect x="14.7680%" y="229" width="0.0655%" height="15" fill="rgb(213,199,42)" fg:x="3518143916" fg:w="15605207"/><text x="15.0180%" y="239.50"></text></g><g><title>epoll_wait (15,605,206 samples, 0.07%)</title><rect x="14.7680%" y="213" width="0.0655%" height="15" fill="rgb(235,201,11)" fg:x="3518143917" fg:w="15605206"/><text x="15.0180%" y="223.50"></text></g><g><title>_ZN5tokio7runtime4time5wheel5Wheel15next_expiration17h06cb420ada50ef8eE.llvm.3438195294553739473 (31,927,185 samples, 0.13%)</title><rect x="14.8335%" y="245" width="0.1340%" height="15" fill="rgb(207,46,11)" fg:x="3533749123" fg:w="31927185"/><text x="15.0835%" y="255.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (9,965,905 samples, 0.04%)</title><rect x="14.9675%" y="245" width="0.0418%" height="15" fill="rgb(241,35,35)" fg:x="3565676308" fg:w="9965905"/><text x="15.2175%" y="255.50"></text></g><g><title>clock_gettime@@GLIBC_2.17 (9,965,905 samples, 0.04%)</title><rect x="14.9675%" y="229" width="0.0418%" height="15" fill="rgb(243,32,47)" fg:x="3565676308" fg:w="9965905"/><text x="15.2175%" y="239.50"></text></g><g><title>__vdso_clock_gettime (9,965,905 samples, 0.04%)</title><rect x="14.9675%" y="213" width="0.0418%" height="15" fill="rgb(247,202,23)" fg:x="3565676308" fg:w="9965905"/><text x="15.2175%" y="223.50"></text></g><g><title>tokio::process::imp::orphan::OrphanQueueImpl&lt;T&gt;::reap_orphans (30,094,438 samples, 0.13%)</title><rect x="15.0094%" y="245" width="0.1263%" height="15" fill="rgb(219,102,11)" fg:x="3575642213" fg:w="30094438"/><text x="15.2594%" y="255.50"></text></g><g><title>std::time::Instant::saturating_duration_since (4,943,506 samples, 0.02%)</title><rect x="15.1478%" y="229" width="0.0208%" height="15" fill="rgb(243,110,44)" fg:x="3608618902" fg:w="4943506"/><text x="15.3978%" y="239.50"></text></g><g><title>_ZN3std3sys3pal4unix4time8Timespec12sub_timespec17h41a57eccb9be52b6E.llvm.17919143677255518582 (3,512,918 samples, 0.01%)</title><rect x="15.1538%" y="213" width="0.0147%" height="15" fill="rgb(222,74,54)" fg:x="3610049490" fg:w="3512918"/><text x="15.4038%" y="223.50"></text></g><g><title>_ZN5tokio7runtime4time5wheel5Wheel15next_expiration17h06cb420ada50ef8eE.llvm.3438195294553739473 (4,550,298 samples, 0.02%)</title><rect x="16.5389%" y="213" width="0.0191%" height="15" fill="rgb(216,99,12)" fg:x="3940022845" fg:w="4550298"/><text x="16.7889%" y="223.50"></text></g><g><title>_ZN5tokio7runtime4time6Driver13park_internal17h07d7677d94913ea1E.llvm.15610051396830749606 (475,813,229 samples, 2.00%)</title><rect x="14.6359%" y="261" width="1.9973%" height="15" fill="rgb(226,22,26)" fg:x="3486666855" fg:w="475813229"/><text x="14.8859%" y="271.50">_..</text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::process (356,743,433 samples, 1.50%)</title><rect x="15.1357%" y="245" width="1.4975%" height="15" fill="rgb(217,163,10)" fg:x="3605736651" fg:w="356743433"/><text x="15.3857%" y="255.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_sharded_time (348,917,676 samples, 1.46%)</title><rect x="15.1685%" y="229" width="1.4646%" height="15" fill="rgb(213,25,53)" fg:x="3613562408" fg:w="348917676"/><text x="15.4185%" y="239.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::poll (17,906,941 samples, 0.08%)</title><rect x="16.5580%" y="213" width="0.0752%" height="15" fill="rgb(252,105,26)" fg:x="3944573143" fg:w="17906941"/><text x="16.8080%" y="223.50"></text></g><g><title>_ZN5tokio7runtime4time5wheel5Wheel15next_expiration17h06cb420ada50ef8eE.llvm.3438195294553739473 (3,485,636 samples, 0.01%)</title><rect x="16.6185%" y="197" width="0.0146%" height="15" fill="rgb(220,39,43)" fg:x="3958994448" fg:w="3485636"/><text x="16.8685%" y="207.50"></text></g><g><title>parking_lot::condvar::Condvar::wait_until_internal (138,422,921 samples, 0.58%)</title><rect x="16.6332%" y="261" width="0.5811%" height="15" fill="rgb(229,68,48)" fg:x="3962480084" fg:w="138422921"/><text x="16.8832%" y="271.50"></text></g><g><title>syscall (67,871,793 samples, 0.28%)</title><rect x="16.9293%" y="245" width="0.2849%" height="15" fill="rgb(252,8,32)" fg:x="4033031212" fg:w="67871793"/><text x="17.1793%" y="255.50"></text></g><g><title>[unknown] (67,871,793 samples, 0.28%)</title><rect x="16.9293%" y="229" width="0.2849%" height="15" fill="rgb(223,20,43)" fg:x="4033031212" fg:w="67871793"/><text x="17.1793%" y="239.50"></text></g><g><title>[unknown] (43,674,466 samples, 0.18%)</title><rect x="17.0309%" y="213" width="0.1833%" height="15" fill="rgb(229,81,49)" fg:x="4057228539" fg:w="43674466"/><text x="17.2809%" y="223.50"></text></g><g><title>[unknown] (43,674,466 samples, 0.18%)</title><rect x="17.0309%" y="197" width="0.1833%" height="15" fill="rgb(236,28,36)" fg:x="4057228539" fg:w="43674466"/><text x="17.2809%" y="207.50"></text></g><g><title>[unknown] (41,418,657 samples, 0.17%)</title><rect x="17.0404%" y="181" width="0.1739%" height="15" fill="rgb(249,185,26)" fg:x="4059484348" fg:w="41418657"/><text x="17.2904%" y="191.50"></text></g><g><title>[unknown] (41,418,657 samples, 0.17%)</title><rect x="17.0404%" y="165" width="0.1739%" height="15" fill="rgb(249,174,33)" fg:x="4059484348" fg:w="41418657"/><text x="17.2904%" y="175.50"></text></g><g><title>[unknown] (31,613,149 samples, 0.13%)</title><rect x="17.0815%" y="149" width="0.1327%" height="15" fill="rgb(233,201,37)" fg:x="4069289856" fg:w="31613149"/><text x="17.3315%" y="159.50"></text></g><g><title>[unknown] (31,613,149 samples, 0.13%)</title><rect x="17.0815%" y="133" width="0.1327%" height="15" fill="rgb(221,78,26)" fg:x="4069289856" fg:w="31613149"/><text x="17.3315%" y="143.50"></text></g><g><title>[unknown] (9,883,151 samples, 0.04%)</title><rect x="17.1727%" y="117" width="0.0415%" height="15" fill="rgb(250,127,30)" fg:x="4091019854" fg:w="9883151"/><text x="17.4227%" y="127.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::park_timeout (958,920,673 samples, 4.03%)</title><rect x="13.1927%" y="293" width="4.0252%" height="15" fill="rgb(230,49,44)" fg:x="3142857518" fg:w="958920673"/><text x="13.4427%" y="303.50">toki..</text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Parker::park (955,763,824 samples, 4.01%)</title><rect x="13.2059%" y="277" width="4.0120%" height="15" fill="rgb(229,67,23)" fg:x="3146014367" fg:w="955763824"/><text x="13.4559%" y="287.50">toki..</text></g><g><title>parking_lot_core::parking_lot::lock_bucket_pair (13,132,152 samples, 0.06%)</title><rect x="17.6659%" y="261" width="0.0551%" height="15" fill="rgb(249,83,47)" fg:x="4208508496" fg:w="13132152"/><text x="17.9159%" y="271.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (25,148,001 samples, 0.11%)</title><rect x="17.7210%" y="261" width="0.1056%" height="15" fill="rgb(215,43,3)" fg:x="4221640648" fg:w="25148001"/><text x="17.9710%" y="271.50"></text></g><g><title>clock_gettime@@GLIBC_2.17 (25,148,001 samples, 0.11%)</title><rect x="17.7210%" y="245" width="0.1056%" height="15" fill="rgb(238,154,13)" fg:x="4221640648" fg:w="25148001"/><text x="17.9710%" y="255.50"></text></g><g><title>__vdso_clock_gettime (20,132,238 samples, 0.08%)</title><rect x="17.7421%" y="229" width="0.0845%" height="15" fill="rgb(219,56,2)" fg:x="4226656411" fg:w="20132238"/><text x="17.9921%" y="239.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (130,433,922 samples, 0.55%)</title><rect x="17.4706%" y="277" width="0.5475%" height="15" fill="rgb(233,0,4)" fg:x="4161970404" fg:w="130433922"/><text x="17.7206%" y="287.50"></text></g><g><title>syscall (45,615,677 samples, 0.19%)</title><rect x="17.8266%" y="261" width="0.1915%" height="15" fill="rgb(235,30,7)" fg:x="4246788649" fg:w="45615677"/><text x="18.0766%" y="271.50"></text></g><g><title>[unknown] (45,615,677 samples, 0.19%)</title><rect x="17.8266%" y="245" width="0.1915%" height="15" fill="rgb(250,79,13)" fg:x="4246788649" fg:w="45615677"/><text x="18.0766%" y="255.50"></text></g><g><title>[unknown] (21,271,372 samples, 0.09%)</title><rect x="17.9288%" y="229" width="0.0893%" height="15" fill="rgb(211,146,34)" fg:x="4271132954" fg:w="21271372"/><text x="18.1788%" y="239.50"></text></g><g><title>[unknown] (18,611,446 samples, 0.08%)</title><rect x="17.9400%" y="213" width="0.0781%" height="15" fill="rgb(228,22,38)" fg:x="4273792880" fg:w="18611446"/><text x="18.1900%" y="223.50"></text></g><g><title>[unknown] (17,181,207 samples, 0.07%)</title><rect x="17.9460%" y="197" width="0.0721%" height="15" fill="rgb(235,168,5)" fg:x="4275223119" fg:w="17181207"/><text x="18.1960%" y="207.50"></text></g><g><title>[unknown] (17,181,207 samples, 0.07%)</title><rect x="17.9460%" y="181" width="0.0721%" height="15" fill="rgb(221,155,16)" fg:x="4275223119" fg:w="17181207"/><text x="18.1960%" y="191.50"></text></g><g><title>[unknown] (11,996,967 samples, 0.05%)</title><rect x="17.9677%" y="165" width="0.0504%" height="15" fill="rgb(215,215,53)" fg:x="4280407359" fg:w="11996967"/><text x="18.2177%" y="175.50"></text></g><g><title>tokio::runtime::driver::IoHandle::unpark (17,185,172 samples, 0.07%)</title><rect x="18.0181%" y="277" width="0.0721%" height="15" fill="rgb(223,4,10)" fg:x="4292404326" fg:w="17185172"/><text x="18.2681%" y="287.50"></text></g><g><title>mio::sys::unix::waker::Waker::wake (17,185,172 samples, 0.07%)</title><rect x="18.0181%" y="261" width="0.0721%" height="15" fill="rgb(234,103,6)" fg:x="4292404326" fg:w="17185172"/><text x="18.2681%" y="271.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (17,185,172 samples, 0.07%)</title><rect x="18.0181%" y="245" width="0.0721%" height="15" fill="rgb(227,97,0)" fg:x="4292404326" fg:w="17185172"/><text x="18.2681%" y="255.50"></text></g><g><title>__GI___libc_write (17,185,172 samples, 0.07%)</title><rect x="18.0181%" y="229" width="0.0721%" height="15" fill="rgb(234,150,53)" fg:x="4292404326" fg:w="17185172"/><text x="18.2681%" y="239.50"></text></g><g><title>[unknown] (17,185,171 samples, 0.07%)</title><rect x="18.0181%" y="213" width="0.0721%" height="15" fill="rgb(228,201,54)" fg:x="4292404327" fg:w="17185171"/><text x="18.2681%" y="223.50"></text></g><g><title>[unknown] (7,084,827 samples, 0.03%)</title><rect x="18.0605%" y="197" width="0.0297%" height="15" fill="rgb(222,22,37)" fg:x="4302504671" fg:w="7084827"/><text x="18.3105%" y="207.50"></text></g><g><title>[unknown] (7,084,827 samples, 0.03%)</title><rect x="18.0605%" y="181" width="0.0297%" height="15" fill="rgb(237,53,32)" fg:x="4302504671" fg:w="7084827"/><text x="18.3105%" y="191.50"></text></g><g><title>[unknown] (7,084,827 samples, 0.03%)</title><rect x="18.0605%" y="165" width="0.0297%" height="15" fill="rgb(233,25,53)" fg:x="4302504671" fg:w="7084827"/><text x="18.3105%" y="175.50"></text></g><g><title>[unknown] (7,084,827 samples, 0.03%)</title><rect x="18.0605%" y="149" width="0.0297%" height="15" fill="rgb(210,40,34)" fg:x="4302504671" fg:w="7084827"/><text x="18.3105%" y="159.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Unparker::unpark (40,003,471 samples, 0.17%)</title><rect x="18.0902%" y="277" width="0.1679%" height="15" fill="rgb(241,220,44)" fg:x="4309589498" fg:w="40003471"/><text x="18.3402%" y="287.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::transition_worker_from_searching (124,808,670 samples, 0.52%)</title><rect x="18.2581%" y="277" width="0.5239%" height="15" fill="rgb(235,28,35)" fg:x="4349592969" fg:w="124808670"/><text x="18.5081%" y="287.50"></text></g><g><title>__memmove_avx512_unaligned_erms (3,537,705 samples, 0.01%)</title><rect x="19.3993%" y="197" width="0.0149%" height="15" fill="rgb(210,56,17)" fg:x="4621449410" fg:w="3537705"/><text x="19.6493%" y="207.50"></text></g><g><title>_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h90afc9e2428f90aeE.llvm.4813577462813638135 (84,944,227 samples, 0.36%)</title><rect x="19.1737%" y="213" width="0.3566%" height="15" fill="rgb(224,130,29)" fg:x="4567712613" fg:w="84944227"/><text x="19.4237%" y="223.50"></text></g><g><title>malloc (27,669,725 samples, 0.12%)</title><rect x="19.4142%" y="197" width="0.1161%" height="15" fill="rgb(235,212,8)" fg:x="4624987115" fg:w="27669725"/><text x="19.6642%" y="207.50"></text></g><g><title>_int_malloc (6,991,653 samples, 0.03%)</title><rect x="19.5010%" y="181" width="0.0293%" height="15" fill="rgb(223,33,50)" fg:x="4645665187" fg:w="6991653"/><text x="19.7510%" y="191.50"></text></g><g><title>unlink_chunk.isra.0 (4,947,206 samples, 0.02%)</title><rect x="19.5095%" y="165" width="0.0208%" height="15" fill="rgb(219,149,13)" fg:x="4647709634" fg:w="4947206"/><text x="19.7595%" y="175.50"></text></g><g><title>_ZN90_$LT$core..str..iter..Split$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hb0ef8c34696a493eE.llvm.4813577462813638135 (38,668,964 samples, 0.16%)</title><rect x="19.5303%" y="213" width="0.1623%" height="15" fill="rgb(250,156,29)" fg:x="4652656840" fg:w="38668964"/><text x="19.7803%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (152,215,430 samples, 0.64%)</title><rect x="19.0921%" y="229" width="0.6389%" height="15" fill="rgb(216,193,19)" fg:x="4548253310" fg:w="152215430"/><text x="19.3421%" y="239.50"></text></g><g><title>malloc (9,142,936 samples, 0.04%)</title><rect x="19.6926%" y="213" width="0.0384%" height="15" fill="rgb(216,135,14)" fg:x="4691325804" fg:w="9142936"/><text x="19.9426%" y="223.50"></text></g><g><title>cfree@GLIBC_2.2.5 (5,199,220 samples, 0.02%)</title><rect x="19.7310%" y="229" width="0.0218%" height="15" fill="rgb(241,47,5)" fg:x="4700468740" fg:w="5199220"/><text x="19.9810%" y="239.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (5,429,015 samples, 0.02%)</title><rect x="20.6199%" y="213" width="0.0228%" height="15" fill="rgb(233,42,35)" fg:x="4912231918" fg:w="5429015"/><text x="20.8699%" y="223.50"></text></g><g><title>__memmove_avx512_unaligned_erms (5,429,015 samples, 0.02%)</title><rect x="20.6199%" y="197" width="0.0228%" height="15" fill="rgb(231,13,6)" fg:x="4912231918" fg:w="5429015"/><text x="20.8699%" y="207.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9,292,141 samples, 0.04%)</title><rect x="20.6427%" y="213" width="0.0390%" height="15" fill="rgb(207,181,40)" fg:x="4917660933" fg:w="9292141"/><text x="20.8927%" y="223.50"></text></g><g><title>cfree@GLIBC_2.2.5 (9,292,141 samples, 0.04%)</title><rect x="20.6427%" y="197" width="0.0390%" height="15" fill="rgb(254,173,49)" fg:x="4917660933" fg:w="9292141"/><text x="20.8927%" y="207.50"></text></g><g><title>_int_free (9,292,141 samples, 0.04%)</title><rect x="20.6427%" y="181" width="0.0390%" height="15" fill="rgb(221,1,38)" fg:x="4917660933" fg:w="9292141"/><text x="20.8927%" y="191.50"></text></g><g><title>__memmove_avx512_unaligned_erms (8,651,387 samples, 0.04%)</title><rect x="21.2957%" y="181" width="0.0363%" height="15" fill="rgb(206,124,46)" fg:x="5073220576" fg:w="8651387"/><text x="21.5457%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (36,098,394 samples, 0.15%)</title><rect x="21.3320%" y="181" width="0.1515%" height="15" fill="rgb(249,21,11)" fg:x="5081871963" fg:w="36098394"/><text x="21.5820%" y="191.50"></text></g><g><title>_ZN5alloc7raw_vec11finish_grow17hf209fe31e4e4cc06E.llvm.998171877167897952 (36,090,699 samples, 0.15%)</title><rect x="21.3320%" y="165" width="0.1515%" height="15" fill="rgb(222,201,40)" fg:x="5081879658" fg:w="36090699"/><text x="21.5820%" y="175.50"></text></g><g><title>malloc (36,090,699 samples, 0.15%)</title><rect x="21.3320%" y="149" width="0.1515%" height="15" fill="rgb(235,61,29)" fg:x="5081879658" fg:w="36090699"/><text x="21.5820%" y="159.50"></text></g><g><title>_int_malloc (23,164,930 samples, 0.10%)</title><rect x="21.3863%" y="133" width="0.0972%" height="15" fill="rgb(219,207,3)" fg:x="5094805427" fg:w="23164930"/><text x="21.6363%" y="143.50"></text></g><g><title>unlink_chunk.isra.0 (2,427,222 samples, 0.01%)</title><rect x="21.4733%" y="117" width="0.0102%" height="15" fill="rgb(222,56,46)" fg:x="5115543135" fg:w="2427222"/><text x="21.7233%" y="127.50"></text></g><g><title>__memmove_avx512_unaligned_erms (4,765,092 samples, 0.02%)</title><rect x="21.8650%" y="165" width="0.0200%" height="15" fill="rgb(239,76,54)" fg:x="5208839751" fg:w="4765092"/><text x="22.1150%" y="175.50"></text></g><g><title>_int_free_merge_chunk (2,944,213 samples, 0.01%)</title><rect x="21.8850%" y="101" width="0.0124%" height="15" fill="rgb(231,124,27)" fg:x="5213604843" fg:w="2944213"/><text x="22.1350%" y="111.50"></text></g><g><title>_int_free_create_chunk (2,944,213 samples, 0.01%)</title><rect x="21.8850%" y="85" width="0.0124%" height="15" fill="rgb(249,195,6)" fg:x="5213604843" fg:w="2944213"/><text x="22.1350%" y="95.50"></text></g><g><title>__rdl_alloc (16,217,477 samples, 0.07%)</title><rect x="21.8850%" y="165" width="0.0681%" height="15" fill="rgb(237,174,47)" fg:x="5213604843" fg:w="16217477"/><text x="22.1350%" y="175.50"></text></g><g><title>__posix_memalign (16,217,477 samples, 0.07%)</title><rect x="21.8850%" y="149" width="0.0681%" height="15" fill="rgb(206,201,31)" fg:x="5213604843" fg:w="16217477"/><text x="22.1350%" y="159.50"></text></g><g><title>_mid_memalign.isra.0 (16,217,477 samples, 0.07%)</title><rect x="21.8850%" y="133" width="0.0681%" height="15" fill="rgb(231,57,52)" fg:x="5213604843" fg:w="16217477"/><text x="22.1350%" y="143.50"></text></g><g><title>_int_memalign (16,217,477 samples, 0.07%)</title><rect x="21.8850%" y="117" width="0.0681%" height="15" fill="rgb(248,177,22)" fg:x="5213604843" fg:w="16217477"/><text x="22.1350%" y="127.50"></text></g><g><title>_int_malloc (13,273,264 samples, 0.06%)</title><rect x="21.8973%" y="101" width="0.0557%" height="15" fill="rgb(215,211,37)" fg:x="5216549056" fg:w="13273264"/><text x="22.1473%" y="111.50"></text></g><g><title>malloc_consolidate (9,680,469 samples, 0.04%)</title><rect x="21.9124%" y="85" width="0.0406%" height="15" fill="rgb(241,128,51)" fg:x="5220141851" fg:w="9680469"/><text x="22.1624%" y="95.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (150,202,599 samples, 0.63%)</title><rect x="22.1942%" y="149" width="0.6305%" height="15" fill="rgb(227,165,31)" fg:x="5287262451" fg:w="150202599"/><text x="22.4442%" y="159.50"></text></g><g><title>parking_lot_core::parking_lot::lock_bucket_pair (69,523,461 samples, 0.29%)</title><rect x="22.5328%" y="133" width="0.2918%" height="15" fill="rgb(228,167,24)" fg:x="5367941589" fg:w="69523461"/><text x="22.7828%" y="143.50"></text></g><g><title>parking_lot::raw_mutex::RawMutex::unlock_slow (40,935,952 samples, 0.17%)</title><rect x="22.8247%" y="149" width="0.1718%" height="15" fill="rgb(228,143,12)" fg:x="5437465050" fg:w="40935952"/><text x="23.0747%" y="159.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (29,445,989 samples, 0.12%)</title><rect x="22.8729%" y="133" width="0.1236%" height="15" fill="rgb(249,149,8)" fg:x="5448955013" fg:w="29445989"/><text x="23.1229%" y="143.50"></text></g><g><title>clock_gettime@@GLIBC_2.17 (29,445,989 samples, 0.12%)</title><rect x="22.8729%" y="117" width="0.1236%" height="15" fill="rgb(243,35,44)" fg:x="5448955013" fg:w="29445989"/><text x="23.1229%" y="127.50"></text></g><g><title>__vdso_clock_gettime (26,133,974 samples, 0.11%)</title><rect x="22.8868%" y="101" width="0.1097%" height="15" fill="rgb(246,89,9)" fg:x="5452267028" fg:w="26133974"/><text x="23.1368%" y="111.50"></text></g><g><title>&lt;tokio::io::util::write_all::WriteAll&lt;W&gt; as core::future::future::Future&gt;::poll (574,193,890 samples, 2.41%)</title><rect x="20.6817%" y="213" width="2.4103%" height="15" fill="rgb(233,213,13)" fg:x="4926953074" fg:w="574193890"/><text x="20.9317%" y="223.50">&lt;t..</text></g><g><title>&lt;tokio::fs::file::File as tokio::io::async_write::AsyncWrite&gt;::poll_write (567,867,056 samples, 2.38%)</title><rect x="20.7083%" y="197" width="2.3837%" height="15" fill="rgb(233,141,41)" fg:x="4933279908" fg:w="567867056"/><text x="20.9583%" y="207.50">&lt;t..</text></g><g><title>tokio::runtime::blocking::pool::spawn_mandatory_blocking (383,176,607 samples, 1.61%)</title><rect x="21.4835%" y="181" width="1.6084%" height="15" fill="rgb(239,167,4)" fg:x="5117970357" fg:w="383176607"/><text x="21.7335%" y="191.50"></text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_task (271,324,644 samples, 1.14%)</title><rect x="21.9531%" y="165" width="1.1389%" height="15" fill="rgb(209,217,16)" fg:x="5229822320" fg:w="271324644"/><text x="22.2031%" y="175.50"></text></g><g><title>syscall (22,745,962 samples, 0.10%)</title><rect x="22.9965%" y="149" width="0.0955%" height="15" fill="rgb(219,88,35)" fg:x="5478401002" fg:w="22745962"/><text x="23.2465%" y="159.50"></text></g><g><title>[unknown] (22,745,962 samples, 0.10%)</title><rect x="22.9965%" y="133" width="0.0955%" height="15" fill="rgb(220,193,23)" fg:x="5478401002" fg:w="22745962"/><text x="23.2465%" y="143.50"></text></g><g><title>[unknown] (20,586,796 samples, 0.09%)</title><rect x="23.0056%" y="117" width="0.0864%" height="15" fill="rgb(230,90,52)" fg:x="5480560168" fg:w="20586796"/><text x="23.2556%" y="127.50"></text></g><g><title>[unknown] (20,586,796 samples, 0.09%)</title><rect x="23.0056%" y="101" width="0.0864%" height="15" fill="rgb(252,106,19)" fg:x="5480560168" fg:w="20586796"/><text x="23.2556%" y="111.50"></text></g><g><title>[unknown] (20,586,796 samples, 0.09%)</title><rect x="23.0056%" y="85" width="0.0864%" height="15" fill="rgb(206,74,20)" fg:x="5480560168" fg:w="20586796"/><text x="23.2556%" y="95.50"></text></g><g><title>[unknown] (20,586,796 samples, 0.09%)</title><rect x="23.0056%" y="69" width="0.0864%" height="15" fill="rgb(230,138,44)" fg:x="5480560168" fg:w="20586796"/><text x="23.2556%" y="79.50"></text></g><g><title>&lt;tokio::sync::mpsc::bounded::Semaphore as tokio::sync::mpsc::chan::Semaphore&gt;::add_permits (3,667,593 samples, 0.02%)</title><rect x="23.0920%" y="213" width="0.0154%" height="15" fill="rgb(235,182,43)" fg:x="5501146964" fg:w="3667593"/><text x="23.3420%" y="223.50"></text></g><g><title>_ZN5tokio4sync15batch_semaphore9Semaphore18add_permits_locked17h7baebb2818aa783eE.llvm.1981642368882228938 (6,204,910 samples, 0.03%)</title><rect x="23.1074%" y="213" width="0.0260%" height="15" fill="rgb(242,16,51)" fg:x="5504814557" fg:w="6204910"/><text x="23.3574%" y="223.50"></text></g><g><title>__memmove_avx512_unaligned_erms (56,191,052 samples, 0.24%)</title><rect x="23.1334%" y="213" width="0.2359%" height="15" fill="rgb(248,9,4)" fg:x="5511019467" fg:w="56191052"/><text x="23.3834%" y="223.50"></text></g><g><title>__rust_dealloc (6,369,780 samples, 0.03%)</title><rect x="23.3693%" y="213" width="0.0267%" height="15" fill="rgb(210,31,22)" fg:x="5567210519" fg:w="6369780"/><text x="23.6193%" y="223.50"></text></g><g><title>__memmove_avx512_unaligned_erms (10,874,075 samples, 0.05%)</title><rect x="23.5586%" y="165" width="0.0456%" height="15" fill="rgb(239,54,39)" fg:x="5612305497" fg:w="10874075"/><text x="23.8086%" y="175.50"></text></g><g><title>__rdl_realloc (2,824,030 samples, 0.01%)</title><rect x="23.6610%" y="133" width="0.0119%" height="15" fill="rgb(230,99,41)" fg:x="5636700605" fg:w="2824030"/><text x="23.9110%" y="143.50"></text></g><g><title>malloc (14,456,937 samples, 0.06%)</title><rect x="23.6728%" y="133" width="0.0607%" height="15" fill="rgb(253,106,12)" fg:x="5639524635" fg:w="14456937"/><text x="23.9228%" y="143.50"></text></g><g><title>_int_malloc (12,057,014 samples, 0.05%)</title><rect x="23.6829%" y="117" width="0.0506%" height="15" fill="rgb(213,46,41)" fg:x="5641924558" fg:w="12057014"/><text x="23.9329%" y="127.50"></text></g><g><title>unlink_chunk.isra.0 (10,787,950 samples, 0.05%)</title><rect x="23.6882%" y="101" width="0.0453%" height="15" fill="rgb(215,133,35)" fg:x="5643193622" fg:w="10787950"/><text x="23.9382%" y="111.50"></text></g><g><title>__memmove_avx512_unaligned_erms (8,038,442 samples, 0.03%)</title><rect x="24.0492%" y="101" width="0.0337%" height="15" fill="rgb(213,28,5)" fg:x="5729194288" fg:w="8038442"/><text x="24.2992%" y="111.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (179,969,509 samples, 0.76%)</title><rect x="23.5206%" y="181" width="0.7555%" height="15" fill="rgb(215,77,49)" fg:x="5603255475" fg:w="179969509"/><text x="23.7706%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (160,045,412 samples, 0.67%)</title><rect x="23.6042%" y="165" width="0.6718%" height="15" fill="rgb(248,100,22)" fg:x="5623179572" fg:w="160045412"/><text x="23.8542%" y="175.50"></text></g><g><title>_ZN5alloc7raw_vec11finish_grow17h33f5048dc056c1bcE.llvm.12301238535100556632 (146,524,379 samples, 0.62%)</title><rect x="23.6610%" y="149" width="0.6151%" height="15" fill="rgb(208,67,9)" fg:x="5636700605" fg:w="146524379"/><text x="23.9110%" y="159.50"></text></g><g><title>realloc (129,243,412 samples, 0.54%)</title><rect x="23.7335%" y="133" width="0.5425%" height="15" fill="rgb(219,133,21)" fg:x="5653981572" fg:w="129243412"/><text x="23.9835%" y="143.50"></text></g><g><title>_int_realloc (55,709,785 samples, 0.23%)</title><rect x="24.0422%" y="117" width="0.2339%" height="15" fill="rgb(246,46,29)" fg:x="5727515199" fg:w="55709785"/><text x="24.2922%" y="127.50"></text></g><g><title>_int_malloc (45,992,254 samples, 0.19%)</title><rect x="24.0830%" y="101" width="0.1931%" height="15" fill="rgb(246,185,52)" fg:x="5737232730" fg:w="45992254"/><text x="24.3330%" y="111.50"></text></g><g><title>alloc::fmt::format::format_inner (211,371,818 samples, 0.89%)</title><rect x="23.3960%" y="213" width="0.8873%" height="15" fill="rgb(252,136,11)" fg:x="5573580299" fg:w="211371818"/><text x="23.6460%" y="223.50"></text></g><g><title>core::fmt::write (188,322,113 samples, 0.79%)</title><rect x="23.4928%" y="197" width="0.7905%" height="15" fill="rgb(219,138,53)" fg:x="5596630004" fg:w="188322113"/><text x="23.7428%" y="207.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (5,719,841 samples, 0.02%)</title><rect x="24.3288%" y="197" width="0.0240%" height="15" fill="rgb(211,51,23)" fg:x="5795781015" fg:w="5719841"/><text x="24.5788%" y="207.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (22,874,970 samples, 0.10%)</title><rect x="24.2833%" y="213" width="0.0960%" height="15" fill="rgb(247,221,28)" fg:x="5784952117" fg:w="22874970"/><text x="24.5333%" y="223.50"></text></g><g><title>malloc (6,326,231 samples, 0.03%)</title><rect x="24.3528%" y="197" width="0.0266%" height="15" fill="rgb(251,222,45)" fg:x="5801500856" fg:w="6326231"/><text x="24.6028%" y="207.50"></text></g><g><title>cfree@GLIBC_2.2.5 (89,081,381 samples, 0.37%)</title><rect x="24.3793%" y="213" width="0.3739%" height="15" fill="rgb(217,162,53)" fg:x="5807827087" fg:w="89081381"/><text x="24.6293%" y="223.50"></text></g><g><title>_int_free (67,353,083 samples, 0.28%)</title><rect x="24.4705%" y="197" width="0.2827%" height="15" fill="rgb(229,93,14)" fg:x="5829555385" fg:w="67353083"/><text x="24.7205%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;sider::commands::keys::incr_decr::{{closure}}&gt; (2,596,461 samples, 0.01%)</title><rect x="24.7593%" y="213" width="0.0109%" height="15" fill="rgb(209,67,49)" fg:x="5898338016" fg:w="2596461"/><text x="25.0093%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;sider::types::DbValue&gt; (3,868,749 samples, 0.02%)</title><rect x="24.7797%" y="213" width="0.0162%" height="15" fill="rgb(213,87,29)" fg:x="5903208178" fg:w="3868749"/><text x="25.0297%" y="223.50"></text></g><g><title>__rust_dealloc (3,868,749 samples, 0.02%)</title><rect x="24.7797%" y="197" width="0.0162%" height="15" fill="rgb(205,151,52)" fg:x="5903208178" fg:w="3868749"/><text x="25.0297%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::fs::file::File&gt; (16,827,831 samples, 0.07%)</title><rect x="24.7959%" y="213" width="0.0706%" height="15" fill="rgb(253,215,39)" fg:x="5907076927" fg:w="16827831"/><text x="25.0459%" y="223.50"></text></g><g><title>tokio::runtime::task::state::State::drop_join_handle_fast (16,827,777 samples, 0.07%)</title><rect x="24.7959%" y="197" width="0.0706%" height="15" fill="rgb(221,220,41)" fg:x="5907076981" fg:w="16827777"/><text x="25.0459%" y="207.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::insert (2,879,123 samples, 0.01%)</title><rect x="24.8666%" y="213" width="0.0121%" height="15" fill="rgb(218,133,21)" fg:x="5923904758" fg:w="2879123"/><text x="25.1166%" y="223.50"></text></g><g><title>malloc (32,483,056 samples, 0.14%)</title><rect x="24.9497%" y="117" width="0.1364%" height="15" fill="rgb(221,193,43)" fg:x="5943695176" fg:w="32483056"/><text x="25.1997%" y="127.50"></text></g><g><title>_int_malloc (13,254,274 samples, 0.06%)</title><rect x="25.0304%" y="101" width="0.0556%" height="15" fill="rgb(240,128,52)" fg:x="5962923958" fg:w="13254274"/><text x="25.2804%" y="111.50"></text></g><g><title>unlink_chunk.isra.0 (12,546,659 samples, 0.05%)</title><rect x="25.0333%" y="85" width="0.0527%" height="15" fill="rgb(253,114,12)" fg:x="5963631573" fg:w="12546659"/><text x="25.2833%" y="95.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (48,423,836 samples, 0.20%)</title><rect x="24.9365%" y="165" width="0.2033%" height="15" fill="rgb(215,223,47)" fg:x="5940559261" fg:w="48423836"/><text x="25.1865%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (48,401,423 samples, 0.20%)</title><rect x="24.9366%" y="149" width="0.2032%" height="15" fill="rgb(248,225,23)" fg:x="5940581674" fg:w="48401423"/><text x="25.1866%" y="159.50"></text></g><g><title>_ZN5alloc7raw_vec11finish_grow17h33f5048dc056c1bcE.llvm.12301238535100556632 (46,247,259 samples, 0.19%)</title><rect x="24.9456%" y="133" width="0.1941%" height="15" fill="rgb(250,108,0)" fg:x="5942735838" fg:w="46247259"/><text x="25.1956%" y="143.50"></text></g><g><title>realloc (12,804,865 samples, 0.05%)</title><rect x="25.0860%" y="117" width="0.0538%" height="15" fill="rgb(228,208,7)" fg:x="5976178232" fg:w="12804865"/><text x="25.3360%" y="127.50"></text></g><g><title>_int_realloc (3,724,719 samples, 0.02%)</title><rect x="25.1241%" y="101" width="0.0156%" height="15" fill="rgb(244,45,10)" fg:x="5985258378" fg:w="3724719"/><text x="25.3741%" y="111.50"></text></g><g><title>_int_malloc (2,431,347 samples, 0.01%)</title><rect x="25.1295%" y="85" width="0.0102%" height="15" fill="rgb(207,125,25)" fg:x="5986551750" fg:w="2431347"/><text x="25.3795%" y="95.50"></text></g><g><title>alloc::fmt::format::format_inner (62,580,431 samples, 0.26%)</title><rect x="24.8984%" y="197" width="0.2627%" height="15" fill="rgb(210,195,18)" fg:x="5931477149" fg:w="62580431"/><text x="25.1484%" y="207.50"></text></g><g><title>core::fmt::write (57,600,182 samples, 0.24%)</title><rect x="24.9193%" y="181" width="0.2418%" height="15" fill="rgb(249,80,12)" fg:x="5936457398" fg:w="57600182"/><text x="25.1693%" y="191.50"></text></g><g><title>core::fmt::Formatter::pad (5,074,483 samples, 0.02%)</title><rect x="25.1398%" y="165" width="0.0213%" height="15" fill="rgb(221,65,9)" fg:x="5988983097" fg:w="5074483"/><text x="25.3898%" y="175.50"></text></g><g><title>alloc::str::join_generic_copy (35,643,049 samples, 0.15%)</title><rect x="25.1611%" y="197" width="0.1496%" height="15" fill="rgb(235,49,36)" fg:x="5994057580" fg:w="35643049"/><text x="25.4111%" y="207.50"></text></g><g><title>malloc (20,485,251 samples, 0.09%)</title><rect x="25.2247%" y="181" width="0.0860%" height="15" fill="rgb(225,32,20)" fg:x="6009215378" fg:w="20485251"/><text x="25.4747%" y="191.50"></text></g><g><title>_int_malloc (12,025,673 samples, 0.05%)</title><rect x="25.2602%" y="165" width="0.0505%" height="15" fill="rgb(215,141,46)" fg:x="6017674956" fg:w="12025673"/><text x="25.5102%" y="175.50"></text></g><g><title>unlink_chunk.isra.0 (12,025,673 samples, 0.05%)</title><rect x="25.2602%" y="149" width="0.0505%" height="15" fill="rgb(250,160,47)" fg:x="6017674956" fg:w="12025673"/><text x="25.5102%" y="159.50"></text></g><g><title>sider::aof::format_command_args (107,722,875 samples, 0.45%)</title><rect x="24.8787%" y="213" width="0.4522%" height="15" fill="rgb(216,222,40)" fg:x="5926783881" fg:w="107722875"/><text x="25.1287%" y="223.50"></text></g><g><title>cfree@GLIBC_2.2.5 (4,806,127 samples, 0.02%)</title><rect x="25.3107%" y="197" width="0.0202%" height="15" fill="rgb(234,217,39)" fg:x="6029700629" fg:w="4806127"/><text x="25.5607%" y="207.50"></text></g><g><title>_int_free (4,806,127 samples, 0.02%)</title><rect x="25.3107%" y="181" width="0.0202%" height="15" fill="rgb(207,178,40)" fg:x="6029700629" fg:w="4806127"/><text x="25.5607%" y="191.50"></text></g><g><title>__strlen_evex (9,270,909 samples, 0.04%)</title><rect x="25.5108%" y="133" width="0.0389%" height="15" fill="rgb(221,136,13)" fg:x="6077382139" fg:w="9270909"/><text x="25.7608%" y="143.50"></text></g><g><title>__strlen_evex (47,667,864 samples, 0.20%)</title><rect x="25.6156%" y="117" width="0.2001%" height="15" fill="rgb(249,199,10)" fg:x="6102337963" fg:w="47667864"/><text x="25.8656%" y="127.50"></text></g><g><title>getenv (68,930,678 samples, 0.29%)</title><rect x="25.5497%" y="133" width="0.2893%" height="15" fill="rgb(249,222,13)" fg:x="6086653048" fg:w="68930678"/><text x="25.7997%" y="143.50"></text></g><g><title>__strncmp_evex (5,577,899 samples, 0.02%)</title><rect x="25.8157%" y="117" width="0.0234%" height="15" fill="rgb(244,185,38)" fg:x="6150005827" fg:w="5577899"/><text x="26.0657%" y="127.50"></text></g><g><title>_ZN3std3sys3pal4unix2os6getenv28_$u7b$$u7b$closure$u7d$$u7d$17h566fcac9165df7eeE.llvm.10859909865963893318 (150,751,008 samples, 0.63%)</title><rect x="25.4925%" y="149" width="0.6328%" height="15" fill="rgb(236,202,9)" fg:x="6073009660" fg:w="150751008"/><text x="25.7425%" y="159.50"></text></g><g><title>malloc (68,176,942 samples, 0.29%)</title><rect x="25.8391%" y="133" width="0.2862%" height="15" fill="rgb(250,229,37)" fg:x="6155583726" fg:w="68176942"/><text x="26.0891%" y="143.50"></text></g><g><title>_int_malloc (36,465,985 samples, 0.15%)</title><rect x="25.9722%" y="117" width="0.1531%" height="15" fill="rgb(206,174,23)" fg:x="6187294683" fg:w="36465985"/><text x="26.2222%" y="127.50"></text></g><g><title>unlink_chunk.isra.0 (5,723,220 samples, 0.02%)</title><rect x="26.1012%" y="101" width="0.0240%" height="15" fill="rgb(211,33,43)" fg:x="6218037448" fg:w="5723220"/><text x="26.3512%" y="111.50"></text></g><g><title>dirs::home_dir (191,625,648 samples, 0.80%)</title><rect x="25.3308%" y="197" width="0.8044%" height="15" fill="rgb(245,58,50)" fg:x="6034506756" fg:w="191625648"/><text x="25.5808%" y="207.50"></text></g><g><title>dirs_sys::target_unix_not_redox::home_dir (191,625,648 samples, 0.80%)</title><rect x="25.3308%" y="181" width="0.8044%" height="15" fill="rgb(244,68,36)" fg:x="6034506756" fg:w="191625648"/><text x="25.5808%" y="191.50"></text></g><g><title>std::env::_var_os (191,625,648 samples, 0.80%)</title><rect x="25.3308%" y="165" width="0.8044%" height="15" fill="rgb(232,229,15)" fg:x="6034506756" fg:w="191625648"/><text x="25.5808%" y="175.50"></text></g><g><title>__memmove_avx512_unaligned_erms (25,427,968 samples, 0.11%)</title><rect x="26.4363%" y="117" width="0.1067%" height="15" fill="rgb(254,30,23)" fg:x="6297865292" fg:w="25427968"/><text x="26.6863%" y="127.50"></text></g><g><title>_int_malloc (24,180,789 samples, 0.10%)</title><rect x="26.5431%" y="117" width="0.1015%" height="15" fill="rgb(235,160,14)" fg:x="6323293260" fg:w="24180789"/><text x="26.7931%" y="127.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (133,649,282 samples, 0.56%)</title><rect x="26.1558%" y="181" width="0.5610%" height="15" fill="rgb(212,155,44)" fg:x="6231023129" fg:w="133649282"/><text x="26.4058%" y="191.50"></text></g><g><title>_ZN5alloc7raw_vec11finish_grow17h218f43d8fb585840E.llvm.7876563497402748525 (133,649,282 samples, 0.56%)</title><rect x="26.1558%" y="165" width="0.5610%" height="15" fill="rgb(226,2,50)" fg:x="6231023129" fg:w="133649282"/><text x="26.4058%" y="175.50"></text></g><g><title>realloc (133,649,281 samples, 0.56%)</title><rect x="26.1558%" y="149" width="0.5610%" height="15" fill="rgb(234,177,6)" fg:x="6231023130" fg:w="133649281"/><text x="26.4058%" y="159.50"></text></g><g><title>_int_realloc (83,915,443 samples, 0.35%)</title><rect x="26.3645%" y="133" width="0.3522%" height="15" fill="rgb(217,24,9)" fg:x="6280756968" fg:w="83915443"/><text x="26.6145%" y="143.50"></text></g><g><title>unlink_chunk.isra.0 (17,198,362 samples, 0.07%)</title><rect x="26.6446%" y="117" width="0.0722%" height="15" fill="rgb(220,13,46)" fg:x="6347474049" fg:w="17198362"/><text x="26.8946%" y="127.50"></text></g><g><title>sider::aof::get_aof_log_dir (440,938,344 samples, 1.85%)</title><rect x="25.3308%" y="213" width="1.8509%" height="15" fill="rgb(239,221,27)" fg:x="6034506756" fg:w="440938344"/><text x="25.5808%" y="223.50">s..</text></g><g><title>std::path::Path::_join (249,312,696 samples, 1.05%)</title><rect x="26.1352%" y="197" width="1.0465%" height="15" fill="rgb(222,198,25)" fg:x="6226132404" fg:w="249312696"/><text x="26.3852%" y="207.50"></text></g><g><title>malloc (110,772,689 samples, 0.46%)</title><rect x="26.7168%" y="181" width="0.4650%" height="15" fill="rgb(211,99,13)" fg:x="6364672411" fg:w="110772689"/><text x="26.9668%" y="191.50"></text></g><g><title>_int_malloc (56,457,386 samples, 0.24%)</title><rect x="26.9448%" y="165" width="0.2370%" height="15" fill="rgb(232,111,31)" fg:x="6418987714" fg:w="56457386"/><text x="27.1948%" y="175.50"></text></g><g><title>unlink_chunk.isra.0 (9,619,907 samples, 0.04%)</title><rect x="27.1414%" y="149" width="0.0404%" height="15" fill="rgb(245,82,37)" fg:x="6465825193" fg:w="9619907"/><text x="27.3914%" y="159.50"></text></g><g><title>sider::commands::build::build_lpop_command (9,552,899 samples, 0.04%)</title><rect x="27.1818%" y="213" width="0.0401%" height="15" fill="rgb(227,149,46)" fg:x="6475445100" fg:w="9552899"/><text x="27.4318%" y="223.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (10,356,688 samples, 0.04%)</title><rect x="27.2412%" y="181" width="0.0435%" height="15" fill="rgb(218,36,50)" fg:x="6489613215" fg:w="10356688"/><text x="27.4912%" y="191.50"></text></g><g><title>malloc (10,356,688 samples, 0.04%)</title><rect x="27.2412%" y="165" width="0.0435%" height="15" fill="rgb(226,80,48)" fg:x="6489613215" fg:w="10356688"/><text x="27.4912%" y="175.50"></text></g><g><title>sider::commands::build::build_lpush_command (24,559,824 samples, 0.10%)</title><rect x="27.2219%" y="213" width="0.1031%" height="15" fill="rgb(238,224,15)" fg:x="6484997999" fg:w="24559824"/><text x="27.4719%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (19,944,608 samples, 0.08%)</title><rect x="27.2412%" y="197" width="0.0837%" height="15" fill="rgb(241,136,10)" fg:x="6489613215" fg:w="19944608"/><text x="27.4912%" y="207.50"></text></g><g><title>malloc (9,537,158 samples, 0.04%)</title><rect x="27.2849%" y="181" width="0.0400%" height="15" fill="rgb(208,32,45)" fg:x="6500020665" fg:w="9537158"/><text x="27.5349%" y="191.50"></text></g><g><title>_int_malloc (2,680,245 samples, 0.01%)</title><rect x="27.3137%" y="165" width="0.0113%" height="15" fill="rgb(207,135,9)" fg:x="6506877578" fg:w="2680245"/><text x="27.5637%" y="175.50"></text></g><g><title>unlink_chunk.isra.0 (2,680,245 samples, 0.01%)</title><rect x="27.3137%" y="149" width="0.0113%" height="15" fill="rgb(206,86,44)" fg:x="6506877578" fg:w="2680245"/><text x="27.5637%" y="159.50"></text></g><g><title>sider::commands::build::build_rpush_command (21,934,786 samples, 0.09%)</title><rect x="27.3250%" y="213" width="0.0921%" height="15" fill="rgb(245,177,15)" fg:x="6509557823" fg:w="21934786"/><text x="27.5750%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (21,934,786 samples, 0.09%)</title><rect x="27.3250%" y="197" width="0.0921%" height="15" fill="rgb(206,64,50)" fg:x="6509557823" fg:w="21934786"/><text x="27.5750%" y="207.50"></text></g><g><title>malloc (10,102,559 samples, 0.04%)</title><rect x="27.3746%" y="181" width="0.0424%" height="15" fill="rgb(234,36,40)" fg:x="6521390050" fg:w="10102559"/><text x="27.6246%" y="191.50"></text></g><g><title>_int_malloc (8,348,341 samples, 0.04%)</title><rect x="27.3820%" y="165" width="0.0350%" height="15" fill="rgb(213,64,8)" fg:x="6523144268" fg:w="8348341"/><text x="27.6320%" y="175.50"></text></g><g><title>unlink_chunk.isra.0 (8,348,341 samples, 0.04%)</title><rect x="27.3820%" y="149" width="0.0350%" height="15" fill="rgb(210,75,36)" fg:x="6523144268" fg:w="8348341"/><text x="27.6320%" y="159.50"></text></g><g><title>sider::commands::build::build_set_command (10,123,811 samples, 0.04%)</title><rect x="27.4170%" y="213" width="0.0425%" height="15" fill="rgb(229,88,21)" fg:x="6531492609" fg:w="10123811"/><text x="27.6670%" y="223.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2,516,238 samples, 0.01%)</title><rect x="27.4490%" y="197" width="0.0106%" height="15" fill="rgb(252,204,47)" fg:x="6539100182" fg:w="2516238"/><text x="27.6990%" y="207.50"></text></g><g><title>__memmove_avx512_unaligned_erms (2,516,238 samples, 0.01%)</title><rect x="27.4490%" y="181" width="0.0106%" height="15" fill="rgb(208,77,27)" fg:x="6539100182" fg:w="2516238"/><text x="27.6990%" y="191.50"></text></g><g><title>__rust_dealloc (2,813,456 samples, 0.01%)</title><rect x="27.4868%" y="197" width="0.0118%" height="15" fill="rgb(221,76,26)" fg:x="6548125046" fg:w="2813456"/><text x="27.7368%" y="207.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for isize&gt;::fmt (6,814,380 samples, 0.03%)</title><rect x="27.4987%" y="197" width="0.0286%" height="15" fill="rgb(225,139,18)" fg:x="6550938502" fg:w="6814380"/><text x="27.7487%" y="207.50"></text></g><g><title>_ZN8indexmap3map25IndexMap$LT$K$C$V$C$S$GT$4hash17hc3717bc726933d04E.llvm.8853625777964167346 (9,111,454 samples, 0.04%)</title><rect x="27.5273%" y="181" width="0.0382%" height="15" fill="rgb(230,137,11)" fg:x="6557752882" fg:w="9111454"/><text x="27.7773%" y="191.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::get_mut (13,480,081 samples, 0.06%)</title><rect x="27.5273%" y="197" width="0.0566%" height="15" fill="rgb(212,28,1)" fg:x="6557752882" fg:w="13480081"/><text x="27.7773%" y="207.50"></text></g><g><title>indexmap::map::core::IndexMapCore&lt;K,V&gt;::get_index_of (4,368,627 samples, 0.02%)</title><rect x="27.5655%" y="181" width="0.0183%" height="15" fill="rgb(248,164,17)" fg:x="6566864336" fg:w="4368627"/><text x="27.8155%" y="191.50"></text></g><g><title>__memcmp_evex_movbe (4,368,627 samples, 0.02%)</title><rect x="27.5655%" y="165" width="0.0183%" height="15" fill="rgb(222,171,42)" fg:x="6566864336" fg:w="4368627"/><text x="27.8155%" y="175.50"></text></g><g><title>sider::commands::keys::incr_decr::_{{closure}} (42,398,961 samples, 0.18%)</title><rect x="27.4595%" y="213" width="0.1780%" height="15" fill="rgb(243,84,45)" fg:x="6541616420" fg:w="42398961"/><text x="27.7095%" y="223.50"></text></g><g><title>tokio::sync::rwlock::RwLock&lt;T&gt;::write::_{{closure}} (12,782,418 samples, 0.05%)</title><rect x="27.5838%" y="197" width="0.0537%" height="15" fill="rgb(252,49,23)" fg:x="6571232963" fg:w="12782418"/><text x="27.8338%" y="207.50"></text></g><g><title>__memmove_avx512_unaligned_erms (10,271,833 samples, 0.04%)</title><rect x="27.6807%" y="181" width="0.0431%" height="15" fill="rgb(215,19,7)" fg:x="6594298378" fg:w="10271833"/><text x="27.9307%" y="191.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (29,950,909 samples, 0.13%)</title><rect x="27.6807%" y="197" width="0.1257%" height="15" fill="rgb(238,81,41)" fg:x="6594298378" fg:w="29950909"/><text x="27.9307%" y="207.50"></text></g><g><title>malloc (19,679,076 samples, 0.08%)</title><rect x="27.7238%" y="181" width="0.0826%" height="15" fill="rgb(210,199,37)" fg:x="6604570211" fg:w="19679076"/><text x="27.9738%" y="191.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (11,060,795,635 samples, 46.43%)</title><rect x="27.8064%" y="197" width="46.4295%" height="15" fill="rgb(244,192,49)" fg:x="6624249287" fg:w="11060795635"/><text x="28.0564%" y="207.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_..</text></g><g><title>__memmove_avx512_unaligned_erms (11,056,348,286 samples, 46.41%)</title><rect x="27.8251%" y="181" width="46.4109%" height="15" fill="rgb(226,211,11)" fg:x="6628696636" fg:w="11056348286"/><text x="28.0751%" y="191.50">__memmove_avx512_unaligned_erms</text></g><g><title>[unknown] (4,671,285 samples, 0.02%)</title><rect x="74.2163%" y="165" width="0.0196%" height="15" fill="rgb(236,162,54)" fg:x="17680373637" fg:w="4671285"/><text x="74.4663%" y="175.50"></text></g><g><title>&lt;tokio::sync::mpsc::bounded::Semaphore as tokio::sync::mpsc::chan::Semaphore&gt;::add_permits (25,450,307 samples, 0.11%)</title><rect x="74.2359%" y="197" width="0.1068%" height="15" fill="rgb(220,229,9)" fg:x="17685044922" fg:w="25450307"/><text x="74.4859%" y="207.50"></text></g><g><title>_ZN5tokio4sync15batch_semaphore9Semaphore18add_permits_locked17h7baebb2818aa783eE.llvm.1981642368882228938 (13,617,997 samples, 0.06%)</title><rect x="74.3428%" y="197" width="0.0572%" height="15" fill="rgb(250,87,22)" fg:x="17710495229" fg:w="13617997"/><text x="74.5928%" y="207.50"></text></g><g><title>cfree@GLIBC_2.2.5 (24,583,880 samples, 0.10%)</title><rect x="74.3999%" y="197" width="0.1032%" height="15" fill="rgb(239,43,17)" fg:x="17724113226" fg:w="24583880"/><text x="74.6499%" y="207.50"></text></g><g><title>_int_free (14,482,510 samples, 0.06%)</title><rect x="74.4423%" y="181" width="0.0608%" height="15" fill="rgb(231,177,25)" fg:x="17734214596" fg:w="14482510"/><text x="74.6923%" y="191.50"></text></g><g><title>sider::commands::lists::pop_list::_{{closure}} (11,169,374,331 samples, 46.89%)</title><rect x="27.6375%" y="213" width="46.8853%" height="15" fill="rgb(219,179,1)" fg:x="6584015381" fg:w="11169374331"/><text x="27.8875%" y="223.50">sider::commands::lists::pop_list::_{{closure}}</text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::get_mut (4,692,606 samples, 0.02%)</title><rect x="74.5031%" y="197" width="0.0197%" height="15" fill="rgb(238,219,53)" fg:x="17748697106" fg:w="4692606"/><text x="74.7531%" y="207.50"></text></g><g><title>indexmap::map::core::IndexMapCore&lt;K,V&gt;::get_index_of (4,692,606 samples, 0.02%)</title><rect x="74.5031%" y="181" width="0.0197%" height="15" fill="rgb(232,167,36)" fg:x="17748697106" fg:w="4692606"/><text x="74.7531%" y="191.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (32,055,787 samples, 0.13%)</title><rect x="74.6040%" y="197" width="0.1346%" height="15" fill="rgb(244,19,51)" fg:x="17772736311" fg:w="32055787"/><text x="74.8540%" y="207.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (19,468,412 samples, 0.08%)</title><rect x="74.6569%" y="181" width="0.0817%" height="15" fill="rgb(224,6,22)" fg:x="17785323686" fg:w="19468412"/><text x="74.9069%" y="191.50"></text></g><g><title>malloc (19,468,412 samples, 0.08%)</title><rect x="74.6569%" y="165" width="0.0817%" height="15" fill="rgb(224,145,5)" fg:x="17785323686" fg:w="19468412"/><text x="74.9069%" y="175.50"></text></g><g><title>_int_malloc (3,936,893 samples, 0.02%)</title><rect x="74.7221%" y="149" width="0.0165%" height="15" fill="rgb(234,130,49)" fg:x="17800855205" fg:w="3936893"/><text x="74.9721%" y="159.50"></text></g><g><title>unlink_chunk.isra.0 (3,936,893 samples, 0.02%)</title><rect x="74.7221%" y="133" width="0.0165%" height="15" fill="rgb(254,6,2)" fg:x="17800855205" fg:w="3936893"/><text x="74.9721%" y="143.50"></text></g><g><title>&lt;alloc::vec::splice::Splice&lt;I,A&gt; as core::ops::drop::Drop&gt;::drop (4,562,642,943 samples, 19.15%)</title><rect x="74.7386%" y="197" width="19.1525%" height="15" fill="rgb(208,96,46)" fg:x="17804792098" fg:w="4562642943"/><text x="74.9886%" y="207.50">&lt;alloc::vec::splice::Splice&lt;I,..</text></g><g><title>__memmove_avx512_unaligned_erms (4,552,717,308 samples, 19.11%)</title><rect x="74.7802%" y="181" width="19.1108%" height="15" fill="rgb(239,3,39)" fg:x="17814717733" fg:w="4552717308"/><text x="75.0302%" y="191.50">__memmove_avx512_unaligned_erms</text></g><g><title>[unknown] (4,138,633 samples, 0.02%)</title><rect x="93.8737%" y="165" width="0.0174%" height="15" fill="rgb(233,210,1)" fg:x="22363296408" fg:w="4138633"/><text x="94.1237%" y="175.50"></text></g><g><title>[unknown] (4,138,633 samples, 0.02%)</title><rect x="93.8737%" y="149" width="0.0174%" height="15" fill="rgb(244,137,37)" fg:x="22363296408" fg:w="4138633"/><text x="94.1237%" y="159.50"></text></g><g><title>[unknown] (4,138,633 samples, 0.02%)</title><rect x="93.8737%" y="133" width="0.0174%" height="15" fill="rgb(240,136,2)" fg:x="22363296408" fg:w="4138633"/><text x="94.1237%" y="143.50"></text></g><g><title>[unknown] (4,138,633 samples, 0.02%)</title><rect x="93.8737%" y="117" width="0.0174%" height="15" fill="rgb(239,18,37)" fg:x="22363296408" fg:w="4138633"/><text x="94.1237%" y="127.50"></text></g><g><title>&lt;tokio::sync::mpsc::bounded::Semaphore as tokio::sync::mpsc::chan::Semaphore&gt;::add_permits (3,010,107 samples, 0.01%)</title><rect x="93.8910%" y="197" width="0.0126%" height="15" fill="rgb(218,185,22)" fg:x="22367435041" fg:w="3010107"/><text x="94.1410%" y="207.50"></text></g><g><title>_ZN5tokio4sync15batch_semaphore9Semaphore18add_permits_locked17h7baebb2818aa783eE.llvm.1981642368882228938 (65,235,397 samples, 0.27%)</title><rect x="93.9037%" y="197" width="0.2738%" height="15" fill="rgb(225,218,4)" fg:x="22370445148" fg:w="65235397"/><text x="94.1537%" y="207.50"></text></g><g><title>cfree@GLIBC_2.2.5 (12,420,561 samples, 0.05%)</title><rect x="94.1775%" y="197" width="0.0521%" height="15" fill="rgb(230,182,32)" fg:x="22435680545" fg:w="12420561"/><text x="94.4275%" y="207.50"></text></g><g><title>_ZN8indexmap3map25IndexMap$LT$K$C$V$C$S$GT$4hash17hc3717bc726933d04E.llvm.8853625777964167346 (10,842,885 samples, 0.05%)</title><rect x="94.2296%" y="181" width="0.0455%" height="15" fill="rgb(242,56,43)" fg:x="22448101106" fg:w="10842885"/><text x="94.4796%" y="191.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::get_mut (14,752,188 samples, 0.06%)</title><rect x="94.2296%" y="197" width="0.0619%" height="15" fill="rgb(233,99,24)" fg:x="22448101106" fg:w="14752188"/><text x="94.4796%" y="207.50"></text></g><g><title>indexmap::map::core::IndexMapCore&lt;K,V&gt;::get_index_of (3,909,303 samples, 0.02%)</title><rect x="94.2752%" y="181" width="0.0164%" height="15" fill="rgb(234,209,42)" fg:x="22458943991" fg:w="3909303"/><text x="94.5252%" y="191.50"></text></g><g><title>sider::commands::lists::push_to_list::_{{closure}} (4,718,274,640 samples, 19.81%)</title><rect x="74.5228%" y="213" width="19.8057%" height="15" fill="rgb(227,7,12)" fg:x="17753389712" fg:w="4718274640"/><text x="74.7728%" y="223.50">sider::commands::lists::push_to..</text></g><g><title>tokio::sync::rwlock::RwLock&lt;T&gt;::write::_{{closure}} (8,811,058 samples, 0.04%)</title><rect x="94.2916%" y="197" width="0.0370%" height="15" fill="rgb(245,203,43)" fg:x="22462853294" fg:w="8811058"/><text x="94.5416%" y="207.50"></text></g><g><title>__memmove_avx512_unaligned_erms (82,653,475 samples, 0.35%)</title><rect x="94.4126%" y="133" width="0.3470%" height="15" fill="rgb(238,205,33)" fg:x="22491691894" fg:w="82653475"/><text x="94.6626%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (119,678,942 samples, 0.50%)</title><rect x="94.3286%" y="197" width="0.5024%" height="15" fill="rgb(231,56,7)" fg:x="22471664352" fg:w="119678942"/><text x="94.5786%" y="207.50"></text></g><g><title>_ZN5alloc7raw_vec11finish_grow17h218f43d8fb585840E.llvm.7876563497402748525 (117,299,271 samples, 0.49%)</title><rect x="94.3385%" y="181" width="0.4924%" height="15" fill="rgb(244,186,29)" fg:x="22474044023" fg:w="117299271"/><text x="94.5885%" y="191.50"></text></g><g><title>realloc (115,781,189 samples, 0.49%)</title><rect x="94.3449%" y="165" width="0.4860%" height="15" fill="rgb(234,111,31)" fg:x="22475562105" fg:w="115781189"/><text x="94.5949%" y="175.50"></text></g><g><title>_int_realloc (104,379,815 samples, 0.44%)</title><rect x="94.3928%" y="149" width="0.4382%" height="15" fill="rgb(241,149,10)" fg:x="22486963479" fg:w="104379815"/><text x="94.6428%" y="159.50"></text></g><g><title>_int_malloc (16,997,925 samples, 0.07%)</title><rect x="94.7596%" y="133" width="0.0714%" height="15" fill="rgb(249,206,44)" fg:x="22574345369" fg:w="16997925"/><text x="95.0096%" y="143.50"></text></g><g><title>std::path::Path::_join (124,195,213 samples, 0.52%)</title><rect x="94.3286%" y="213" width="0.5213%" height="15" fill="rgb(251,153,30)" fg:x="22471664352" fg:w="124195213"/><text x="94.5786%" y="223.50"></text></g><g><title>malloc (4,516,271 samples, 0.02%)</title><rect x="94.8309%" y="197" width="0.0190%" height="15" fill="rgb(239,152,38)" fg:x="22591343294" fg:w="4516271"/><text x="95.0809%" y="207.50"></text></g><g><title>_ZN3std3sys3pal4unix2fs9try_statx17h4bee785d8c598a95E.llvm.12208559908432827118 (30,705,060 samples, 0.13%)</title><rect x="94.8649%" y="197" width="0.1289%" height="15" fill="rgb(249,139,47)" fg:x="22599437017" fg:w="30705060"/><text x="95.1149%" y="207.50"></text></g><g><title>statx (30,705,059 samples, 0.13%)</title><rect x="94.8649%" y="181" width="0.1289%" height="15" fill="rgb(244,64,35)" fg:x="22599437018" fg:w="30705059"/><text x="95.1149%" y="191.50"></text></g><g><title>[unknown] (30,705,059 samples, 0.13%)</title><rect x="94.8649%" y="165" width="0.1289%" height="15" fill="rgb(216,46,15)" fg:x="22599437018" fg:w="30705059"/><text x="95.1149%" y="175.50"></text></g><g><title>[unknown] (30,705,059 samples, 0.13%)</title><rect x="94.8649%" y="149" width="0.1289%" height="15" fill="rgb(250,74,19)" fg:x="22599437018" fg:w="30705059"/><text x="95.1149%" y="159.50"></text></g><g><title>[unknown] (23,433,739 samples, 0.10%)</title><rect x="94.8954%" y="133" width="0.0984%" height="15" fill="rgb(249,42,33)" fg:x="22606708338" fg:w="23433739"/><text x="95.1454%" y="143.50"></text></g><g><title>[unknown] (18,105,039 samples, 0.08%)</title><rect x="94.9178%" y="117" width="0.0760%" height="15" fill="rgb(242,149,17)" fg:x="22612037038" fg:w="18105039"/><text x="95.1678%" y="127.50"></text></g><g><title>[unknown] (13,968,554 samples, 0.06%)</title><rect x="94.9352%" y="101" width="0.0586%" height="15" fill="rgb(244,29,21)" fg:x="22616173523" fg:w="13968554"/><text x="95.1852%" y="111.50"></text></g><g><title>std::sys::pal::unix::fs::stat (65,693,593 samples, 0.28%)</title><rect x="94.8499%" y="213" width="0.2758%" height="15" fill="rgb(220,130,37)" fg:x="22595859565" fg:w="65693593"/><text x="95.0999%" y="223.50"></text></g><g><title>core::ffi::c_str::CStr::from_bytes_with_nul (31,411,081 samples, 0.13%)</title><rect x="94.9938%" y="197" width="0.1319%" height="15" fill="rgb(211,67,2)" fg:x="22630142077" fg:w="31411081"/><text x="95.2438%" y="207.50"></text></g><g><title>&lt;tokio::runtime::coop::RestoreOnPending as core::ops::drop::Drop&gt;::drop (16,435,373 samples, 0.07%)</title><rect x="95.4938%" y="181" width="0.0690%" height="15" fill="rgb(235,68,52)" fg:x="22749251084" fg:w="16435373"/><text x="95.7438%" y="191.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::try_read_output (73,220,549 samples, 0.31%)</title><rect x="95.5628%" y="181" width="0.3074%" height="15" fill="rgb(246,142,3)" fg:x="22765686457" fg:w="73220549"/><text x="95.8128%" y="191.50"></text></g><g><title>tokio::runtime::task::harness::can_read_output (44,345,292 samples, 0.19%)</title><rect x="95.6840%" y="165" width="0.1861%" height="15" fill="rgb(241,25,7)" fg:x="22794561714" fg:w="44345292"/><text x="95.9340%" y="175.50"></text></g><g><title>&lt;tokio::runtime::task::join::JoinHandle&lt;T&gt; as core::future::future::Future&gt;::poll (115,038,021 samples, 0.48%)</title><rect x="95.4309%" y="197" width="0.4829%" height="15" fill="rgb(242,119,39)" fg:x="22734268717" fg:w="115038021"/><text x="95.6809%" y="207.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::try_read_output (10,399,732 samples, 0.04%)</title><rect x="95.8701%" y="181" width="0.0437%" height="15" fill="rgb(241,98,45)" fg:x="22838907006" fg:w="10399732"/><text x="96.1201%" y="191.50"></text></g><g><title>tokio::fs::file::File::from_std (72,976,566 samples, 0.31%)</title><rect x="95.9213%" y="197" width="0.3063%" height="15" fill="rgb(254,28,30)" fg:x="22851098515" fg:w="72976566"/><text x="96.1713%" y="207.50"></text></g><g><title>malloc (72,976,566 samples, 0.31%)</title><rect x="95.9213%" y="181" width="0.3063%" height="15" fill="rgb(241,142,54)" fg:x="22851098515" fg:w="72976566"/><text x="96.1713%" y="191.50"></text></g><g><title>_int_malloc (48,207,689 samples, 0.20%)</title><rect x="96.0253%" y="165" width="0.2024%" height="15" fill="rgb(222,85,15)" fg:x="22875867392" fg:w="48207689"/><text x="96.2753%" y="175.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (142,452,689 samples, 0.60%)</title><rect x="96.8527%" y="165" width="0.5980%" height="15" fill="rgb(210,85,47)" fg:x="23072981285" fg:w="142452689"/><text x="97.1027%" y="175.50"></text></g><g><title>parking_lot_core::parking_lot::lock_bucket_pair (64,357,044 samples, 0.27%)</title><rect x="97.1805%" y="149" width="0.2701%" height="15" fill="rgb(224,206,25)" fg:x="23151076930" fg:w="64357044"/><text x="97.4305%" y="159.50"></text></g><g><title>parking_lot::raw_mutex::RawMutex::lock_slow (5,203,747 samples, 0.02%)</title><rect x="97.4507%" y="165" width="0.0218%" height="15" fill="rgb(243,201,19)" fg:x="23215433974" fg:w="5203747"/><text x="97.7007%" y="175.50"></text></g><g><title>parking_lot::raw_mutex::RawMutex::unlock_slow (32,580,994 samples, 0.14%)</title><rect x="97.4725%" y="165" width="0.1368%" height="15" fill="rgb(236,59,4)" fg:x="23220637721" fg:w="32580994"/><text x="97.7225%" y="175.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (11,844,585 samples, 0.05%)</title><rect x="97.5595%" y="149" width="0.0497%" height="15" fill="rgb(254,179,45)" fg:x="23241374130" fg:w="11844585"/><text x="97.8095%" y="159.50"></text></g><g><title>clock_gettime@@GLIBC_2.17 (11,844,585 samples, 0.05%)</title><rect x="97.5595%" y="133" width="0.0497%" height="15" fill="rgb(226,14,10)" fg:x="23241374130" fg:w="11844585"/><text x="97.8095%" y="143.50"></text></g><g><title>__vdso_clock_gettime (11,844,585 samples, 0.05%)</title><rect x="97.5595%" y="117" width="0.0497%" height="15" fill="rgb(244,27,41)" fg:x="23241374130" fg:w="11844585"/><text x="97.8095%" y="127.50"></text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_task (260,847,821 samples, 1.09%)</title><rect x="96.5829%" y="181" width="1.0950%" height="15" fill="rgb(235,35,32)" fg:x="23008721542" fg:w="260847821"/><text x="96.8329%" y="191.50"></text></g><g><title>syscall (16,350,648 samples, 0.07%)</title><rect x="97.6093%" y="165" width="0.0686%" height="15" fill="rgb(218,68,31)" fg:x="23253218715" fg:w="16350648"/><text x="97.8593%" y="175.50"></text></g><g><title>[unknown] (16,350,648 samples, 0.07%)</title><rect x="97.6093%" y="149" width="0.0686%" height="15" fill="rgb(207,120,37)" fg:x="23253218715" fg:w="16350648"/><text x="97.8593%" y="159.50"></text></g><g><title>[unknown] (16,350,648 samples, 0.07%)</title><rect x="97.6093%" y="133" width="0.0686%" height="15" fill="rgb(227,98,0)" fg:x="23253218715" fg:w="16350648"/><text x="97.8593%" y="143.50"></text></g><g><title>[unknown] (16,350,648 samples, 0.07%)</title><rect x="97.6093%" y="117" width="0.0686%" height="15" fill="rgb(207,7,3)" fg:x="23253218715" fg:w="16350648"/><text x="97.8593%" y="127.50"></text></g><g><title>[unknown] (16,350,648 samples, 0.07%)</title><rect x="97.6093%" y="101" width="0.0686%" height="15" fill="rgb(206,98,19)" fg:x="23253218715" fg:w="16350648"/><text x="97.8593%" y="111.50"></text></g><g><title>[unknown] (16,350,648 samples, 0.07%)</title><rect x="97.6093%" y="85" width="0.0686%" height="15" fill="rgb(217,5,26)" fg:x="23253218715" fg:w="16350648"/><text x="97.8593%" y="95.50"></text></g><g><title>[unknown] (4,976,770 samples, 0.02%)</title><rect x="97.6570%" y="69" width="0.0209%" height="15" fill="rgb(235,190,38)" fg:x="23264592593" fg:w="4976770"/><text x="97.9070%" y="79.50"></text></g><g><title>_int_free_maybe_consolidate.part.0 (54,139,335 samples, 0.23%)</title><rect x="97.9568%" y="101" width="0.2273%" height="15" fill="rgb(247,86,24)" fg:x="23336014076" fg:w="54139335"/><text x="98.2068%" y="111.50"></text></g><g><title>malloc_consolidate (53,468,183 samples, 0.22%)</title><rect x="97.9596%" y="85" width="0.2244%" height="15" fill="rgb(205,101,16)" fg:x="23336685228" fg:w="53468183"/><text x="98.2096%" y="95.50"></text></g><g><title>_int_free_merge_chunk (15,972,483 samples, 0.07%)</title><rect x="98.1841%" y="101" width="0.0670%" height="15" fill="rgb(246,168,33)" fg:x="23390153411" fg:w="15972483"/><text x="98.4341%" y="111.50"></text></g><g><title>_int_free_create_chunk (9,355,351 samples, 0.04%)</title><rect x="98.2118%" y="85" width="0.0393%" height="15" fill="rgb(231,114,1)" fg:x="23396770543" fg:w="9355351"/><text x="98.4618%" y="95.50"></text></g><g><title>malloc_consolidate (25,323,513 samples, 0.11%)</title><rect x="98.4809%" y="85" width="0.1063%" height="15" fill="rgb(207,184,53)" fg:x="23460856493" fg:w="25323513"/><text x="98.7309%" y="95.50"></text></g><g><title>tokio::runtime::task::core::Cell&lt;T,S&gt;::new (220,580,738 samples, 0.93%)</title><rect x="97.6784%" y="181" width="0.9259%" height="15" fill="rgb(224,95,51)" fg:x="23269691327" fg:w="220580738"/><text x="97.9284%" y="191.50"></text></g><g><title>__rdl_alloc (220,580,738 samples, 0.93%)</title><rect x="97.6784%" y="165" width="0.9259%" height="15" fill="rgb(212,188,45)" fg:x="23269691327" fg:w="220580738"/><text x="97.9284%" y="175.50"></text></g><g><title>__posix_memalign (220,580,738 samples, 0.93%)</title><rect x="97.6784%" y="149" width="0.9259%" height="15" fill="rgb(223,154,38)" fg:x="23269691327" fg:w="220580738"/><text x="97.9284%" y="159.50"></text></g><g><title>_mid_memalign.isra.0 (220,580,738 samples, 0.93%)</title><rect x="97.6784%" y="133" width="0.9259%" height="15" fill="rgb(251,22,52)" fg:x="23269691327" fg:w="220580738"/><text x="97.9284%" y="143.50"></text></g><g><title>_int_memalign (171,179,260 samples, 0.72%)</title><rect x="97.8858%" y="117" width="0.7186%" height="15" fill="rgb(229,209,22)" fg:x="23319092805" fg:w="171179260"/><text x="98.1358%" y="127.50"></text></g><g><title>_int_malloc (84,146,171 samples, 0.35%)</title><rect x="98.2511%" y="101" width="0.3532%" height="15" fill="rgb(234,138,34)" fg:x="23406125894" fg:w="84146171"/><text x="98.5011%" y="111.50"></text></g><g><title>sysmalloc (4,092,059 samples, 0.02%)</title><rect x="98.5872%" y="85" width="0.0172%" height="15" fill="rgb(212,95,11)" fg:x="23486180006" fg:w="4092059"/><text x="98.8372%" y="95.50"></text></g><g><title>[unknown] (4,092,059 samples, 0.02%)</title><rect x="98.5872%" y="69" width="0.0172%" height="15" fill="rgb(240,179,47)" fg:x="23486180006" fg:w="4092059"/><text x="98.8372%" y="79.50"></text></g><g><title>[unknown] (4,092,059 samples, 0.02%)</title><rect x="98.5872%" y="53" width="0.0172%" height="15" fill="rgb(240,163,11)" fg:x="23486180006" fg:w="4092059"/><text x="98.8372%" y="63.50"></text></g><g><title>[unknown] (4,092,059 samples, 0.02%)</title><rect x="98.5872%" y="37" width="0.0172%" height="15" fill="rgb(236,37,12)" fg:x="23486180006" fg:w="4092059"/><text x="98.8372%" y="47.50"></text></g><g><title>tokio::runtime::blocking::pool::spawn_blocking (596,061,269 samples, 2.50%)</title><rect x="96.2276%" y="197" width="2.5021%" height="15" fill="rgb(232,164,16)" fg:x="22924075081" fg:w="596061269"/><text x="96.4776%" y="207.50">to..</text></g><g><title>tokio::runtime::task::id::Id::next (29,864,285 samples, 0.13%)</title><rect x="98.6043%" y="181" width="0.1254%" height="15" fill="rgb(244,205,15)" fg:x="23490272065" fg:w="29864285"/><text x="98.8543%" y="191.50"></text></g><g><title>cfree@GLIBC_2.2.5 (14,942,054 samples, 0.06%)</title><rect x="98.7297%" y="181" width="0.0627%" height="15" fill="rgb(223,117,47)" fg:x="23520136350" fg:w="14942054"/><text x="98.9797%" y="191.50"></text></g><g><title>_int_free (14,942,054 samples, 0.06%)</title><rect x="98.7297%" y="165" width="0.0627%" height="15" fill="rgb(244,107,35)" fg:x="23520136350" fg:w="14942054"/><text x="98.9797%" y="175.50"></text></g><g><title>_int_free_merge_chunk (6,946,180 samples, 0.03%)</title><rect x="98.7633%" y="149" width="0.0292%" height="15" fill="rgb(205,140,8)" fg:x="23528132224" fg:w="6946180"/><text x="99.0133%" y="159.50"></text></g><g><title>unlink_chunk.isra.0 (6,946,180 samples, 0.03%)</title><rect x="98.7633%" y="133" width="0.0292%" height="15" fill="rgb(228,84,46)" fg:x="23528132224" fg:w="6946180"/><text x="99.0133%" y="143.50"></text></g><g><title>tokio::runtime::task::state::State::ref_dec (10,866,609 samples, 0.05%)</title><rect x="98.7924%" y="181" width="0.0456%" height="15" fill="rgb(254,188,9)" fg:x="23535078406" fg:w="10866609"/><text x="99.0424%" y="191.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::drop_join_handle_slow (102,375,068 samples, 0.43%)</title><rect x="98.7297%" y="197" width="0.4297%" height="15" fill="rgb(206,112,54)" fg:x="23520136350" fg:w="102375068"/><text x="98.9797%" y="207.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_join_handle_dropped (76,566,403 samples, 0.32%)</title><rect x="98.8380%" y="181" width="0.3214%" height="15" fill="rgb(216,84,49)" fg:x="23545945015" fg:w="76566403"/><text x="99.0880%" y="191.50"></text></g><g><title>tokio::fs::open_options::OpenOptions::open::_{{closure}} (963,291,847 samples, 4.04%)</title><rect x="95.1256%" y="213" width="4.0436%" height="15" fill="rgb(214,194,35)" fg:x="22661553158" fg:w="963291847"/><text x="95.3756%" y="223.50">toki..</text></g><g><title>sider::process::process_command::_{{closure}} (18,920,730,869 samples, 79.42%)</title><rect x="19.7528%" y="229" width="79.4229%" height="15" fill="rgb(249,28,3)" fg:x="4705667960" fg:w="18920730869"/><text x="20.0028%" y="239.50">sider::process::process_command::_{{closure}}</text></g><g><title>_ZN5sider8database16restore_from_aof28_$u7b$$u7b$closure$u7d$$u7d$17h8aac0991414130d3E.llvm.8398839834326230875 (19,140,666,851 samples, 80.35%)</title><rect x="18.8297%" y="245" width="80.3461%" height="15" fill="rgb(222,56,52)" fg:x="4485764231" fg:w="19140666851"/><text x="19.0797%" y="255.50">_ZN5sider8database16restore_from_aof28_$u7b$$u7b$closure$u7d$$u7d$17h8aac0991414130d3E.llvm.8398839834326230875</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (19,148,612,371 samples, 80.38%)</title><rect x="18.7968%" y="261" width="80.3795%" height="15" fill="rgb(245,217,50)" fg:x="4477916404" fg:w="19148612371"/><text x="19.0468%" y="271.50">tokio::runtime::task::core::Core&lt;T,S&gt;::poll</text></g><g><title>tokio::runtime::task::state::State::transition_to_idle (10,333,291 samples, 0.04%)</title><rect x="99.1763%" y="261" width="0.0434%" height="15" fill="rgb(213,201,24)" fg:x="23626528775" fg:w="10333291"/><text x="99.4263%" y="271.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (19,164,640,348 samples, 80.45%)</title><rect x="18.7820%" y="277" width="80.4468%" height="15" fill="rgb(248,116,28)" fg:x="4474401639" fg:w="19164640348"/><text x="19.0320%" y="287.50">tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll</text></g><g><title>&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (21,696,556,916 samples, 91.07%)</title><rect x="8.1778%" y="357" width="91.0749%" height="15" fill="rgb(219,72,43)" fg:x="1948169744" fg:w="21696556916"/><text x="8.4278%" y="367.50">&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run (21,320,235,968 samples, 89.50%)</title><rect x="9.7574%" y="341" width="89.4952%" height="15" fill="rgb(209,138,14)" fg:x="2324490692" fg:w="21320235968"/><text x="10.0074%" y="351.50">tokio::runtime::scheduler::multi_thread::worker::run</text></g><g><title>tokio::runtime::context::runtime::enter_runtime (21,320,235,968 samples, 89.50%)</title><rect x="9.7574%" y="325" width="89.4952%" height="15" fill="rgb(222,18,33)" fg:x="2324490692" fg:w="21320235968"/><text x="10.0074%" y="335.50">tokio::runtime::context::runtime::enter_runtime</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run (21,320,235,968 samples, 89.50%)</title><rect x="9.7574%" y="309" width="89.4952%" height="15" fill="rgb(213,199,7)" fg:x="2324490692" fg:w="21320235968"/><text x="10.0074%" y="319.50">tokio::runtime::scheduler::multi_thread::worker::Context::run</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task (19,542,948,469 samples, 82.03%)</title><rect x="17.2179%" y="293" width="82.0348%" height="15" fill="rgb(250,110,10)" fg:x="4101778191" fg:w="19542948469"/><text x="17.4679%" y="303.50">tokio::runtime::scheduler::multi_thread::worker::Context::run_task</text></g><g><title>tokio::runtime::task::raw::poll (5,684,673 samples, 0.02%)</title><rect x="99.2288%" y="277" width="0.0239%" height="15" fill="rgb(248,123,6)" fg:x="23639041987" fg:w="5684673"/><text x="99.4788%" y="287.50"></text></g><g><title>&lt;tokio::runtime::task::core::TaskIdGuard as core::ops::drop::Drop&gt;::drop (20,556,917 samples, 0.09%)</title><rect x="99.2527%" y="357" width="0.0863%" height="15" fill="rgb(206,91,31)" fg:x="23644726660" fg:w="20556917"/><text x="99.5027%" y="367.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::set_stage (33,869,247 samples, 0.14%)</title><rect x="99.3394%" y="357" width="0.1422%" height="15" fill="rgb(211,154,13)" fg:x="23665393388" fg:w="33869247"/><text x="99.5894%" y="367.50"></text></g><g><title>tokio::runtime::task::core::TaskIdGuard::enter (3,029,448 samples, 0.01%)</title><rect x="99.4689%" y="341" width="0.0127%" height="15" fill="rgb(225,148,7)" fg:x="23696233187" fg:w="3029448"/><text x="99.7189%" y="351.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (21,774,931,493 samples, 91.40%)</title><rect x="8.0784%" y="373" width="91.4039%" height="15" fill="rgb(220,160,43)" fg:x="1924502479" fg:w="21774931493"/><text x="8.3284%" y="383.50">tokio::runtime::task::core::Core&lt;T,S&gt;::poll</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::set_stage (32,213,760 samples, 0.14%)</title><rect x="99.4823%" y="373" width="0.1352%" height="15" fill="rgb(213,52,39)" fg:x="23699433972" fg:w="32213760"/><text x="99.7323%" y="383.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (22,390,034,465 samples, 93.99%)</title><rect x="5.6501%" y="389" width="93.9859%" height="15" fill="rgb(243,137,7)" fg:x="1346002533" fg:w="22390034465"/><text x="5.9001%" y="399.50">tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll</text></g><g><title>tokio::runtime::task::state::State::transition_to_running (4,389,266 samples, 0.02%)</title><rect x="99.6175%" y="373" width="0.0184%" height="15" fill="rgb(230,79,13)" fg:x="23731647732" fg:w="4389266"/><text x="99.8675%" y="383.50"></text></g><g><title>std::sys::backtrace::__rust_begin_short_backtrace (23,457,925,810 samples, 98.47%)</title><rect x="1.1674%" y="421" width="98.4686%" height="15" fill="rgb(247,105,23)" fg:x="278114668" fg:w="23457925810"/><text x="1.4174%" y="431.50">std::sys::backtrace::__rust_begin_short_backtrace</text></g><g><title>tokio::runtime::blocking::pool::Inner::run (23,457,925,810 samples, 98.47%)</title><rect x="1.1674%" y="405" width="98.4686%" height="15" fill="rgb(223,179,41)" fg:x="278114668" fg:w="23457925810"/><text x="1.4174%" y="415.50">tokio::runtime::blocking::pool::Inner::run</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (23,457,936,080 samples, 98.47%)</title><rect x="1.1674%" y="437" width="98.4686%" height="15" fill="rgb(218,9,34)" fg:x="278114668" fg:w="23457936080"/><text x="1.4174%" y="447.50">core::ops::function::FnOnce::call_once{{vtable.shim}}</text></g><g><title>__GI___clone3 (23,458,000,654 samples, 98.47%)</title><rect x="1.1674%" y="485" width="98.4689%" height="15" fill="rgb(222,106,8)" fg:x="278096830" fg:w="23458000654"/><text x="1.4174%" y="495.50">__GI___clone3</text></g><g><title>start_thread (23,458,000,654 samples, 98.47%)</title><rect x="1.1674%" y="469" width="98.4689%" height="15" fill="rgb(211,220,0)" fg:x="278096830" fg:w="23458000654"/><text x="1.4174%" y="479.50">start_thread</text></g><g><title>std::sys::pal::unix::thread::Thread::new::thread_start (23,457,982,816 samples, 98.47%)</title><rect x="1.1674%" y="453" width="98.4688%" height="15" fill="rgb(229,52,16)" fg:x="278114668" fg:w="23457982816"/><text x="1.4174%" y="463.50">std::sys::pal::unix::thread::Thread::new::thread_start</text></g><g><title>all (23,822,758,177 samples, 100%)</title><rect x="0.0000%" y="517" width="100.0000%" height="15" fill="rgb(212,155,18)" fg:x="0" fg:w="23822758177"/><text x="0.2500%" y="527.50"></text></g><g><title>tokio-runtime-w (23,821,943,789 samples, 100.00%)</title><rect x="0.0034%" y="501" width="99.9966%" height="15" fill="rgb(242,21,14)" fg:x="814388" fg:w="23821943789"/><text x="0.2534%" y="511.50">tokio-runtime-w</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (85,166,575 samples, 0.36%)</title><rect x="99.6425%" y="485" width="0.3575%" height="15" fill="rgb(222,19,48)" fg:x="23737591602" fg:w="85166575"/><text x="99.8925%" y="495.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (85,166,575 samples, 0.36%)</title><rect x="99.6425%" y="469" width="0.3575%" height="15" fill="rgb(232,45,27)" fg:x="23737591602" fg:w="85166575"/><text x="99.8925%" y="479.50"></text></g><g><title>_ZN5sider8database16restore_from_aof28_$u7b$$u7b$closure$u7d$$u7d$17h8aac0991414130d3E.llvm.8398839834326230875 (85,166,575 samples, 0.36%)</title><rect x="99.6425%" y="453" width="0.3575%" height="15" fill="rgb(249,103,42)" fg:x="23737591602" fg:w="85166575"/><text x="99.8925%" y="463.50"></text></g><g><title>sider::process::process_command::_{{closure}} (85,166,575 samples, 0.36%)</title><rect x="99.6425%" y="437" width="0.3575%" height="15" fill="rgb(246,81,33)" fg:x="23737591602" fg:w="85166575"/><text x="99.8925%" y="447.50"></text></g><g><title>tokio::fs::open_options::OpenOptions::open::_{{closure}} (85,166,575 samples, 0.36%)</title><rect x="99.6425%" y="421" width="0.3575%" height="15" fill="rgb(252,33,42)" fg:x="23737591602" fg:w="85166575"/><text x="99.8925%" y="431.50"></text></g><g><title>tokio::runtime::blocking::pool::spawn_blocking (85,166,575 samples, 0.36%)</title><rect x="99.6425%" y="405" width="0.3575%" height="15" fill="rgb(209,212,41)" fg:x="23737591602" fg:w="85166575"/><text x="99.8925%" y="415.50"></text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_task (85,166,575 samples, 0.36%)</title><rect x="99.6425%" y="389" width="0.3575%" height="15" fill="rgb(207,154,6)" fg:x="23737591602" fg:w="85166575"/><text x="99.8925%" y="399.50"></text></g><g><title>syscall (85,166,575 samples, 0.36%)</title><rect x="99.6425%" y="373" width="0.3575%" height="15" fill="rgb(223,64,47)" fg:x="23737591602" fg:w="85166575"/><text x="99.8925%" y="383.50"></text></g><g><title>[unknown] (85,166,575 samples, 0.36%)</title><rect x="99.6425%" y="357" width="0.3575%" height="15" fill="rgb(211,161,38)" fg:x="23737591602" fg:w="85166575"/><text x="99.8925%" y="367.50"></text></g></svg></svg>