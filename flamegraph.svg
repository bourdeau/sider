<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="806" onload="init(evt)" viewBox="0 0 1200 806" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="806" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="789.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="789.00"> </text><svg id="frames" x="10" width="1180" total_samples="389532075"><g><title>&lt;serde_ignored::Wrap&lt;X,F&gt; as serde::de::Visitor&gt;::visit_map (2,582,043 samples, 0.66%)</title><rect x="0.0000%" y="725" width="0.6629%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="2582043"/><text x="0.2500%" y="735.50"></text></g><g><title>&lt;toml_edit::de::table::TableMapAccess as serde::de::MapAccess&gt;::next_value_seed (2,582,043 samples, 0.66%)</title><rect x="0.0000%" y="709" width="0.6629%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="2582043"/><text x="0.2500%" y="719.50"></text></g><g><title>&lt;toml_edit::de::value::ValueDeserializer as serde::de::Deserializer&gt;::deserialize_option (2,582,043 samples, 0.66%)</title><rect x="0.0000%" y="693" width="0.6629%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="2582043"/><text x="0.2500%" y="703.50"></text></g><g><title>&lt;toml_edit::de::value::ValueDeserializer as serde::de::Deserializer&gt;::deserialize_any (2,582,043 samples, 0.66%)</title><rect x="0.0000%" y="677" width="0.6629%" height="15" fill="rgb(248,212,6)" fg:x="0" fg:w="2582043"/><text x="0.2500%" y="687.50"></text></g><g><title>&lt;serde_ignored::Wrap&lt;X,F&gt; as serde::de::Visitor&gt;::visit_map (2,582,043 samples, 0.66%)</title><rect x="0.0000%" y="661" width="0.6629%" height="15" fill="rgb(208,68,35)" fg:x="0" fg:w="2582043"/><text x="0.2500%" y="671.50"></text></g><g><title>&lt;toml_edit::de::table::TableMapAccess as serde::de::MapAccess&gt;::next_value_seed (2,582,043 samples, 0.66%)</title><rect x="0.0000%" y="645" width="0.6629%" height="15" fill="rgb(232,128,0)" fg:x="0" fg:w="2582043"/><text x="0.2500%" y="655.50"></text></g><g><title>&lt;cargo_util_schemas::manifest::InheritableDependency as serde::de::Deserialize&gt;::deserialize (2,582,043 samples, 0.66%)</title><rect x="0.0000%" y="629" width="0.6629%" height="15" fill="rgb(207,160,47)" fg:x="0" fg:w="2582043"/><text x="0.2500%" y="639.50"></text></g><g><title>&lt;toml_edit::de::value::ValueDeserializer as serde::de::Deserializer&gt;::deserialize_any (2,582,043 samples, 0.66%)</title><rect x="0.0000%" y="613" width="0.6629%" height="15" fill="rgb(228,23,34)" fg:x="0" fg:w="2582043"/><text x="0.2500%" y="623.50"></text></g><g><title>&lt;serde_value::de::ValueVisitor as serde::de::Visitor&gt;::visit_map (2,582,043 samples, 0.66%)</title><rect x="0.0000%" y="597" width="0.6629%" height="15" fill="rgb(218,30,26)" fg:x="0" fg:w="2582043"/><text x="0.2500%" y="607.50"></text></g><g><title>&lt;toml_edit::de::table::TableMapAccess as serde::de::MapAccess&gt;::next_value_seed (2,582,043 samples, 0.66%)</title><rect x="0.0000%" y="581" width="0.6629%" height="15" fill="rgb(220,122,19)" fg:x="0" fg:w="2582043"/><text x="0.2500%" y="591.50"></text></g><g><title>&lt;toml_edit::de::value::ValueDeserializer as serde::de::Deserializer&gt;::deserialize_any (2,582,043 samples, 0.66%)</title><rect x="0.0000%" y="565" width="0.6629%" height="15" fill="rgb(250,228,42)" fg:x="0" fg:w="2582043"/><text x="0.2500%" y="575.50"></text></g><g><title>&lt;serde_value::de::ValueVisitor as serde::de::Visitor&gt;::visit_seq (2,582,043 samples, 0.66%)</title><rect x="0.0000%" y="549" width="0.6629%" height="15" fill="rgb(240,193,28)" fg:x="0" fg:w="2582043"/><text x="0.2500%" y="559.50"></text></g><g><title>&lt;cargo_util_schemas::manifest::TomlDependency&lt;P&gt; as serde::de::Deserialize&gt;::deserialize (3,252,223 samples, 0.83%)</title><rect x="0.6629%" y="597" width="0.8349%" height="15" fill="rgb(216,20,37)" fg:x="2582043" fg:w="3252223"/><text x="0.9129%" y="607.50"></text></g><g><title>&lt;serde_value::de::ValueDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3,252,223 samples, 0.83%)</title><rect x="0.6629%" y="581" width="0.8349%" height="15" fill="rgb(206,188,39)" fg:x="2582043" fg:w="3252223"/><text x="0.9129%" y="591.50"></text></g><g><title>_ZN4core3ops8function6FnOnce40call_once$u7b$$u7b$vtable.shim$u7d$$u7d$17h80a90ca79a4a2a9fE.llvm.10261705501845221505 (3,252,223 samples, 0.83%)</title><rect x="0.6629%" y="565" width="0.8349%" height="15" fill="rgb(217,207,13)" fg:x="2582043" fg:w="3252223"/><text x="0.9129%" y="575.50"></text></g><g><title>&lt;cargo_util_schemas::manifest::_::&lt;impl serde::de::Deserialize for cargo_util_schemas::manifest::TomlDetailedDependency&lt;P&gt;&gt;::deserialize::__Visitor&lt;P&gt; as serde::de::Visitor&gt;::visit_map (3,252,223 samples, 0.83%)</title><rect x="0.6629%" y="549" width="0.8349%" height="15" fill="rgb(231,73,38)" fg:x="2582043" fg:w="3252223"/><text x="0.9129%" y="559.50"></text></g><g><title>&lt;Access as serde_untagged::map::ErasedMapAccess&gt;::erased_next_value_seed (3,252,223 samples, 0.83%)</title><rect x="0.6629%" y="533" width="0.8349%" height="15" fill="rgb(225,20,46)" fg:x="2582043" fg:w="3252223"/><text x="0.9129%" y="543.50"></text></g><g><title>&lt;&amp;mut dyn serde_untagged::seed::ErasedDeserializeSeed as serde::de::DeserializeSeed&gt;::deserialize (3,252,223 samples, 0.83%)</title><rect x="0.6629%" y="517" width="0.8349%" height="15" fill="rgb(210,31,41)" fg:x="2582043" fg:w="3252223"/><text x="0.9129%" y="527.50"></text></g><g><title>&lt;core::option::Option&lt;Seed&gt; as serde_untagged::seed::ErasedDeserializeSeed&gt;::erased_deserialize (3,252,223 samples, 0.83%)</title><rect x="0.6629%" y="501" width="0.8349%" height="15" fill="rgb(221,200,47)" fg:x="2582043" fg:w="3252223"/><text x="0.9129%" y="511.50"></text></g><g><title>erased_serde::de::&lt;impl serde::de::Deserializer for alloc::boxed::Box&lt;dyn erased_serde::de::Deserializer&gt;&gt;::deserialize_option (3,252,223 samples, 0.83%)</title><rect x="0.6629%" y="485" width="0.8349%" height="15" fill="rgb(226,26,5)" fg:x="2582043" fg:w="3252223"/><text x="0.9129%" y="495.50"></text></g><g><title>&lt;erased_serde::de::erase::Deserializer&lt;T&gt; as erased_serde::de::Deserializer&gt;::erased_deserialize_option (3,252,223 samples, 0.83%)</title><rect x="0.6629%" y="469" width="0.8349%" height="15" fill="rgb(249,33,26)" fg:x="2582043" fg:w="3252223"/><text x="0.9129%" y="479.50"></text></g><g><title>&lt;toml_edit::de::Deserializer&lt;S&gt; as serde::de::Deserializer&gt;::deserialize_struct (5,666,090 samples, 1.45%)</title><rect x="0.6629%" y="725" width="1.4546%" height="15" fill="rgb(235,183,28)" fg:x="2582043" fg:w="5666090"/><text x="0.9129%" y="735.50"></text></g><g><title>&lt;serde_ignored::Wrap&lt;X,F&gt; as serde::de::Visitor&gt;::visit_map (5,666,090 samples, 1.45%)</title><rect x="0.6629%" y="709" width="1.4546%" height="15" fill="rgb(221,5,38)" fg:x="2582043" fg:w="5666090"/><text x="0.9129%" y="719.50"></text></g><g><title>&lt;toml_edit::de::table::TableMapAccess as serde::de::MapAccess&gt;::next_value_seed (5,666,090 samples, 1.45%)</title><rect x="0.6629%" y="693" width="1.4546%" height="15" fill="rgb(247,18,42)" fg:x="2582043" fg:w="5666090"/><text x="0.9129%" y="703.50"></text></g><g><title>&lt;toml_edit::de::value::ValueDeserializer as serde::de::Deserializer&gt;::deserialize_option (5,666,090 samples, 1.45%)</title><rect x="0.6629%" y="677" width="1.4546%" height="15" fill="rgb(241,131,45)" fg:x="2582043" fg:w="5666090"/><text x="0.9129%" y="687.50"></text></g><g><title>&lt;toml_edit::de::value::ValueDeserializer as serde::de::Deserializer&gt;::deserialize_any (5,666,090 samples, 1.45%)</title><rect x="0.6629%" y="661" width="1.4546%" height="15" fill="rgb(249,31,29)" fg:x="2582043" fg:w="5666090"/><text x="0.9129%" y="671.50"></text></g><g><title>&lt;serde_ignored::Wrap&lt;X,F&gt; as serde::de::Visitor&gt;::visit_map (5,666,090 samples, 1.45%)</title><rect x="0.6629%" y="645" width="1.4546%" height="15" fill="rgb(225,111,53)" fg:x="2582043" fg:w="5666090"/><text x="0.9129%" y="655.50"></text></g><g><title>&lt;toml_edit::de::table::TableMapAccess as serde::de::MapAccess&gt;::next_value_seed (5,666,090 samples, 1.45%)</title><rect x="0.6629%" y="629" width="1.4546%" height="15" fill="rgb(238,160,17)" fg:x="2582043" fg:w="5666090"/><text x="0.9129%" y="639.50"></text></g><g><title>&lt;cargo_util_schemas::manifest::InheritableDependency as serde::de::Deserialize&gt;::deserialize (5,666,090 samples, 1.45%)</title><rect x="0.6629%" y="613" width="1.4546%" height="15" fill="rgb(214,148,48)" fg:x="2582043" fg:w="5666090"/><text x="0.9129%" y="623.50"></text></g><g><title>&lt;toml_edit::de::value::ValueDeserializer as serde::de::Deserializer&gt;::deserialize_any (2,413,867 samples, 0.62%)</title><rect x="1.4978%" y="597" width="0.6197%" height="15" fill="rgb(232,36,49)" fg:x="5834266" fg:w="2413867"/><text x="1.7478%" y="607.50"></text></g><g><title>&lt;serde_value::de::ValueVisitor as serde::de::Visitor&gt;::visit_map (2,413,867 samples, 0.62%)</title><rect x="1.4978%" y="581" width="0.6197%" height="15" fill="rgb(209,103,24)" fg:x="5834266" fg:w="2413867"/><text x="1.7478%" y="591.50"></text></g><g><title>&lt;toml_edit::de::table::TableMapAccess as serde::de::MapAccess&gt;::next_value_seed (2,413,867 samples, 0.62%)</title><rect x="1.4978%" y="565" width="0.6197%" height="15" fill="rgb(229,88,8)" fg:x="5834266" fg:w="2413867"/><text x="1.7478%" y="575.50"></text></g><g><title>_ZN4core3ptr40drop_in_place$LT$toml_edit..key..Key$GT$17hf8b2e43c02e9b17eE.llvm.10261705501845221505 (2,413,867 samples, 0.62%)</title><rect x="1.4978%" y="549" width="0.6197%" height="15" fill="rgb(213,181,19)" fg:x="5834266" fg:w="2413867"/><text x="1.7478%" y="559.50"></text></g><g><title>cfree@GLIBC_2.2.5 (2,413,867 samples, 0.62%)</title><rect x="1.4978%" y="533" width="0.6197%" height="15" fill="rgb(254,191,54)" fg:x="5834266" fg:w="2413867"/><text x="1.7478%" y="543.50"></text></g><g><title>_int_free (2,413,867 samples, 0.62%)</title><rect x="1.4978%" y="517" width="0.6197%" height="15" fill="rgb(241,83,37)" fg:x="5834266" fg:w="2413867"/><text x="1.7478%" y="527.50"></text></g><g><title>&lt;toml_edit::de::value::ValueDeserializer as serde::de::Deserializer&gt;::deserialize_option (2,483,462 samples, 0.64%)</title><rect x="2.1174%" y="725" width="0.6376%" height="15" fill="rgb(233,36,39)" fg:x="8248133" fg:w="2483462"/><text x="2.3674%" y="735.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::boxed::Box&lt;T&gt;&gt;::deserialize (2,483,462 samples, 0.64%)</title><rect x="2.1174%" y="709" width="0.6376%" height="15" fill="rgb(226,3,54)" fg:x="8248133" fg:w="2483462"/><text x="2.3674%" y="719.50"></text></g><g><title>&lt;toml_edit::de::value::ValueDeserializer as serde::de::Deserializer&gt;::deserialize_struct (2,483,462 samples, 0.64%)</title><rect x="2.1174%" y="693" width="0.6376%" height="15" fill="rgb(245,192,40)" fg:x="8248133" fg:w="2483462"/><text x="2.3674%" y="703.50"></text></g><g><title>_ZN189_$LT$cargo_util_schemas..manifest.._..$LT$impl$u20$serde..de..Deserialize$u20$for$u20$cargo_util_schemas..manifest..TomlPackage$GT$..deserialize..__Visitor$u20$as$u20$serde..de..Visitor$GT$9visit_map17h1461f9c76e41c9e2E.llvm.12570498106867794895 (2,483,462 samples, 0.64%)</title><rect x="2.1174%" y="677" width="0.6376%" height="15" fill="rgb(238,167,29)" fg:x="8248133" fg:w="2483462"/><text x="2.3674%" y="687.50"></text></g><g><title>&lt;toml_edit::de::table::TableMapAccess as serde::de::MapAccess&gt;::next_value_seed (2,483,462 samples, 0.64%)</title><rect x="2.1174%" y="661" width="0.6376%" height="15" fill="rgb(232,182,51)" fg:x="8248133" fg:w="2483462"/><text x="2.3674%" y="671.50"></text></g><g><title>&lt;toml_edit::de::value::ValueDeserializer as serde::de::Deserializer&gt;::deserialize_option (2,483,462 samples, 0.64%)</title><rect x="2.1174%" y="645" width="0.6376%" height="15" fill="rgb(231,60,39)" fg:x="8248133" fg:w="2483462"/><text x="2.3674%" y="655.50"></text></g><g><title>&lt;toml_edit::de::value::ValueDeserializer as serde::de::Deserializer&gt;::deserialize_any (2,483,462 samples, 0.64%)</title><rect x="2.1174%" y="629" width="0.6376%" height="15" fill="rgb(208,69,12)" fg:x="8248133" fg:w="2483462"/><text x="2.3674%" y="639.50"></text></g><g><title>&lt;&lt;toml::value::Value as serde::de::Deserialize&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2,483,462 samples, 0.64%)</title><rect x="2.1174%" y="613" width="0.6376%" height="15" fill="rgb(235,93,37)" fg:x="8248133" fg:w="2483462"/><text x="2.3674%" y="623.50"></text></g><g><title>&lt;toml_edit::de::table::TableMapAccess as serde::de::MapAccess&gt;::next_value_seed (2,483,462 samples, 0.64%)</title><rect x="2.1174%" y="597" width="0.6376%" height="15" fill="rgb(213,116,39)" fg:x="8248133" fg:w="2483462"/><text x="2.3674%" y="607.50"></text></g><g><title>&lt;toml_edit::de::value::ValueDeserializer as serde::de::Deserializer&gt;::deserialize_any (2,483,462 samples, 0.64%)</title><rect x="2.1174%" y="581" width="0.6376%" height="15" fill="rgb(222,207,29)" fg:x="8248133" fg:w="2483462"/><text x="2.3674%" y="591.50"></text></g><g><title>&lt;&lt;toml::value::Value as serde::de::Deserialize&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2,483,462 samples, 0.64%)</title><rect x="2.1174%" y="565" width="0.6376%" height="15" fill="rgb(206,96,30)" fg:x="8248133" fg:w="2483462"/><text x="2.3674%" y="575.50"></text></g><g><title>&lt;toml_edit::de::table::TableMapAccess as serde::de::MapAccess&gt;::next_value_seed (2,483,462 samples, 0.64%)</title><rect x="2.1174%" y="549" width="0.6376%" height="15" fill="rgb(218,138,4)" fg:x="8248133" fg:w="2483462"/><text x="2.3674%" y="559.50"></text></g><g><title>&lt;toml_edit::de::value::ValueDeserializer as serde::de::Deserializer&gt;::deserialize_any (2,483,462 samples, 0.64%)</title><rect x="2.1174%" y="533" width="0.6376%" height="15" fill="rgb(250,191,14)" fg:x="8248133" fg:w="2483462"/><text x="2.3674%" y="543.50"></text></g><g><title>&lt;&lt;toml::value::Value as serde::de::Deserialize&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2,483,462 samples, 0.64%)</title><rect x="2.1174%" y="517" width="0.6376%" height="15" fill="rgb(239,60,40)" fg:x="8248133" fg:w="2483462"/><text x="2.3674%" y="527.50"></text></g><g><title>&lt;toml_edit::de::table::TableMapAccess as serde::de::MapAccess&gt;::next_value_seed (2,483,462 samples, 0.64%)</title><rect x="2.1174%" y="501" width="0.6376%" height="15" fill="rgb(206,27,48)" fg:x="8248133" fg:w="2483462"/><text x="2.3674%" y="511.50"></text></g><g><title>__memmove_avx_unaligned_erms (2,483,462 samples, 0.64%)</title><rect x="2.1174%" y="485" width="0.6376%" height="15" fill="rgb(225,35,8)" fg:x="8248133" fg:w="2483462"/><text x="2.3674%" y="495.50"></text></g><g><title>[unknown] (2,486,989 samples, 0.64%)</title><rect x="2.7550%" y="725" width="0.6385%" height="15" fill="rgb(250,213,24)" fg:x="10731595" fg:w="2486989"/><text x="3.0050%" y="735.50"></text></g><g><title>_int_malloc (2,486,989 samples, 0.64%)</title><rect x="2.7550%" y="709" width="0.6385%" height="15" fill="rgb(247,123,22)" fg:x="10731595" fg:w="2486989"/><text x="3.0050%" y="719.50"></text></g><g><title>[unknown] (2,486,989 samples, 0.64%)</title><rect x="2.7550%" y="693" width="0.6385%" height="15" fill="rgb(231,138,38)" fg:x="10731595" fg:w="2486989"/><text x="3.0050%" y="703.50"></text></g><g><title>[unknown] (2,486,989 samples, 0.64%)</title><rect x="2.7550%" y="677" width="0.6385%" height="15" fill="rgb(231,145,46)" fg:x="10731595" fg:w="2486989"/><text x="3.0050%" y="687.50"></text></g><g><title>_ZN5cargo3ops7resolve21resolve_with_registry17h15aaf12c47a16657E.llvm.2219623679986394725 (2,129,632 samples, 0.55%)</title><rect x="3.3935%" y="677" width="0.5467%" height="15" fill="rgb(251,118,11)" fg:x="13218584" fg:w="2129632"/><text x="3.6435%" y="687.50"></text></g><g><title>cargo::ops::resolve::resolve_with_previous (2,129,632 samples, 0.55%)</title><rect x="3.3935%" y="661" width="0.5467%" height="15" fill="rgb(217,147,25)" fg:x="13218584" fg:w="2129632"/><text x="3.6435%" y="671.50"></text></g><g><title>cargo::core::resolver::resolve (2,129,632 samples, 0.55%)</title><rect x="3.3935%" y="645" width="0.5467%" height="15" fill="rgb(247,81,37)" fg:x="13218584" fg:w="2129632"/><text x="3.6435%" y="655.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (2,129,632 samples, 0.55%)</title><rect x="3.3935%" y="629" width="0.5467%" height="15" fill="rgb(209,12,38)" fg:x="13218584" fg:w="2129632"/><text x="3.6435%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,129,632 samples, 0.55%)</title><rect x="3.3935%" y="613" width="0.5467%" height="15" fill="rgb(227,1,9)" fg:x="13218584" fg:w="2129632"/><text x="3.6435%" y="623.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2,129,632 samples, 0.55%)</title><rect x="3.3935%" y="597" width="0.5467%" height="15" fill="rgb(248,47,43)" fg:x="13218584" fg:w="2129632"/><text x="3.6435%" y="607.50"></text></g><g><title>cargo::core::resolver::features::FeatureResolver::resolve (2,447,828 samples, 0.63%)</title><rect x="3.9402%" y="677" width="0.6284%" height="15" fill="rgb(221,10,30)" fg:x="15348216" fg:w="2447828"/><text x="4.1902%" y="687.50"></text></g><g><title>cargo::core::resolver::features::FeatureResolver::activate_pkg (2,447,828 samples, 0.63%)</title><rect x="3.9402%" y="661" width="0.6284%" height="15" fill="rgb(210,229,1)" fg:x="15348216" fg:w="2447828"/><text x="4.1902%" y="671.50"></text></g><g><title>cargo::core::resolver::features::FeatureResolver::activate_pkg (2,447,828 samples, 0.63%)</title><rect x="3.9402%" y="645" width="0.6284%" height="15" fill="rgb(222,148,37)" fg:x="15348216" fg:w="2447828"/><text x="4.1902%" y="655.50"></text></g><g><title>cargo::core::resolver::features::FeatureResolver::activate_fv (2,447,828 samples, 0.63%)</title><rect x="3.9402%" y="629" width="0.6284%" height="15" fill="rgb(234,67,33)" fg:x="15348216" fg:w="2447828"/><text x="4.1902%" y="639.50"></text></g><g><title>cargo::core::resolver::features::FeatureResolver::activate_rec (2,447,828 samples, 0.63%)</title><rect x="3.9402%" y="613" width="0.6284%" height="15" fill="rgb(247,98,35)" fg:x="15348216" fg:w="2447828"/><text x="4.1902%" y="623.50"></text></g><g><title>cargo::core::resolver::features::FeatureResolver::activate_fv (2,447,828 samples, 0.63%)</title><rect x="3.9402%" y="597" width="0.6284%" height="15" fill="rgb(247,138,52)" fg:x="15348216" fg:w="2447828"/><text x="4.1902%" y="607.50"></text></g><g><title>cargo::core::resolver::features::FeatureResolver::activate_rec (2,447,828 samples, 0.63%)</title><rect x="3.9402%" y="581" width="0.6284%" height="15" fill="rgb(213,79,30)" fg:x="15348216" fg:w="2447828"/><text x="4.1902%" y="591.50"></text></g><g><title>cargo::core::resolver::features::FeatureResolver::activate_fv (2,447,828 samples, 0.63%)</title><rect x="3.9402%" y="565" width="0.6284%" height="15" fill="rgb(246,177,23)" fg:x="15348216" fg:w="2447828"/><text x="4.1902%" y="575.50"></text></g><g><title>cargo::core::resolver::features::FeatureResolver::activate_fv (2,447,828 samples, 0.63%)</title><rect x="3.9402%" y="549" width="0.6284%" height="15" fill="rgb(230,62,27)" fg:x="15348216" fg:w="2447828"/><text x="4.1902%" y="559.50"></text></g><g><title>cargo::core::resolver::features::FeatureResolver::activate_pkg (2,447,828 samples, 0.63%)</title><rect x="3.9402%" y="533" width="0.6284%" height="15" fill="rgb(216,154,8)" fg:x="15348216" fg:w="2447828"/><text x="4.1902%" y="543.50"></text></g><g><title>cargo::core::resolver::features::FeatureResolver::activate_pkg (2,447,828 samples, 0.63%)</title><rect x="3.9402%" y="517" width="0.6284%" height="15" fill="rgb(244,35,45)" fg:x="15348216" fg:w="2447828"/><text x="4.1902%" y="527.50"></text></g><g><title>cargo::core::resolver::features::FeatureResolver::activate_fv (2,447,828 samples, 0.63%)</title><rect x="3.9402%" y="501" width="0.6284%" height="15" fill="rgb(251,115,12)" fg:x="15348216" fg:w="2447828"/><text x="4.1902%" y="511.50"></text></g><g><title>cargo::core::resolver::features::FeatureResolver::activate_rec (2,447,828 samples, 0.63%)</title><rect x="3.9402%" y="485" width="0.6284%" height="15" fill="rgb(240,54,50)" fg:x="15348216" fg:w="2447828"/><text x="4.1902%" y="495.50"></text></g><g><title>_ZN5cargo8commands8metadata4exec17h7975ae71b1a65801E.llvm.650511682995495274 (7,770,701 samples, 1.99%)</title><rect x="3.3935%" y="725" width="1.9949%" height="15" fill="rgb(233,84,52)" fg:x="13218584" fg:w="7770701"/><text x="3.6435%" y="735.50">_..</text></g><g><title>cargo::ops::cargo_output_metadata::output_metadata (7,770,701 samples, 1.99%)</title><rect x="3.3935%" y="709" width="1.9949%" height="15" fill="rgb(207,117,47)" fg:x="13218584" fg:w="7770701"/><text x="3.6435%" y="719.50">c..</text></g><g><title>cargo::ops::resolve::resolve_ws_with_opts (7,770,701 samples, 1.99%)</title><rect x="3.3935%" y="693" width="1.9949%" height="15" fill="rgb(249,43,39)" fg:x="13218584" fg:w="7770701"/><text x="3.6435%" y="703.50">c..</text></g><g><title>cargo::ops::resolve::resolve_with_previous (3,193,241 samples, 0.82%)</title><rect x="4.5686%" y="677" width="0.8198%" height="15" fill="rgb(209,38,44)" fg:x="17796044" fg:w="3193241"/><text x="4.8186%" y="687.50"></text></g><g><title>cargo::core::resolver::resolve (3,193,241 samples, 0.82%)</title><rect x="4.5686%" y="661" width="0.8198%" height="15" fill="rgb(236,212,23)" fg:x="17796044" fg:w="3193241"/><text x="4.8186%" y="671.50"></text></g><g><title>cargo::core::resolver::check_cycles::visit (3,193,241 samples, 0.82%)</title><rect x="4.5686%" y="645" width="0.8198%" height="15" fill="rgb(242,79,21)" fg:x="17796044" fg:w="3193241"/><text x="4.8186%" y="655.50"></text></g><g><title>cargo::core::resolver::check_cycles::visit (3,193,241 samples, 0.82%)</title><rect x="4.5686%" y="629" width="0.8198%" height="15" fill="rgb(211,96,35)" fg:x="17796044" fg:w="3193241"/><text x="4.8186%" y="639.50"></text></g><g><title>cargo::core::resolver::check_cycles::visit (3,193,241 samples, 0.82%)</title><rect x="4.5686%" y="613" width="0.8198%" height="15" fill="rgb(253,215,40)" fg:x="17796044" fg:w="3193241"/><text x="4.8186%" y="623.50"></text></g><g><title>core::hash::BuildHasher::hash_one (3,193,241 samples, 0.82%)</title><rect x="4.5686%" y="597" width="0.8198%" height="15" fill="rgb(211,81,21)" fg:x="17796044" fg:w="3193241"/><text x="4.8186%" y="607.50"></text></g><g><title>&lt;cargo::core::source_id::SourceId as core::hash::Hash&gt;::hash (3,193,241 samples, 0.82%)</title><rect x="4.5686%" y="581" width="0.8198%" height="15" fill="rgb(208,190,38)" fg:x="17796044" fg:w="3193241"/><text x="4.8186%" y="591.50"></text></g><g><title>_ZN71_$LT$core..hash..sip..Hasher$LT$S$GT$$u20$as$u20$core..hash..Hasher$GT$5write17h20779edf860a8d85E.llvm.66316692854318981 (3,193,241 samples, 0.82%)</title><rect x="4.5686%" y="565" width="0.8198%" height="15" fill="rgb(235,213,38)" fg:x="17796044" fg:w="3193241"/><text x="4.8186%" y="575.50"></text></g><g><title>_ZN70_$LT$anstream..auto..AutoStream$LT$S$GT$$u20$as$u20$std..io..Write$GT$9write_fmt17h6c0f54df555f437eE.llvm.6566457644034697705 (3,961,371 samples, 1.02%)</title><rect x="5.3883%" y="533" width="1.0170%" height="15" fill="rgb(237,122,38)" fg:x="20989285" fg:w="3961371"/><text x="5.6383%" y="543.50"></text></g><g><title>anstream::strip::write_fmt (3,961,371 samples, 1.02%)</title><rect x="5.3883%" y="517" width="1.0170%" height="15" fill="rgb(244,218,35)" fg:x="20989285" fg:w="3961371"/><text x="5.6383%" y="527.50"></text></g><g><title>anstream::fmt::Adapter&lt;W&gt;::write_fmt (3,961,371 samples, 1.02%)</title><rect x="5.3883%" y="501" width="1.0170%" height="15" fill="rgb(240,68,47)" fg:x="20989285" fg:w="3961371"/><text x="5.6383%" y="511.50"></text></g><g><title>core::fmt::write (3,961,371 samples, 1.02%)</title><rect x="5.3883%" y="485" width="1.0170%" height="15" fill="rgb(210,16,53)" fg:x="20989285" fg:w="3961371"/><text x="5.6383%" y="495.50"></text></g><g><title>_ZN68_$LT$anstream..fmt..Adapter$LT$W$GT$$u20$as$u20$core..fmt..Write$GT$9write_str17hd245ed5f5d6b0de8E.llvm.5627297724353557275 (3,961,371 samples, 1.02%)</title><rect x="5.3883%" y="469" width="1.0170%" height="15" fill="rgb(235,124,12)" fg:x="20989285" fg:w="3961371"/><text x="5.6383%" y="479.50"></text></g><g><title>_ZN8anstream7adapter5strip10next_bytes17h51a5df95b147fc45E.llvm.7088165499063855561 (3,961,371 samples, 1.02%)</title><rect x="5.3883%" y="453" width="1.0170%" height="15" fill="rgb(224,169,11)" fg:x="20989285" fg:w="3961371"/><text x="5.6383%" y="463.50"></text></g><g><title>cargo::core::package::_::&lt;impl serde::ser::Serialize for cargo::core::package::SerializedPackage&gt;::serialize (3,878,668 samples, 1.00%)</title><rect x="6.4053%" y="501" width="0.9957%" height="15" fill="rgb(250,166,2)" fg:x="24950656" fg:w="3878668"/><text x="6.6553%" y="511.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (3,878,668 samples, 1.00%)</title><rect x="6.4053%" y="485" width="0.9957%" height="15" fill="rgb(242,216,29)" fg:x="24950656" fg:w="3878668"/><text x="6.6553%" y="495.50"></text></g><g><title>&lt;cargo::core::dependency::Dependency as serde::ser::Serialize&gt;::serialize (3,878,668 samples, 1.00%)</title><rect x="6.4053%" y="469" width="0.9957%" height="15" fill="rgb(230,116,27)" fg:x="24950656" fg:w="3878668"/><text x="6.6553%" y="479.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (3,878,668 samples, 1.00%)</title><rect x="6.4053%" y="453" width="0.9957%" height="15" fill="rgb(228,99,48)" fg:x="24950656" fg:w="3878668"/><text x="6.6553%" y="463.50"></text></g><g><title>_ZN10serde_json3ser27format_escaped_str_contents17h1eef34adc7827455E.llvm.6338715151740473487 (3,878,668 samples, 1.00%)</title><rect x="6.4053%" y="437" width="0.9957%" height="15" fill="rgb(253,11,6)" fg:x="24950656" fg:w="3878668"/><text x="6.6553%" y="447.50"></text></g><g><title>cargo::cli::Exec::exec (11,763,894 samples, 3.02%)</title><rect x="5.3883%" y="581" width="3.0200%" height="15" fill="rgb(247,143,39)" fg:x="20989285" fg:w="11763894"/><text x="5.6383%" y="591.50">car..</text></g><g><title>_ZN5cargo8commands8metadata4exec17h7975ae71b1a65801E.llvm.650511682995495274 (11,763,894 samples, 3.02%)</title><rect x="5.3883%" y="565" width="3.0200%" height="15" fill="rgb(236,97,10)" fg:x="20989285" fg:w="11763894"/><text x="5.6383%" y="575.50">_ZN..</text></g><g><title>cargo::core::shell::Shell::print_json (11,763,894 samples, 3.02%)</title><rect x="5.3883%" y="549" width="3.0200%" height="15" fill="rgb(233,208,19)" fg:x="20989285" fg:w="11763894"/><text x="5.6383%" y="559.50">car..</text></g><g><title>cargo::ops::cargo_output_metadata::_::&lt;impl serde::ser::Serialize for cargo::ops::cargo_output_metadata::ExportInfo&gt;::serialize (7,802,523 samples, 2.00%)</title><rect x="6.4053%" y="533" width="2.0031%" height="15" fill="rgb(216,164,2)" fg:x="24950656" fg:w="7802523"/><text x="6.6553%" y="543.50">c..</text></g><g><title>serde::ser::SerializeMap::serialize_entry (7,802,523 samples, 2.00%)</title><rect x="6.4053%" y="517" width="2.0031%" height="15" fill="rgb(220,129,5)" fg:x="24950656" fg:w="7802523"/><text x="6.6553%" y="527.50">s..</text></g><g><title>cargo::ops::cargo_output_metadata::_::&lt;impl serde::ser::Serialize for cargo::ops::cargo_output_metadata::MetadataResolve&gt;::serialize (3,923,855 samples, 1.01%)</title><rect x="7.4010%" y="501" width="1.0073%" height="15" fill="rgb(242,17,10)" fg:x="28829324" fg:w="3923855"/><text x="7.6510%" y="511.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (3,923,855 samples, 1.01%)</title><rect x="7.4010%" y="485" width="1.0073%" height="15" fill="rgb(242,107,0)" fg:x="28829324" fg:w="3923855"/><text x="7.6510%" y="495.50"></text></g><g><title>cargo::ops::cargo_output_metadata::_::&lt;impl serde::ser::Serialize for cargo::ops::cargo_output_metadata::MetadataResolveNode&gt;::serialize (3,923,855 samples, 1.01%)</title><rect x="7.4010%" y="469" width="1.0073%" height="15" fill="rgb(251,28,31)" fg:x="28829324" fg:w="3923855"/><text x="7.6510%" y="479.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (3,923,855 samples, 1.01%)</title><rect x="7.4010%" y="453" width="1.0073%" height="15" fill="rgb(233,223,10)" fg:x="28829324" fg:w="3923855"/><text x="7.6510%" y="463.50"></text></g><g><title>&lt;cargo_util_schemas::core::package_id_spec::PackageIdSpec as serde::ser::Serialize&gt;::serialize (3,923,855 samples, 1.01%)</title><rect x="7.4010%" y="437" width="1.0073%" height="15" fill="rgb(215,21,27)" fg:x="28829324" fg:w="3923855"/><text x="7.6510%" y="447.50"></text></g><g><title>&lt;cargo_util_schemas::core::package_id_spec::PackageIdSpec as core::fmt::Display&gt;::fmt (3,923,855 samples, 1.01%)</title><rect x="7.4010%" y="421" width="1.0073%" height="15" fill="rgb(232,23,21)" fg:x="28829324" fg:w="3923855"/><text x="7.6510%" y="431.50"></text></g><g><title>core::fmt::write (3,923,855 samples, 1.01%)</title><rect x="7.4010%" y="405" width="1.0073%" height="15" fill="rgb(244,5,23)" fg:x="28829324" fg:w="3923855"/><text x="7.6510%" y="415.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (3,923,855 samples, 1.01%)</title><rect x="7.4010%" y="389" width="1.0073%" height="15" fill="rgb(226,81,46)" fg:x="28829324" fg:w="3923855"/><text x="7.6510%" y="399.50"></text></g><g><title>SSL_CTX_new_ex (2,518,802 samples, 0.65%)</title><rect x="8.4083%" y="469" width="0.6466%" height="15" fill="rgb(247,70,30)" fg:x="32753179" fg:w="2518802"/><text x="8.6583%" y="479.50"></text></g><g><title>ssl_load_ciphers (2,518,802 samples, 0.65%)</title><rect x="8.4083%" y="453" width="0.6466%" height="15" fill="rgb(212,68,19)" fg:x="32753179" fg:w="2518802"/><text x="8.6583%" y="463.50"></text></g><g><title>ssl_evp_cipher_fetch (2,518,802 samples, 0.65%)</title><rect x="8.4083%" y="437" width="0.6466%" height="15" fill="rgb(240,187,13)" fg:x="32753179" fg:w="2518802"/><text x="8.6583%" y="447.50"></text></g><g><title>EVP_CIPHER_fetch (2,518,802 samples, 0.65%)</title><rect x="8.4083%" y="421" width="0.6466%" height="15" fill="rgb(223,113,26)" fg:x="32753179" fg:w="2518802"/><text x="8.6583%" y="431.50"></text></g><g><title>evp_generic_fetch (2,518,802 samples, 0.65%)</title><rect x="8.4083%" y="405" width="0.6466%" height="15" fill="rgb(206,192,2)" fg:x="32753179" fg:w="2518802"/><text x="8.6583%" y="415.50"></text></g><g><title>ossl_method_construct (2,518,802 samples, 0.65%)</title><rect x="8.4083%" y="389" width="0.6466%" height="15" fill="rgb(241,108,4)" fg:x="32753179" fg:w="2518802"/><text x="8.6583%" y="399.50"></text></g><g><title>ossl_algorithm_do_all (2,518,802 samples, 0.65%)</title><rect x="8.4083%" y="373" width="0.6466%" height="15" fill="rgb(247,173,49)" fg:x="32753179" fg:w="2518802"/><text x="8.6583%" y="383.50"></text></g><g><title>ossl_provider_doall_activated (2,518,802 samples, 0.65%)</title><rect x="8.4083%" y="357" width="0.6466%" height="15" fill="rgb(224,114,35)" fg:x="32753179" fg:w="2518802"/><text x="8.6583%" y="367.50"></text></g><g><title>algorithm_do_this (2,518,802 samples, 0.65%)</title><rect x="8.4083%" y="341" width="0.6466%" height="15" fill="rgb(245,159,27)" fg:x="32753179" fg:w="2518802"/><text x="8.6583%" y="351.50"></text></g><g><title>ossl_method_construct_this (2,518,802 samples, 0.65%)</title><rect x="8.4083%" y="325" width="0.6466%" height="15" fill="rgb(245,172,44)" fg:x="32753179" fg:w="2518802"/><text x="8.6583%" y="335.50"></text></g><g><title>put_evp_method_in_store (2,518,802 samples, 0.65%)</title><rect x="8.4083%" y="309" width="0.6466%" height="15" fill="rgb(236,23,11)" fg:x="32753179" fg:w="2518802"/><text x="8.6583%" y="319.50"></text></g><g><title>ossl_method_store_add (2,518,802 samples, 0.65%)</title><rect x="8.4083%" y="293" width="0.6466%" height="15" fill="rgb(205,117,38)" fg:x="32753179" fg:w="2518802"/><text x="8.6583%" y="303.50"></text></g><g><title>OPENSSL_sk_insert (2,518,802 samples, 0.65%)</title><rect x="8.4083%" y="277" width="0.6466%" height="15" fill="rgb(237,72,25)" fg:x="32753179" fg:w="2518802"/><text x="8.6583%" y="287.50"></text></g><g><title>CRYPTO_zalloc (2,518,802 samples, 0.65%)</title><rect x="8.4083%" y="261" width="0.6466%" height="15" fill="rgb(244,70,9)" fg:x="32753179" fg:w="2518802"/><text x="8.6583%" y="271.50"></text></g><g><title>__memset_avx2_unaligned_erms (2,518,802 samples, 0.65%)</title><rect x="8.4083%" y="245" width="0.6466%" height="15" fill="rgb(217,125,39)" fg:x="32753179" fg:w="2518802"/><text x="8.6583%" y="255.50"></text></g><g><title>asn1_template_ex_d2i (3,687,880 samples, 0.95%)</title><rect x="9.0550%" y="341" width="0.9467%" height="15" fill="rgb(235,36,10)" fg:x="35271981" fg:w="3687880"/><text x="9.3050%" y="351.50"></text></g><g><title>asn1_template_noexp_d2i (3,687,880 samples, 0.95%)</title><rect x="9.0550%" y="325" width="0.9467%" height="15" fill="rgb(251,123,47)" fg:x="35271981" fg:w="3687880"/><text x="9.3050%" y="335.50"></text></g><g><title>asn1_item_embed_d2i (3,687,880 samples, 0.95%)</title><rect x="9.0550%" y="309" width="0.9467%" height="15" fill="rgb(221,13,13)" fg:x="35271981" fg:w="3687880"/><text x="9.3050%" y="319.50"></text></g><g><title>asn1_template_noexp_d2i (3,687,880 samples, 0.95%)</title><rect x="9.0550%" y="293" width="0.9467%" height="15" fill="rgb(238,131,9)" fg:x="35271981" fg:w="3687880"/><text x="9.3050%" y="303.50"></text></g><g><title>asn1_item_embed_d2i (3,687,880 samples, 0.95%)</title><rect x="9.0550%" y="277" width="0.9467%" height="15" fill="rgb(211,50,8)" fg:x="35271981" fg:w="3687880"/><text x="9.3050%" y="287.50"></text></g><g><title>ASN1_item_ex_d2i (3,584,689 samples, 0.92%)</title><rect x="10.0017%" y="293" width="0.9203%" height="15" fill="rgb(245,182,24)" fg:x="38959861" fg:w="3584689"/><text x="10.2517%" y="303.50"></text></g><g><title>asn1_item_embed_d2i (3,584,689 samples, 0.92%)</title><rect x="10.0017%" y="277" width="0.9203%" height="15" fill="rgb(242,14,37)" fg:x="38959861" fg:w="3584689"/><text x="10.2517%" y="287.50"></text></g><g><title>asn1_template_noexp_d2i (3,584,689 samples, 0.92%)</title><rect x="10.0017%" y="261" width="0.9203%" height="15" fill="rgb(246,228,12)" fg:x="38959861" fg:w="3584689"/><text x="10.2517%" y="271.50"></text></g><g><title>asn1_item_embed_d2i (3,584,689 samples, 0.92%)</title><rect x="10.0017%" y="245" width="0.9203%" height="15" fill="rgb(213,55,15)" fg:x="38959861" fg:w="3584689"/><text x="10.2517%" y="255.50"></text></g><g><title>asn1_template_noexp_d2i (3,584,689 samples, 0.92%)</title><rect x="10.0017%" y="229" width="0.9203%" height="15" fill="rgb(209,9,3)" fg:x="38959861" fg:w="3584689"/><text x="10.2517%" y="239.50"></text></g><g><title>asn1_item_embed_d2i (3,584,689 samples, 0.92%)</title><rect x="10.0017%" y="213" width="0.9203%" height="15" fill="rgb(230,59,30)" fg:x="38959861" fg:w="3584689"/><text x="10.2517%" y="223.50"></text></g><g><title>asn1_template_noexp_d2i (3,584,689 samples, 0.92%)</title><rect x="10.0017%" y="197" width="0.9203%" height="15" fill="rgb(209,121,21)" fg:x="38959861" fg:w="3584689"/><text x="10.2517%" y="207.50"></text></g><g><title>asn1_item_embed_d2i (3,584,689 samples, 0.92%)</title><rect x="10.0017%" y="181" width="0.9203%" height="15" fill="rgb(220,109,13)" fg:x="38959861" fg:w="3584689"/><text x="10.2517%" y="191.50"></text></g><g><title>asn1_check_tlen (3,584,689 samples, 0.92%)</title><rect x="10.0017%" y="165" width="0.9203%" height="15" fill="rgb(232,18,1)" fg:x="38959861" fg:w="3584689"/><text x="10.2517%" y="175.50"></text></g><g><title>ASN1_get_object (3,584,689 samples, 0.92%)</title><rect x="10.0017%" y="149" width="0.9203%" height="15" fill="rgb(215,41,42)" fg:x="38959861" fg:w="3584689"/><text x="10.2517%" y="159.50"></text></g><g><title>x509_name_ex_d2i (7,309,865 samples, 1.88%)</title><rect x="10.0017%" y="309" width="1.8766%" height="15" fill="rgb(224,123,36)" fg:x="38959861" fg:w="7309865"/><text x="10.2517%" y="319.50">x..</text></g><g><title>x509_name_ex_new (3,725,176 samples, 0.96%)</title><rect x="10.9220%" y="293" width="0.9563%" height="15" fill="rgb(240,125,3)" fg:x="42544550" fg:w="3725176"/><text x="11.1720%" y="303.50"></text></g><g><title>CRYPTO_zalloc (3,725,176 samples, 0.96%)</title><rect x="10.9220%" y="277" width="0.9563%" height="15" fill="rgb(205,98,50)" fg:x="42544550" fg:w="3725176"/><text x="11.1720%" y="287.50"></text></g><g><title>CRYPTO_malloc (3,725,176 samples, 0.96%)</title><rect x="10.9220%" y="261" width="0.9563%" height="15" fill="rgb(205,185,37)" fg:x="42544550" fg:w="3725176"/><text x="11.1720%" y="271.50"></text></g><g><title>malloc (3,725,176 samples, 0.96%)</title><rect x="10.9220%" y="245" width="0.9563%" height="15" fill="rgb(238,207,15)" fg:x="42544550" fg:w="3725176"/><text x="11.1720%" y="255.50"></text></g><g><title>asn1_template_noexp_d2i (14,705,279 samples, 3.78%)</title><rect x="9.0550%" y="373" width="3.7751%" height="15" fill="rgb(213,199,42)" fg:x="35271981" fg:w="14705279"/><text x="9.3050%" y="383.50">asn1..</text></g><g><title>asn1_item_embed_d2i (14,705,279 samples, 3.78%)</title><rect x="9.0550%" y="357" width="3.7751%" height="15" fill="rgb(235,201,11)" fg:x="35271981" fg:w="14705279"/><text x="9.3050%" y="367.50">asn1..</text></g><g><title>asn1_template_noexp_d2i (11,017,399 samples, 2.83%)</title><rect x="10.0017%" y="341" width="2.8284%" height="15" fill="rgb(207,46,11)" fg:x="38959861" fg:w="11017399"/><text x="10.2517%" y="351.50">as..</text></g><g><title>asn1_item_embed_d2i (11,017,399 samples, 2.83%)</title><rect x="10.0017%" y="325" width="2.8284%" height="15" fill="rgb(241,35,35)" fg:x="38959861" fg:w="11017399"/><text x="10.2517%" y="335.50">as..</text></g><g><title>x509_pubkey_ex_d2i_ex (3,707,534 samples, 0.95%)</title><rect x="11.8783%" y="309" width="0.9518%" height="15" fill="rgb(243,32,47)" fg:x="46269726" fg:w="3707534"/><text x="12.1283%" y="319.50"></text></g><g><title>ASN1_item_ex_d2i (3,707,534 samples, 0.95%)</title><rect x="11.8783%" y="293" width="0.9518%" height="15" fill="rgb(247,202,23)" fg:x="46269726" fg:w="3707534"/><text x="12.1283%" y="303.50"></text></g><g><title>asn1_item_embed_d2i (3,707,534 samples, 0.95%)</title><rect x="11.8783%" y="277" width="0.9518%" height="15" fill="rgb(219,102,11)" fg:x="46269726" fg:w="3707534"/><text x="12.1283%" y="287.50"></text></g><g><title>asn1_template_noexp_d2i (3,707,534 samples, 0.95%)</title><rect x="11.8783%" y="261" width="0.9518%" height="15" fill="rgb(243,110,44)" fg:x="46269726" fg:w="3707534"/><text x="12.1283%" y="271.50"></text></g><g><title>asn1_item_embed_d2i (3,707,534 samples, 0.95%)</title><rect x="11.8783%" y="245" width="0.9518%" height="15" fill="rgb(222,74,54)" fg:x="46269726" fg:w="3707534"/><text x="12.1283%" y="255.50"></text></g><g><title>asn1_d2i_ex_primitive (3,707,534 samples, 0.95%)</title><rect x="11.8783%" y="229" width="0.9518%" height="15" fill="rgb(216,99,12)" fg:x="46269726" fg:w="3707534"/><text x="12.1283%" y="239.50"></text></g><g><title>ossl_c2i_ASN1_BIT_STRING (3,707,534 samples, 0.95%)</title><rect x="11.8783%" y="213" width="0.9518%" height="15" fill="rgb(226,22,26)" fg:x="46269726" fg:w="3707534"/><text x="12.1283%" y="223.50"></text></g><g><title>ASN1_item_d2i_ex (17,501,279 samples, 4.49%)</title><rect x="9.0550%" y="405" width="4.4929%" height="15" fill="rgb(217,163,10)" fg:x="35271981" fg:w="17501279"/><text x="9.3050%" y="415.50">ASN1_..</text></g><g><title>asn1_item_embed_d2i (17,501,279 samples, 4.49%)</title><rect x="9.0550%" y="389" width="4.4929%" height="15" fill="rgb(213,25,53)" fg:x="35271981" fg:w="17501279"/><text x="9.3050%" y="399.50">asn1_..</text></g><g><title>x509_cb (2,796,000 samples, 0.72%)</title><rect x="12.8301%" y="373" width="0.7178%" height="15" fill="rgb(252,105,26)" fg:x="49977260" fg:w="2796000"/><text x="13.0801%" y="383.50"></text></g><g><title>CRYPTO_free_ex_data (2,796,000 samples, 0.72%)</title><rect x="12.8301%" y="357" width="0.7178%" height="15" fill="rgb(220,39,43)" fg:x="49977260" fg:w="2796000"/><text x="13.0801%" y="367.50"></text></g><g><title>CRYPTO_THREAD_read_lock (2,796,000 samples, 0.72%)</title><rect x="12.8301%" y="341" width="0.7178%" height="15" fill="rgb(229,68,48)" fg:x="49977260" fg:w="2796000"/><text x="13.0801%" y="351.50"></text></g><g><title>pthread_rwlock_rdlock@GLIBC_2.2.5 (2,796,000 samples, 0.72%)</title><rect x="12.8301%" y="325" width="0.7178%" height="15" fill="rgb(252,8,32)" fg:x="49977260" fg:w="2796000"/><text x="13.0801%" y="335.50"></text></g><g><title>BIO_free (3,718,509 samples, 0.95%)</title><rect x="13.5479%" y="389" width="0.9546%" height="15" fill="rgb(223,20,43)" fg:x="52773260" fg:w="3718509"/><text x="13.7979%" y="399.50"></text></g><g><title>mem_free (3,718,509 samples, 0.95%)</title><rect x="13.5479%" y="373" width="0.9546%" height="15" fill="rgb(229,81,49)" fg:x="52773260" fg:w="3718509"/><text x="13.7979%" y="383.50"></text></g><g><title>BUF_MEM_free (3,718,509 samples, 0.95%)</title><rect x="13.5479%" y="357" width="0.9546%" height="15" fill="rgb(236,28,36)" fg:x="52773260" fg:w="3718509"/><text x="13.7979%" y="367.50"></text></g><g><title>BIO_puts (3,713,525 samples, 0.95%)</title><rect x="14.5025%" y="389" width="0.9533%" height="15" fill="rgb(249,185,26)" fg:x="56491769" fg:w="3713525"/><text x="14.7525%" y="399.50"></text></g><g><title>mem_puts (3,713,525 samples, 0.95%)</title><rect x="14.5025%" y="373" width="0.9533%" height="15" fill="rgb(249,174,33)" fg:x="56491769" fg:w="3713525"/><text x="14.7525%" y="383.50"></text></g><g><title>__memmove_avx_unaligned_erms (3,713,525 samples, 0.95%)</title><rect x="14.5025%" y="357" width="0.9533%" height="15" fill="rgb(233,201,37)" fg:x="56491769" fg:w="3713525"/><text x="14.7525%" y="367.50"></text></g><g><title>PEM_read_bio_ex (10,923,644 samples, 2.80%)</title><rect x="13.5479%" y="405" width="2.8043%" height="15" fill="rgb(221,78,26)" fg:x="52773260" fg:w="10923644"/><text x="13.7979%" y="415.50">PE..</text></g><g><title>BIO_read (3,491,610 samples, 0.90%)</title><rect x="15.4558%" y="389" width="0.8964%" height="15" fill="rgb(250,127,30)" fg:x="60205294" fg:w="3491610"/><text x="15.7058%" y="399.50"></text></g><g><title>bread_conv (3,491,610 samples, 0.90%)</title><rect x="15.4558%" y="373" width="0.8964%" height="15" fill="rgb(230,49,44)" fg:x="60205294" fg:w="3491610"/><text x="15.7058%" y="383.50"></text></g><g><title>cfree@GLIBC_2.2.5 (3,722,433 samples, 0.96%)</title><rect x="16.3522%" y="405" width="0.9556%" height="15" fill="rgb(229,67,23)" fg:x="63696904" fg:w="3722433"/><text x="16.6022%" y="415.50"></text></g><g><title>_int_free (3,722,433 samples, 0.96%)</title><rect x="16.3522%" y="389" width="0.9556%" height="15" fill="rgb(249,83,47)" fg:x="63696904" fg:w="3722433"/><text x="16.6022%" y="399.50"></text></g><g><title>PEM_X509_INFO_read_bio_ex (35,781,996 samples, 9.19%)</title><rect x="9.0550%" y="421" width="9.1859%" height="15" fill="rgb(215,43,3)" fg:x="35271981" fg:w="35781996"/><text x="9.3050%" y="431.50">PEM_X509_INFO..</text></g><g><title>d2i_X509_AUX (3,634,640 samples, 0.93%)</title><rect x="17.3078%" y="405" width="0.9331%" height="15" fill="rgb(238,154,13)" fg:x="67419337" fg:w="3634640"/><text x="17.5578%" y="415.50"></text></g><g><title>ASN1_item_d2i_ex (3,634,640 samples, 0.93%)</title><rect x="17.3078%" y="389" width="0.9331%" height="15" fill="rgb(219,56,2)" fg:x="67419337" fg:w="3634640"/><text x="17.5578%" y="399.50"></text></g><g><title>asn1_item_embed_d2i (3,634,640 samples, 0.93%)</title><rect x="17.3078%" y="373" width="0.9331%" height="15" fill="rgb(233,0,4)" fg:x="67419337" fg:w="3634640"/><text x="17.5578%" y="383.50"></text></g><g><title>asn1_template_noexp_d2i (3,634,640 samples, 0.93%)</title><rect x="17.3078%" y="357" width="0.9331%" height="15" fill="rgb(235,30,7)" fg:x="67419337" fg:w="3634640"/><text x="17.5578%" y="367.50"></text></g><g><title>asn1_item_embed_d2i (3,634,640 samples, 0.93%)</title><rect x="17.3078%" y="341" width="0.9331%" height="15" fill="rgb(250,79,13)" fg:x="67419337" fg:w="3634640"/><text x="17.5578%" y="351.50"></text></g><g><title>asn1_template_noexp_d2i (3,634,640 samples, 0.93%)</title><rect x="17.3078%" y="325" width="0.9331%" height="15" fill="rgb(211,146,34)" fg:x="67419337" fg:w="3634640"/><text x="17.5578%" y="335.50"></text></g><g><title>asn1_item_embed_d2i (3,634,640 samples, 0.93%)</title><rect x="17.3078%" y="309" width="0.9331%" height="15" fill="rgb(228,22,38)" fg:x="67419337" fg:w="3634640"/><text x="17.5578%" y="319.50"></text></g><g><title>x509_name_ex_d2i (3,634,640 samples, 0.93%)</title><rect x="17.3078%" y="293" width="0.9331%" height="15" fill="rgb(235,168,5)" fg:x="67419337" fg:w="3634640"/><text x="17.5578%" y="303.50"></text></g><g><title>x509_name_canon.part.0 (3,634,640 samples, 0.93%)</title><rect x="17.3078%" y="277" width="0.9331%" height="15" fill="rgb(221,155,16)" fg:x="67419337" fg:w="3634640"/><text x="17.5578%" y="287.50"></text></g><g><title>asn1_template_ex_i2d (3,634,640 samples, 0.93%)</title><rect x="17.3078%" y="261" width="0.9331%" height="15" fill="rgb(215,215,53)" fg:x="67419337" fg:w="3634640"/><text x="17.5578%" y="271.50"></text></g><g><title>ASN1_item_ex_i2d (3,634,640 samples, 0.93%)</title><rect x="17.3078%" y="245" width="0.9331%" height="15" fill="rgb(223,4,10)" fg:x="67419337" fg:w="3634640"/><text x="17.5578%" y="255.50"></text></g><g><title>asn1_template_ex_i2d (3,634,640 samples, 0.93%)</title><rect x="17.3078%" y="229" width="0.9331%" height="15" fill="rgb(234,103,6)" fg:x="67419337" fg:w="3634640"/><text x="17.5578%" y="239.50"></text></g><g><title>asn1_i2d_ex_primitive (3,634,640 samples, 0.93%)</title><rect x="17.3078%" y="213" width="0.9331%" height="15" fill="rgb(227,97,0)" fg:x="67419337" fg:w="3634640"/><text x="17.5578%" y="223.50"></text></g><g><title>__memmove_avx_unaligned_erms (3,634,640 samples, 0.93%)</title><rect x="17.3078%" y="197" width="0.9331%" height="15" fill="rgb(234,150,53)" fg:x="67419337" fg:w="3634640"/><text x="17.5578%" y="207.50"></text></g><g><title>cargo::init_git (42,027,300 samples, 10.79%)</title><rect x="8.4083%" y="581" width="10.7892%" height="15" fill="rgb(228,201,54)" fg:x="32753179" fg:w="42027300"/><text x="8.6583%" y="591.50">cargo::init_git</text></g><g><title>git2::opts::set_verify_owner_validation (42,027,300 samples, 10.79%)</title><rect x="8.4083%" y="565" width="10.7892%" height="15" fill="rgb(222,22,37)" fg:x="32753179" fg:w="42027300"/><text x="8.6583%" y="575.50">git2::opts::set_..</text></g><g><title>libgit2_sys::init (42,027,300 samples, 10.79%)</title><rect x="8.4083%" y="549" width="10.7892%" height="15" fill="rgb(237,53,32)" fg:x="32753179" fg:w="42027300"/><text x="8.6583%" y="559.50">libgit2_sys::init</text></g><g><title>std::sys::sync::once::futex::Once::call (42,027,300 samples, 10.79%)</title><rect x="8.4083%" y="533" width="10.7892%" height="15" fill="rgb(233,25,53)" fg:x="32753179" fg:w="42027300"/><text x="8.6583%" y="543.50">std::sys::sync::..</text></g><g><title>std::sync::once::Once::call_once::_{{closure}} (42,027,300 samples, 10.79%)</title><rect x="8.4083%" y="517" width="10.7892%" height="15" fill="rgb(210,40,34)" fg:x="32753179" fg:w="42027300"/><text x="8.6583%" y="527.50">std::sync::once:..</text></g><g><title>git_runtime_init (42,027,300 samples, 10.79%)</title><rect x="8.4083%" y="501" width="10.7892%" height="15" fill="rgb(241,220,44)" fg:x="32753179" fg:w="42027300"/><text x="8.6583%" y="511.50">git_runtime_init</text></g><g><title>git_openssl_stream_global_init (42,027,300 samples, 10.79%)</title><rect x="8.4083%" y="485" width="10.7892%" height="15" fill="rgb(235,28,35)" fg:x="32753179" fg:w="42027300"/><text x="8.6583%" y="495.50">git_openssl_stre..</text></g><g><title>X509_STORE_set_default_paths_ex (39,508,498 samples, 10.14%)</title><rect x="9.0550%" y="469" width="10.1426%" height="15" fill="rgb(210,56,17)" fg:x="35271981" fg:w="39508498"/><text x="9.3050%" y="479.50">X509_STORE_set_..</text></g><g><title>by_file_ctrl_ex (39,508,498 samples, 10.14%)</title><rect x="9.0550%" y="453" width="10.1426%" height="15" fill="rgb(224,130,29)" fg:x="35271981" fg:w="39508498"/><text x="9.3050%" y="463.50">by_file_ctrl_ex</text></g><g><title>X509_load_cert_crl_file_ex (39,508,498 samples, 10.14%)</title><rect x="9.0550%" y="437" width="10.1426%" height="15" fill="rgb(235,212,8)" fg:x="35271981" fg:w="39508498"/><text x="9.3050%" y="447.50">X509_load_cert_..</text></g><g><title>X509_STORE_add_cert (3,726,502 samples, 0.96%)</title><rect x="18.2409%" y="421" width="0.9567%" height="15" fill="rgb(223,33,50)" fg:x="71053977" fg:w="3726502"/><text x="18.4909%" y="431.50"></text></g><g><title>X509_OBJECT_retrieve_match (3,726,502 samples, 0.96%)</title><rect x="18.2409%" y="405" width="0.9567%" height="15" fill="rgb(219,149,13)" fg:x="71053977" fg:w="3726502"/><text x="18.4909%" y="415.50"></text></g><g><title>X509_cmp (3,726,502 samples, 0.96%)</title><rect x="18.2409%" y="389" width="0.9567%" height="15" fill="rgb(250,156,29)" fg:x="71053977" fg:w="3726502"/><text x="18.4909%" y="399.50"></text></g><g><title>X509_check_purpose (3,726,502 samples, 0.96%)</title><rect x="18.2409%" y="373" width="0.9567%" height="15" fill="rgb(216,193,19)" fg:x="71053977" fg:w="3726502"/><text x="18.4909%" y="383.50"></text></g><g><title>ossl_x509v3_cache_extensions (3,726,502 samples, 0.96%)</title><rect x="18.2409%" y="357" width="0.9567%" height="15" fill="rgb(216,135,14)" fg:x="71053977" fg:w="3726502"/><text x="18.4909%" y="367.50"></text></g><g><title>X509V3_EXT_d2i (3,726,502 samples, 0.96%)</title><rect x="18.2409%" y="341" width="0.9567%" height="15" fill="rgb(241,47,5)" fg:x="71053977" fg:w="3726502"/><text x="18.4909%" y="351.50"></text></g><g><title>ASN1_item_d2i_ex (3,726,502 samples, 0.96%)</title><rect x="18.2409%" y="325" width="0.9567%" height="15" fill="rgb(233,42,35)" fg:x="71053977" fg:w="3726502"/><text x="18.4909%" y="335.50"></text></g><g><title>asn1_item_embed_d2i (3,726,502 samples, 0.96%)</title><rect x="18.2409%" y="309" width="0.9567%" height="15" fill="rgb(231,13,6)" fg:x="71053977" fg:w="3726502"/><text x="18.4909%" y="319.50"></text></g><g><title>asn1_item_embed_new (3,726,502 samples, 0.96%)</title><rect x="18.2409%" y="293" width="0.9567%" height="15" fill="rgb(207,181,40)" fg:x="71053977" fg:w="3726502"/><text x="18.4909%" y="303.50"></text></g><g><title>CRYPTO_zalloc (3,726,502 samples, 0.96%)</title><rect x="18.2409%" y="277" width="0.9567%" height="15" fill="rgb(254,173,49)" fg:x="71053977" fg:w="3726502"/><text x="18.4909%" y="287.50"></text></g><g><title>CRYPTO_malloc (3,726,502 samples, 0.96%)</title><rect x="18.2409%" y="261" width="0.9567%" height="15" fill="rgb(221,1,38)" fg:x="71053977" fg:w="3726502"/><text x="18.4909%" y="271.50"></text></g><g><title>malloc (3,726,502 samples, 0.96%)</title><rect x="18.2409%" y="245" width="0.9567%" height="15" fill="rgb(206,124,46)" fg:x="71053977" fg:w="3726502"/><text x="18.4909%" y="255.50"></text></g><g><title>cargo::cli::main (57,583,842 samples, 14.78%)</title><rect x="5.3883%" y="597" width="14.7828%" height="15" fill="rgb(249,21,11)" fg:x="20989285" fg:w="57583842"/><text x="5.6383%" y="607.50">cargo::cli::main</text></g><g><title>cargo::init_git_transports (3,792,648 samples, 0.97%)</title><rect x="19.1975%" y="581" width="0.9736%" height="15" fill="rgb(222,201,40)" fg:x="74780479" fg:w="3792648"/><text x="19.4475%" y="591.50"></text></g><g><title>cargo::util::network::http::needs_custom_http_transport (3,792,648 samples, 0.97%)</title><rect x="19.1975%" y="565" width="0.9736%" height="15" fill="rgb(235,61,29)" fg:x="74780479" fg:w="3792648"/><text x="19.4475%" y="575.50"></text></g><g><title>lazycell::LazyCell&lt;T&gt;::try_borrow_with (3,792,648 samples, 0.97%)</title><rect x="19.1975%" y="549" width="0.9736%" height="15" fill="rgb(219,207,3)" fg:x="74780479" fg:w="3792648"/><text x="19.4475%" y="559.50"></text></g><g><title>cargo::util::context::disables_multiplexing_for_bad_curl (3,792,648 samples, 0.97%)</title><rect x="19.1975%" y="533" width="0.9736%" height="15" fill="rgb(222,56,46)" fg:x="74780479" fg:w="3792648"/><text x="19.4475%" y="543.50"></text></g><g><title>cargo::util::network::proxy::http_proxy_exists (3,792,648 samples, 0.97%)</title><rect x="19.1975%" y="517" width="0.9736%" height="15" fill="rgb(239,76,54)" fg:x="74780479" fg:w="3792648"/><text x="19.4475%" y="527.50"></text></g><g><title>_ZN6anyhow5error11object_drop17h0e9e97fd96174375E.llvm.15065519741553090800 (3,792,648 samples, 0.97%)</title><rect x="19.1975%" y="501" width="0.9736%" height="15" fill="rgb(231,124,27)" fg:x="74780479" fg:w="3792648"/><text x="19.4475%" y="511.50"></text></g><g><title>__rust_dealloc (3,792,648 samples, 0.97%)</title><rect x="19.1975%" y="485" width="0.9736%" height="15" fill="rgb(249,195,6)" fg:x="74780479" fg:w="3792648"/><text x="19.4475%" y="495.50"></text></g><g><title>cargo::util::context::GlobalContext::default (2,923,736 samples, 0.75%)</title><rect x="20.1712%" y="597" width="0.7506%" height="15" fill="rgb(237,174,47)" fg:x="78573127" fg:w="2923736"/><text x="20.4212%" y="607.50"></text></g><g><title>cargo::util::context::GlobalContext::new (2,923,736 samples, 0.75%)</title><rect x="20.1712%" y="581" width="0.7506%" height="15" fill="rgb(206,201,31)" fg:x="78573127" fg:w="2923736"/><text x="20.4212%" y="591.50"></text></g><g><title>cargo::util::context::environment::Env::new (2,923,736 samples, 0.75%)</title><rect x="20.1712%" y="565" width="0.7506%" height="15" fill="rgb(231,57,52)" fg:x="78573127" fg:w="2923736"/><text x="20.4212%" y="575.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (2,923,736 samples, 0.75%)</title><rect x="20.1712%" y="549" width="0.7506%" height="15" fill="rgb(248,177,22)" fg:x="78573127" fg:w="2923736"/><text x="20.4212%" y="559.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (2,923,736 samples, 0.75%)</title><rect x="20.1712%" y="533" width="0.7506%" height="15" fill="rgb(215,211,37)" fg:x="78573127" fg:w="2923736"/><text x="20.4212%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2,923,736 samples, 0.75%)</title><rect x="20.1712%" y="517" width="0.7506%" height="15" fill="rgb(241,128,51)" fg:x="78573127" fg:w="2923736"/><text x="20.4212%" y="527.50"></text></g><g><title>__libc_start_main@@GLIBC_2.34 (64,018,526 samples, 16.43%)</title><rect x="5.3883%" y="709" width="16.4347%" height="15" fill="rgb(227,165,31)" fg:x="20989285" fg:w="64018526"/><text x="5.6383%" y="719.50">__libc_start_main@@GLIBC_..</text></g><g><title>__libc_start_call_main (64,018,526 samples, 16.43%)</title><rect x="5.3883%" y="693" width="16.4347%" height="15" fill="rgb(228,167,24)" fg:x="20989285" fg:w="64018526"/><text x="5.6383%" y="703.50">__libc_start_call_main</text></g><g><title>main (64,018,526 samples, 16.43%)</title><rect x="5.3883%" y="677" width="16.4347%" height="15" fill="rgb(228,143,12)" fg:x="20989285" fg:w="64018526"/><text x="5.6383%" y="687.50">main</text></g><g><title>std::rt::lang_start_internal (64,018,526 samples, 16.43%)</title><rect x="5.3883%" y="661" width="16.4347%" height="15" fill="rgb(249,149,8)" fg:x="20989285" fg:w="64018526"/><text x="5.6383%" y="671.50">std::rt::lang_start_inter..</text></g><g><title>_ZN3std2rt10lang_start28_$u7b$$u7b$closure$u7d$$u7d$17h022acb3f23eb0f6aE.llvm.6692314159830505196 (64,018,526 samples, 16.43%)</title><rect x="5.3883%" y="645" width="16.4347%" height="15" fill="rgb(243,35,44)" fg:x="20989285" fg:w="64018526"/><text x="5.6383%" y="655.50">_ZN3std2rt10lang_start28_..</text></g><g><title>std::sys::backtrace::__rust_begin_short_backtrace (64,018,526 samples, 16.43%)</title><rect x="5.3883%" y="629" width="16.4347%" height="15" fill="rgb(246,89,9)" fg:x="20989285" fg:w="64018526"/><text x="5.6383%" y="639.50">std::sys::backtrace::__ru..</text></g><g><title>cargo::main (64,018,526 samples, 16.43%)</title><rect x="5.3883%" y="613" width="16.4347%" height="15" fill="rgb(233,213,13)" fg:x="20989285" fg:w="64018526"/><text x="5.6383%" y="623.50">cargo::main</text></g><g><title>core::ptr::drop_in_place&lt;cargo::util::context::GlobalContext&gt; (3,510,948 samples, 0.90%)</title><rect x="20.9217%" y="597" width="0.9013%" height="15" fill="rgb(233,141,41)" fg:x="81496863" fg:w="3510948"/><text x="21.1717%" y="607.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,510,948 samples, 0.90%)</title><rect x="20.9217%" y="581" width="0.9013%" height="15" fill="rgb(239,167,4)" fg:x="81496863" fg:w="3510948"/><text x="21.1717%" y="591.50"></text></g><g><title>cfree@GLIBC_2.2.5 (3,510,948 samples, 0.90%)</title><rect x="20.9217%" y="565" width="0.9013%" height="15" fill="rgb(209,217,16)" fg:x="81496863" fg:w="3510948"/><text x="21.1717%" y="575.50"></text></g><g><title>_int_free (3,510,948 samples, 0.90%)</title><rect x="20.9217%" y="549" width="0.9013%" height="15" fill="rgb(219,88,35)" fg:x="81496863" fg:w="3510948"/><text x="21.1717%" y="559.50"></text></g><g><title>_dl_map_object_deps (1,175,306 samples, 0.30%)</title><rect x="21.8231%" y="661" width="0.3017%" height="15" fill="rgb(220,193,23)" fg:x="85007811" fg:w="1175306"/><text x="22.0731%" y="671.50"></text></g><g><title>_dl_catch_exception (1,175,306 samples, 0.30%)</title><rect x="21.8231%" y="645" width="0.3017%" height="15" fill="rgb(230,90,52)" fg:x="85007811" fg:w="1175306"/><text x="22.0731%" y="655.50"></text></g><g><title>openaux (1,175,306 samples, 0.30%)</title><rect x="21.8231%" y="629" width="0.3017%" height="15" fill="rgb(252,106,19)" fg:x="85007811" fg:w="1175306"/><text x="22.0731%" y="639.50"></text></g><g><title>_dl_map_object (1,175,306 samples, 0.30%)</title><rect x="21.8231%" y="613" width="0.3017%" height="15" fill="rgb(206,74,20)" fg:x="85007811" fg:w="1175306"/><text x="22.0731%" y="623.50"></text></g><g><title>_dl_map_object_from_fd (1,175,306 samples, 0.30%)</title><rect x="21.8231%" y="597" width="0.3017%" height="15" fill="rgb(230,138,44)" fg:x="85007811" fg:w="1175306"/><text x="22.0731%" y="607.50"></text></g><g><title>strcmp (1,175,306 samples, 0.30%)</title><rect x="21.8231%" y="581" width="0.3017%" height="15" fill="rgb(235,182,43)" fg:x="85007811" fg:w="1175306"/><text x="22.0731%" y="591.50"></text></g><g><title>[unknown] (1,175,306 samples, 0.30%)</title><rect x="21.8231%" y="565" width="0.3017%" height="15" fill="rgb(242,16,51)" fg:x="85007811" fg:w="1175306"/><text x="22.0731%" y="575.50"></text></g><g><title>[unknown] (1,175,306 samples, 0.30%)</title><rect x="21.8231%" y="549" width="0.3017%" height="15" fill="rgb(248,9,4)" fg:x="85007811" fg:w="1175306"/><text x="22.0731%" y="559.50"></text></g><g><title>[unknown] (1,175,306 samples, 0.30%)</title><rect x="21.8231%" y="533" width="0.3017%" height="15" fill="rgb(210,31,22)" fg:x="85007811" fg:w="1175306"/><text x="22.0731%" y="543.50"></text></g><g><title>[unknown] (1,175,306 samples, 0.30%)</title><rect x="21.8231%" y="517" width="0.3017%" height="15" fill="rgb(239,54,39)" fg:x="85007811" fg:w="1175306"/><text x="22.0731%" y="527.50"></text></g><g><title>[unknown] (1,908,059 samples, 0.49%)</title><rect x="22.1659%" y="645" width="0.4898%" height="15" fill="rgb(230,99,41)" fg:x="86343465" fg:w="1908059"/><text x="22.4159%" y="655.50"></text></g><g><title>_start (72,650,444 samples, 18.65%)</title><rect x="5.3883%" y="725" width="18.6507%" height="15" fill="rgb(253,106,12)" fg:x="20989285" fg:w="72650444"/><text x="5.6383%" y="735.50">_start</text></g><g><title>_dl_start (8,631,918 samples, 2.22%)</title><rect x="21.8231%" y="709" width="2.2160%" height="15" fill="rgb(213,46,41)" fg:x="85007811" fg:w="8631918"/><text x="22.0731%" y="719.50">_..</text></g><g><title>_dl_sysdep_start (8,631,918 samples, 2.22%)</title><rect x="21.8231%" y="693" width="2.2160%" height="15" fill="rgb(215,133,35)" fg:x="85007811" fg:w="8631918"/><text x="22.0731%" y="703.50">_..</text></g><g><title>dl_main (8,631,918 samples, 2.22%)</title><rect x="21.8231%" y="677" width="2.2160%" height="15" fill="rgb(213,28,5)" fg:x="85007811" fg:w="8631918"/><text x="22.0731%" y="687.50">d..</text></g><g><title>_dl_relocate_object (7,456,612 samples, 1.91%)</title><rect x="22.1248%" y="661" width="1.9142%" height="15" fill="rgb(215,77,49)" fg:x="86183117" fg:w="7456612"/><text x="22.3748%" y="671.50">_..</text></g><g><title>_dl_lookup_symbol_x (5,388,205 samples, 1.38%)</title><rect x="22.6558%" y="645" width="1.3833%" height="15" fill="rgb(248,100,22)" fg:x="88251524" fg:w="5388205"/><text x="22.9058%" y="655.50"></text></g><g><title>do_lookup_x (5,388,205 samples, 1.38%)</title><rect x="22.6558%" y="629" width="1.3833%" height="15" fill="rgb(208,67,9)" fg:x="88251524" fg:w="5388205"/><text x="22.9058%" y="639.50"></text></g><g><title>check_match (1,112,593 samples, 0.29%)</title><rect x="23.7534%" y="613" width="0.2856%" height="15" fill="rgb(219,133,21)" fg:x="92527136" fg:w="1112593"/><text x="24.0034%" y="623.50"></text></g><g><title>_ZN5cargo3ops7resolve21resolve_with_registry17h15aaf12c47a16657E.llvm.2219623679986394725 (3,422,032 samples, 0.88%)</title><rect x="24.0390%" y="661" width="0.8785%" height="15" fill="rgb(246,46,29)" fg:x="93639729" fg:w="3422032"/><text x="24.2890%" y="671.50"></text></g><g><title>cargo::ops::lockfile::load_pkg_lockfile (3,422,032 samples, 0.88%)</title><rect x="24.0390%" y="645" width="0.8785%" height="15" fill="rgb(246,185,52)" fg:x="93639729" fg:w="3422032"/><text x="24.2890%" y="655.50"></text></g><g><title>cargo::core::resolver::encode::EncodableResolve::into_resolve (3,422,032 samples, 0.88%)</title><rect x="24.0390%" y="629" width="0.8785%" height="15" fill="rgb(252,136,11)" fg:x="93639729" fg:w="3422032"/><text x="24.2890%" y="639.50"></text></g><g><title>cargo::core::resolver::encode::EncodableResolve::into_resolve::_{{closure}} (3,422,032 samples, 0.88%)</title><rect x="24.0390%" y="613" width="0.8785%" height="15" fill="rgb(219,138,53)" fg:x="93639729" fg:w="3422032"/><text x="24.2890%" y="623.50"></text></g><g><title>cargo::cli::Exec::exec (5,918,698 samples, 1.52%)</title><rect x="24.0390%" y="725" width="1.5194%" height="15" fill="rgb(211,51,23)" fg:x="93639729" fg:w="5918698"/><text x="24.2890%" y="735.50"></text></g><g><title>_ZN5cargo8commands8metadata4exec17h7975ae71b1a65801E.llvm.650511682995495274 (5,918,698 samples, 1.52%)</title><rect x="24.0390%" y="709" width="1.5194%" height="15" fill="rgb(247,221,28)" fg:x="93639729" fg:w="5918698"/><text x="24.2890%" y="719.50"></text></g><g><title>cargo::ops::cargo_output_metadata::output_metadata (5,918,698 samples, 1.52%)</title><rect x="24.0390%" y="693" width="1.5194%" height="15" fill="rgb(251,222,45)" fg:x="93639729" fg:w="5918698"/><text x="24.2890%" y="703.50"></text></g><g><title>cargo::ops::resolve::resolve_ws_with_opts (5,918,698 samples, 1.52%)</title><rect x="24.0390%" y="677" width="1.5194%" height="15" fill="rgb(217,162,53)" fg:x="93639729" fg:w="5918698"/><text x="24.2890%" y="687.50"></text></g><g><title>cargo::core::package::PackageSet::download_accessible (2,496,666 samples, 0.64%)</title><rect x="24.9175%" y="661" width="0.6409%" height="15" fill="rgb(229,93,14)" fg:x="97061761" fg:w="2496666"/><text x="25.1675%" y="671.50"></text></g><g><title>cargo::core::package::Downloads::start (2,496,666 samples, 0.64%)</title><rect x="24.9175%" y="645" width="0.6409%" height="15" fill="rgb(209,67,49)" fg:x="97061761" fg:w="2496666"/><text x="25.1675%" y="655.50"></text></g><g><title>cargo::core::package::Downloads::start_inner (2,496,666 samples, 0.64%)</title><rect x="24.9175%" y="629" width="0.6409%" height="15" fill="rgb(213,87,29)" fg:x="97061761" fg:w="2496666"/><text x="25.1675%" y="639.50"></text></g><g><title>&lt;cargo::sources::replaced::ReplacedSource as cargo::sources::source::Source&gt;::download (2,496,666 samples, 0.64%)</title><rect x="24.9175%" y="613" width="0.6409%" height="15" fill="rgb(205,151,52)" fg:x="97061761" fg:w="2496666"/><text x="25.1675%" y="623.50"></text></g><g><title>cargo::core::package::Package::map_source (2,496,666 samples, 0.64%)</title><rect x="24.9175%" y="597" width="0.6409%" height="15" fill="rgb(253,215,39)" fg:x="97061761" fg:w="2496666"/><text x="25.1675%" y="607.50"></text></g><g><title>cargo::core::manifest::Manifest::map_source (2,496,666 samples, 0.64%)</title><rect x="24.9175%" y="581" width="0.6409%" height="15" fill="rgb(221,220,41)" fg:x="97061761" fg:w="2496666"/><text x="25.1675%" y="591.50"></text></g><g><title>__memmove_avx_unaligned_erms (2,496,666 samples, 0.64%)</title><rect x="24.9175%" y="565" width="0.6409%" height="15" fill="rgb(218,133,21)" fg:x="97061761" fg:w="2496666"/><text x="25.1675%" y="575.50"></text></g><g><title>cargo::ops::cargo_output_metadata::build_resolve_graph_r (2,434,835 samples, 0.63%)</title><rect x="25.5585%" y="661" width="0.6251%" height="15" fill="rgb(221,193,43)" fg:x="99558427" fg:w="2434835"/><text x="25.8085%" y="671.50"></text></g><g><title>cargo::ops::cargo_output_metadata::build_resolve_graph_r (2,434,835 samples, 0.63%)</title><rect x="25.5585%" y="645" width="0.6251%" height="15" fill="rgb(240,128,52)" fg:x="99558427" fg:w="2434835"/><text x="25.8085%" y="655.50"></text></g><g><title>cargo::ops::cargo_output_metadata::build_resolve_graph_r (2,434,835 samples, 0.63%)</title><rect x="25.5585%" y="629" width="0.6251%" height="15" fill="rgb(253,114,12)" fg:x="99558427" fg:w="2434835"/><text x="25.8085%" y="639.50"></text></g><g><title>cargo::ops::cargo_output_metadata::build_resolve_graph_r (2,434,835 samples, 0.63%)</title><rect x="25.5585%" y="613" width="0.6251%" height="15" fill="rgb(215,223,47)" fg:x="99558427" fg:w="2434835"/><text x="25.8085%" y="623.50"></text></g><g><title>cargo::ops::cargo_output_metadata::build_resolve_graph_r (2,434,835 samples, 0.63%)</title><rect x="25.5585%" y="597" width="0.6251%" height="15" fill="rgb(248,225,23)" fg:x="99558427" fg:w="2434835"/><text x="25.8085%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2,434,835 samples, 0.63%)</title><rect x="25.5585%" y="581" width="0.6251%" height="15" fill="rgb(250,108,0)" fg:x="99558427" fg:w="2434835"/><text x="25.8085%" y="591.50"></text></g><g><title>cargo::core::package_id::PackageId::to_spec (2,434,835 samples, 0.63%)</title><rect x="25.5585%" y="565" width="0.6251%" height="15" fill="rgb(228,208,7)" fg:x="99558427" fg:w="2434835"/><text x="25.8085%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2,434,835 samples, 0.63%)</title><rect x="25.5585%" y="549" width="0.6251%" height="15" fill="rgb(244,45,10)" fg:x="99558427" fg:w="2434835"/><text x="25.8085%" y="559.50"></text></g><g><title>_ZN5cargo3ops7resolve21resolve_with_registry17h15aaf12c47a16657E.llvm.2219623679986394725 (2,621,358 samples, 0.67%)</title><rect x="26.1835%" y="645" width="0.6730%" height="15" fill="rgb(207,125,25)" fg:x="101993262" fg:w="2621358"/><text x="26.4335%" y="655.50"></text></g><g><title>cargo::ops::lockfile::write_pkg_lockfile (2,621,358 samples, 0.67%)</title><rect x="26.1835%" y="629" width="0.6730%" height="15" fill="rgb(210,195,18)" fg:x="101993262" fg:w="2621358"/><text x="26.4335%" y="639.50"></text></g><g><title>_ZN5cargo3ops8lockfile22resolve_to_string_orig17hce9d668bd39c468bE.llvm.9029116699348801496 (2,621,358 samples, 0.67%)</title><rect x="26.1835%" y="613" width="0.6730%" height="15" fill="rgb(249,80,12)" fg:x="101993262" fg:w="2621358"/><text x="26.4335%" y="623.50"></text></g><g><title>cargo::ops::lockfile::serialize_resolve (2,621,358 samples, 0.67%)</title><rect x="26.1835%" y="597" width="0.6730%" height="15" fill="rgb(221,65,9)" fg:x="101993262" fg:w="2621358"/><text x="26.4335%" y="607.50"></text></g><g><title>cargo::core::resolver::encode::&lt;impl serde::ser::Serialize for cargo::core::resolver::resolve::Resolve&gt;::serialize (2,621,358 samples, 0.67%)</title><rect x="26.1835%" y="581" width="0.6730%" height="15" fill="rgb(235,49,36)" fg:x="101993262" fg:w="2621358"/><text x="26.4335%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2,621,358 samples, 0.67%)</title><rect x="26.1835%" y="565" width="0.6730%" height="15" fill="rgb(225,32,20)" fg:x="101993262" fg:w="2621358"/><text x="26.4335%" y="575.50"></text></g><g><title>cargo::core::resolver::encode::encodable_resolve_node (2,621,358 samples, 0.67%)</title><rect x="26.1835%" y="549" width="0.6730%" height="15" fill="rgb(215,141,46)" fg:x="101993262" fg:w="2621358"/><text x="26.4335%" y="559.50"></text></g><g><title>cargo::cli::main (7,664,520 samples, 1.97%)</title><rect x="25.5585%" y="725" width="1.9676%" height="15" fill="rgb(250,160,47)" fg:x="99558427" fg:w="7664520"/><text x="25.8085%" y="735.50">c..</text></g><g><title>cargo::cli::Exec::exec (7,664,520 samples, 1.97%)</title><rect x="25.5585%" y="709" width="1.9676%" height="15" fill="rgb(216,222,40)" fg:x="99558427" fg:w="7664520"/><text x="25.8085%" y="719.50">c..</text></g><g><title>_ZN5cargo8commands8metadata4exec17h7975ae71b1a65801E.llvm.650511682995495274 (7,664,520 samples, 1.97%)</title><rect x="25.5585%" y="693" width="1.9676%" height="15" fill="rgb(234,217,39)" fg:x="99558427" fg:w="7664520"/><text x="25.8085%" y="703.50">_..</text></g><g><title>cargo::ops::cargo_output_metadata::output_metadata (7,664,520 samples, 1.97%)</title><rect x="25.5585%" y="677" width="1.9676%" height="15" fill="rgb(207,178,40)" fg:x="99558427" fg:w="7664520"/><text x="25.8085%" y="687.50">c..</text></g><g><title>cargo::ops::resolve::resolve_ws_with_opts (5,229,685 samples, 1.34%)</title><rect x="26.1835%" y="661" width="1.3426%" height="15" fill="rgb(221,136,13)" fg:x="101993262" fg:w="5229685"/><text x="26.4335%" y="671.50"></text></g><g><title>cargo::core::resolver::features::FeatureResolver::resolve (2,608,327 samples, 0.67%)</title><rect x="26.8565%" y="645" width="0.6696%" height="15" fill="rgb(249,199,10)" fg:x="104614620" fg:w="2608327"/><text x="27.1065%" y="655.50"></text></g><g><title>cargo::core::resolver::features::FeatureResolver::activate_pkg (2,608,327 samples, 0.67%)</title><rect x="26.8565%" y="629" width="0.6696%" height="15" fill="rgb(249,222,13)" fg:x="104614620" fg:w="2608327"/><text x="27.1065%" y="639.50"></text></g><g><title>cargo::core::resolver::features::FeatureResolver::activate_pkg (2,608,327 samples, 0.67%)</title><rect x="26.8565%" y="613" width="0.6696%" height="15" fill="rgb(244,185,38)" fg:x="104614620" fg:w="2608327"/><text x="27.1065%" y="623.50"></text></g><g><title>cargo::core::resolver::features::FeatureResolver::activate_fv (2,608,327 samples, 0.67%)</title><rect x="26.8565%" y="597" width="0.6696%" height="15" fill="rgb(236,202,9)" fg:x="104614620" fg:w="2608327"/><text x="27.1065%" y="607.50"></text></g><g><title>cargo::core::resolver::features::FeatureResolver::activate_rec (2,608,327 samples, 0.67%)</title><rect x="26.8565%" y="581" width="0.6696%" height="15" fill="rgb(250,229,37)" fg:x="104614620" fg:w="2608327"/><text x="27.1065%" y="591.50"></text></g><g><title>cargo::core::resolver::features::FeatureResolver::activate_fv (2,608,327 samples, 0.67%)</title><rect x="26.8565%" y="565" width="0.6696%" height="15" fill="rgb(206,174,23)" fg:x="104614620" fg:w="2608327"/><text x="27.1065%" y="575.50"></text></g><g><title>cargo::core::resolver::features::FeatureResolver::activate_rec (2,608,327 samples, 0.67%)</title><rect x="26.8565%" y="549" width="0.6696%" height="15" fill="rgb(211,33,43)" fg:x="104614620" fg:w="2608327"/><text x="27.1065%" y="559.50"></text></g><g><title>cargo::core::resolver::features::FeatureResolver::activate_fv (2,608,327 samples, 0.67%)</title><rect x="26.8565%" y="533" width="0.6696%" height="15" fill="rgb(245,58,50)" fg:x="104614620" fg:w="2608327"/><text x="27.1065%" y="543.50"></text></g><g><title>core::iter::adapters::try_process (2,608,327 samples, 0.67%)</title><rect x="26.8565%" y="517" width="0.6696%" height="15" fill="rgb(244,68,36)" fg:x="104614620" fg:w="2608327"/><text x="27.1065%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2,608,327 samples, 0.67%)</title><rect x="26.8565%" y="501" width="0.6696%" height="15" fill="rgb(232,229,15)" fg:x="104614620" fg:w="2608327"/><text x="27.1065%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2,608,327 samples, 0.67%)</title><rect x="26.8565%" y="485" width="0.6696%" height="15" fill="rgb(254,30,23)" fg:x="104614620" fg:w="2608327"/><text x="27.1065%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::flatten::_{{closure}} (2,608,327 samples, 0.67%)</title><rect x="26.8565%" y="469" width="0.6696%" height="15" fill="rgb(235,160,14)" fg:x="104614620" fg:w="2608327"/><text x="27.1065%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2,608,327 samples, 0.67%)</title><rect x="26.8565%" y="453" width="0.6696%" height="15" fill="rgb(212,155,44)" fg:x="104614620" fg:w="2608327"/><text x="27.1065%" y="463.50"></text></g><g><title>&lt;itertools::flatten_ok::FlattenOk&lt;I,T,E&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,608,327 samples, 0.67%)</title><rect x="26.8565%" y="437" width="0.6696%" height="15" fill="rgb(226,2,50)" fg:x="104614620" fg:w="2608327"/><text x="27.1065%" y="447.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (2,608,327 samples, 0.67%)</title><rect x="26.8565%" y="421" width="0.6696%" height="15" fill="rgb(234,177,6)" fg:x="104614620" fg:w="2608327"/><text x="27.1065%" y="431.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_map (4,246,737 samples, 1.09%)</title><rect x="27.5261%" y="501" width="1.0902%" height="15" fill="rgb(217,24,9)" fg:x="107222947" fg:w="4246737"/><text x="27.7761%" y="511.50"></text></g><g><title>&lt;cargo::util::interning::InternedString as serde::de::Deserialize&gt;::deserialize (4,246,737 samples, 1.09%)</title><rect x="27.5261%" y="485" width="1.0902%" height="15" fill="rgb(220,13,46)" fg:x="107222947" fg:w="4246737"/><text x="27.7761%" y="495.50"></text></g><g><title>&lt;serde_untagged::UntaggedEnumVisitor&lt;Value&gt; as serde::de::Visitor&gt;::visit_borrowed_str (4,246,737 samples, 1.09%)</title><rect x="27.5261%" y="469" width="1.0902%" height="15" fill="rgb(239,221,27)" fg:x="107222947" fg:w="4246737"/><text x="27.7761%" y="479.50"></text></g><g><title>&lt;serde_untagged::UntaggedEnumVisitor&lt;Value&gt; as serde::de::Visitor&gt;::visit_str (4,246,737 samples, 1.09%)</title><rect x="27.5261%" y="453" width="1.0902%" height="15" fill="rgb(222,198,25)" fg:x="107222947" fg:w="4246737"/><text x="27.7761%" y="463.50"></text></g><g><title>_ZN4core3ops8function6FnOnce40call_once$u7b$$u7b$vtable.shim$u7d$$u7d$17h3afcd6e553821414E.llvm.10261705501845221505 (4,246,737 samples, 1.09%)</title><rect x="27.5261%" y="437" width="1.0902%" height="15" fill="rgb(211,99,13)" fg:x="107222947" fg:w="4246737"/><text x="27.7761%" y="447.50"></text></g><g><title>cargo::util::interning::InternedString::new (4,246,737 samples, 1.09%)</title><rect x="27.5261%" y="421" width="1.0902%" height="15" fill="rgb(232,111,31)" fg:x="107222947" fg:w="4246737"/><text x="27.7761%" y="431.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_seq (4,246,799 samples, 1.09%)</title><rect x="28.6163%" y="501" width="1.0902%" height="15" fill="rgb(245,82,37)" fg:x="111469684" fg:w="4246799"/><text x="28.8663%" y="511.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (4,246,799 samples, 1.09%)</title><rect x="28.6163%" y="485" width="1.0902%" height="15" fill="rgb(227,149,46)" fg:x="111469684" fg:w="4246799"/><text x="28.8663%" y="495.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for core::option::Option&lt;T&gt;&gt;::deserialize (2,092,478 samples, 0.54%)</title><rect x="29.1694%" y="469" width="0.5372%" height="15" fill="rgb(218,36,50)" fg:x="113624005" fg:w="2092478"/><text x="29.4194%" y="479.50"></text></g><g><title>&lt;cargo::util::interning::InternedString as serde::de::Deserialize&gt;::deserialize (2,092,478 samples, 0.54%)</title><rect x="29.1694%" y="453" width="0.5372%" height="15" fill="rgb(226,80,48)" fg:x="113624005" fg:w="2092478"/><text x="29.4194%" y="463.50"></text></g><g><title>&lt;serde_untagged::UntaggedEnumVisitor&lt;Value&gt; as serde::de::Visitor&gt;::visit_borrowed_str (2,092,478 samples, 0.54%)</title><rect x="29.1694%" y="437" width="0.5372%" height="15" fill="rgb(238,224,15)" fg:x="113624005" fg:w="2092478"/><text x="29.4194%" y="447.50"></text></g><g><title>&lt;serde_untagged::UntaggedEnumVisitor&lt;Value&gt; as serde::de::Visitor&gt;::visit_str (2,092,478 samples, 0.54%)</title><rect x="29.1694%" y="421" width="0.5372%" height="15" fill="rgb(241,136,10)" fg:x="113624005" fg:w="2092478"/><text x="29.4194%" y="431.50"></text></g><g><title>_ZN4core3ops8function6FnOnce40call_once$u7b$$u7b$vtable.shim$u7d$$u7d$17h3afcd6e553821414E.llvm.10261705501845221505 (2,092,478 samples, 0.54%)</title><rect x="29.1694%" y="405" width="0.5372%" height="15" fill="rgb(208,32,45)" fg:x="113624005" fg:w="2092478"/><text x="29.4194%" y="415.50"></text></g><g><title>cargo::util::interning::InternedString::new (2,092,478 samples, 0.54%)</title><rect x="29.1694%" y="389" width="0.5372%" height="15" fill="rgb(207,135,9)" fg:x="113624005" fg:w="2092478"/><text x="29.4194%" y="399.50"></text></g><g><title>cargo::core::resolver::activate_deps_loop (10,784,992 samples, 2.77%)</title><rect x="27.5261%" y="725" width="2.7687%" height="15" fill="rgb(206,86,44)" fg:x="107222947" fg:w="10784992"/><text x="27.7761%" y="735.50">ca..</text></g><g><title>cargo::core::resolver::activate (10,784,992 samples, 2.77%)</title><rect x="27.5261%" y="709" width="2.7687%" height="15" fill="rgb(245,177,15)" fg:x="107222947" fg:w="10784992"/><text x="27.7761%" y="719.50">ca..</text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (10,784,992 samples, 2.77%)</title><rect x="27.5261%" y="693" width="2.7687%" height="15" fill="rgb(206,64,50)" fg:x="107222947" fg:w="10784992"/><text x="27.7761%" y="703.50">al..</text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (10,784,992 samples, 2.77%)</title><rect x="27.5261%" y="677" width="2.7687%" height="15" fill="rgb(234,36,40)" fg:x="107222947" fg:w="10784992"/><text x="27.7761%" y="687.50">&lt;a..</text></g><g><title>cargo::core::resolver::dep_cache::RegistryQueryer::query (10,784,992 samples, 2.77%)</title><rect x="27.5261%" y="661" width="2.7687%" height="15" fill="rgb(213,64,8)" fg:x="107222947" fg:w="10784992"/><text x="27.7761%" y="671.50">ca..</text></g><g><title>&lt;cargo::core::registry::PackageRegistry as cargo::core::registry::Registry&gt;::query (10,784,992 samples, 2.77%)</title><rect x="27.5261%" y="645" width="2.7687%" height="15" fill="rgb(210,75,36)" fg:x="107222947" fg:w="10784992"/><text x="27.7761%" y="655.50">&lt;c..</text></g><g><title>&lt;cargo::sources::replaced::ReplacedSource as cargo::sources::source::Source&gt;::query (10,784,992 samples, 2.77%)</title><rect x="27.5261%" y="629" width="2.7687%" height="15" fill="rgb(229,88,21)" fg:x="107222947" fg:w="10784992"/><text x="27.7761%" y="639.50">&lt;c..</text></g><g><title>&lt;cargo::sources::registry::RegistrySource as cargo::sources::source::Source&gt;::query (10,784,992 samples, 2.77%)</title><rect x="27.5261%" y="613" width="2.7687%" height="15" fill="rgb(252,204,47)" fg:x="107222947" fg:w="10784992"/><text x="27.7761%" y="623.50">&lt;c..</text></g><g><title>cargo::sources::registry::index::RegistryIndex::query_inner (10,784,992 samples, 2.77%)</title><rect x="27.5261%" y="597" width="2.7687%" height="15" fill="rgb(208,77,27)" fg:x="107222947" fg:w="10784992"/><text x="27.7761%" y="607.50">ca..</text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::fold_impl (10,784,992 samples, 2.77%)</title><rect x="27.5261%" y="581" width="2.7687%" height="15" fill="rgb(221,76,26)" fg:x="107222947" fg:w="10784992"/><text x="27.7761%" y="591.50">ha..</text></g><g><title>cargo::sources::registry::index::MaybeIndexSummary::parse (10,784,992 samples, 2.77%)</title><rect x="27.5261%" y="565" width="2.7687%" height="15" fill="rgb(225,139,18)" fg:x="107222947" fg:w="10784992"/><text x="27.7761%" y="575.50">ca..</text></g><g><title>_ZN5cargo7sources8registry5index12IndexSummary5parse17he52db897a14aea66E.llvm.2219623679986394725 (10,784,992 samples, 2.77%)</title><rect x="27.5261%" y="549" width="2.7687%" height="15" fill="rgb(230,137,11)" fg:x="107222947" fg:w="10784992"/><text x="27.7761%" y="559.50">_Z..</text></g><g><title>serde_json::de::from_trait (10,784,992 samples, 2.77%)</title><rect x="27.5261%" y="533" width="2.7687%" height="15" fill="rgb(212,28,1)" fg:x="107222947" fg:w="10784992"/><text x="27.7761%" y="543.50">se..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (10,784,992 samples, 2.77%)</title><rect x="27.5261%" y="517" width="2.7687%" height="15" fill="rgb(248,164,17)" fg:x="107222947" fg:w="10784992"/><text x="27.7761%" y="527.50">&lt;&amp;..</text></g><g><title>&lt;cargo::util::interning::InternedString as serde::de::Deserialize&gt;::deserialize (2,291,456 samples, 0.59%)</title><rect x="29.7065%" y="501" width="0.5883%" height="15" fill="rgb(222,171,42)" fg:x="115716483" fg:w="2291456"/><text x="29.9565%" y="511.50"></text></g><g><title>cargo::core::summary::Summary::map_dependencies (3,292,875 samples, 0.85%)</title><rect x="31.0867%" y="485" width="0.8453%" height="15" fill="rgb(243,84,45)" fg:x="121092658" fg:w="3292875"/><text x="31.3367%" y="495.50"></text></g><g><title>core::iter::adapters::try_process (3,292,875 samples, 0.85%)</title><rect x="31.0867%" y="469" width="0.8453%" height="15" fill="rgb(252,49,23)" fg:x="121092658" fg:w="3292875"/><text x="31.3367%" y="479.50"></text></g><g><title>alloc::vec::in_place_collect::from_iter_in_place (3,292,875 samples, 0.85%)</title><rect x="31.0867%" y="453" width="0.8453%" height="15" fill="rgb(215,19,7)" fg:x="121092658" fg:w="3292875"/><text x="31.3367%" y="463.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3,292,875 samples, 0.85%)</title><rect x="31.0867%" y="437" width="0.8453%" height="15" fill="rgb(238,81,41)" fg:x="121092658" fg:w="3292875"/><text x="31.3367%" y="447.50"></text></g><g><title>&lt;cargo::core::registry::PackageRegistry as cargo::core::registry::Registry&gt;::query::_{{closure}} (5,306,274 samples, 1.36%)</title><rect x="31.0867%" y="517" width="1.3622%" height="15" fill="rgb(210,199,37)" fg:x="121092658" fg:w="5306274"/><text x="31.3367%" y="527.50"></text></g><g><title>_ZN5cargo4core8registry4lock17h281f60f872a7c700E.llvm.13954920962215114781 (5,306,274 samples, 1.36%)</title><rect x="31.0867%" y="501" width="1.3622%" height="15" fill="rgb(244,192,49)" fg:x="121092658" fg:w="5306274"/><text x="31.3367%" y="511.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2,013,399 samples, 0.52%)</title><rect x="31.9320%" y="485" width="0.5169%" height="15" fill="rgb(226,211,11)" fg:x="124385533" fg:w="2013399"/><text x="32.1820%" y="495.50"></text></g><g><title>&lt;cargo::core::source_id::SourceId as core::hash::Hash&gt;::hash (2,013,399 samples, 0.52%)</title><rect x="31.9320%" y="469" width="0.5169%" height="15" fill="rgb(236,162,54)" fg:x="124385533" fg:w="2013399"/><text x="32.1820%" y="479.50"></text></g><g><title>_ZN71_$LT$core..hash..sip..Hasher$LT$S$GT$$u20$as$u20$core..hash..Hasher$GT$5write17h20779edf860a8d85E.llvm.66316692854318981 (2,013,399 samples, 0.52%)</title><rect x="31.9320%" y="453" width="0.5169%" height="15" fill="rgb(220,229,9)" fg:x="124385533" fg:w="2013399"/><text x="32.1820%" y="463.50"></text></g><g><title>&lt;cargo::sources::registry::RegistrySource as cargo::sources::source::Source&gt;::query::_{{closure}} (8,590,553 samples, 2.21%)</title><rect x="31.0867%" y="549" width="2.2054%" height="15" fill="rgb(250,87,22)" fg:x="121092658" fg:w="8590553"/><text x="31.3367%" y="559.50">&lt;..</text></g><g><title>&lt;cargo::sources::replaced::ReplacedSource as cargo::sources::source::Source&gt;::query::_{{closure}} (8,590,553 samples, 2.21%)</title><rect x="31.0867%" y="533" width="2.2054%" height="15" fill="rgb(239,43,17)" fg:x="121092658" fg:w="8590553"/><text x="31.3367%" y="543.50">&lt;..</text></g><g><title>cargo::core::summary::Summary::map_source (3,284,279 samples, 0.84%)</title><rect x="32.4489%" y="517" width="0.8431%" height="15" fill="rgb(231,177,25)" fg:x="126398932" fg:w="3284279"/><text x="32.6989%" y="527.50"></text></g><g><title>cargo::core::package_id::PackageId::new (3,284,279 samples, 0.84%)</title><rect x="32.4489%" y="501" width="0.8431%" height="15" fill="rgb(219,179,1)" fg:x="126398932" fg:w="3284279"/><text x="32.6989%" y="511.50"></text></g><g><title>cargo::core::package_id::PackageId::new (2,378,447 samples, 0.61%)</title><rect x="33.2920%" y="517" width="0.6106%" height="15" fill="rgb(238,219,53)" fg:x="129683211" fg:w="2378447"/><text x="33.5420%" y="527.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_map (6,599,306 samples, 1.69%)</title><rect x="33.9026%" y="485" width="1.6942%" height="15" fill="rgb(232,167,36)" fg:x="132061658" fg:w="6599306"/><text x="34.1526%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (6,599,306 samples, 1.69%)</title><rect x="33.9026%" y="469" width="1.6942%" height="15" fill="rgb(244,19,51)" fg:x="132061658" fg:w="6599306"/><text x="34.1526%" y="479.50"></text></g><g><title>__memcmp_avx2_movbe (4,803,314 samples, 1.23%)</title><rect x="34.3637%" y="453" width="1.2331%" height="15" fill="rgb(224,6,22)" fg:x="133857650" fg:w="4803314"/><text x="34.6137%" y="463.50"></text></g><g><title>&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::parse_str (2,197,683 samples, 0.56%)</title><rect x="35.5968%" y="485" width="0.5642%" height="15" fill="rgb(224,145,5)" fg:x="138660964" fg:w="2197683"/><text x="35.8468%" y="495.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (25,344,635 samples, 6.51%)</title><rect x="30.2948%" y="677" width="6.5064%" height="15" fill="rgb(234,130,49)" fg:x="118007939" fg:w="25344635"/><text x="30.5448%" y="687.50">alloc::ve..</text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (25,344,635 samples, 6.51%)</title><rect x="30.2948%" y="661" width="6.5064%" height="15" fill="rgb(254,6,2)" fg:x="118007939" fg:w="25344635"/><text x="30.5448%" y="671.50">&lt;alloc::v..</text></g><g><title>cargo::core::resolver::dep_cache::RegistryQueryer::query (25,344,635 samples, 6.51%)</title><rect x="30.2948%" y="645" width="6.5064%" height="15" fill="rgb(208,96,46)" fg:x="118007939" fg:w="25344635"/><text x="30.5448%" y="655.50">cargo::co..</text></g><g><title>&lt;cargo::core::registry::PackageRegistry as cargo::core::registry::Registry&gt;::query (25,344,635 samples, 6.51%)</title><rect x="30.2948%" y="629" width="6.5064%" height="15" fill="rgb(239,3,39)" fg:x="118007939" fg:w="25344635"/><text x="30.5448%" y="639.50">&lt;cargo::c..</text></g><g><title>&lt;cargo::sources::replaced::ReplacedSource as cargo::sources::source::Source&gt;::query (25,344,635 samples, 6.51%)</title><rect x="30.2948%" y="613" width="6.5064%" height="15" fill="rgb(233,210,1)" fg:x="118007939" fg:w="25344635"/><text x="30.5448%" y="623.50">&lt;cargo::s..</text></g><g><title>&lt;cargo::sources::registry::RegistrySource as cargo::sources::source::Source&gt;::query (25,344,635 samples, 6.51%)</title><rect x="30.2948%" y="597" width="6.5064%" height="15" fill="rgb(244,137,37)" fg:x="118007939" fg:w="25344635"/><text x="30.5448%" y="607.50">&lt;cargo::s..</text></g><g><title>cargo::sources::registry::index::RegistryIndex::query_inner (25,344,635 samples, 6.51%)</title><rect x="30.2948%" y="581" width="6.5064%" height="15" fill="rgb(240,136,2)" fg:x="118007939" fg:w="25344635"/><text x="30.5448%" y="591.50">cargo::so..</text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::fold_impl (25,344,635 samples, 6.51%)</title><rect x="30.2948%" y="565" width="6.5064%" height="15" fill="rgb(239,18,37)" fg:x="118007939" fg:w="25344635"/><text x="30.5448%" y="575.50">hashbrown..</text></g><g><title>cargo::sources::registry::index::MaybeIndexSummary::parse (13,669,363 samples, 3.51%)</title><rect x="33.2920%" y="549" width="3.5092%" height="15" fill="rgb(218,185,22)" fg:x="129683211" fg:w="13669363"/><text x="33.5420%" y="559.50">car..</text></g><g><title>_ZN5cargo7sources8registry5index12IndexSummary5parse17he52db897a14aea66E.llvm.2219623679986394725 (13,669,363 samples, 3.51%)</title><rect x="33.2920%" y="533" width="3.5092%" height="15" fill="rgb(225,218,4)" fg:x="129683211" fg:w="13669363"/><text x="33.5420%" y="543.50">_ZN..</text></g><g><title>serde_json::de::from_trait (11,290,916 samples, 2.90%)</title><rect x="33.9026%" y="517" width="2.8986%" height="15" fill="rgb(230,182,32)" fg:x="132061658" fg:w="11290916"/><text x="34.1526%" y="527.50">se..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (11,290,916 samples, 2.90%)</title><rect x="33.9026%" y="501" width="2.8986%" height="15" fill="rgb(242,56,43)" fg:x="132061658" fg:w="11290916"/><text x="34.1526%" y="511.50">&lt;&amp;..</text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for core::option::Option&lt;T&gt;&gt;::deserialize (2,493,927 samples, 0.64%)</title><rect x="36.1610%" y="485" width="0.6402%" height="15" fill="rgb(233,99,24)" fg:x="140858647" fg:w="2493927"/><text x="36.4110%" y="495.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_map (2,493,927 samples, 0.64%)</title><rect x="36.1610%" y="469" width="0.6402%" height="15" fill="rgb(234,209,42)" fg:x="140858647" fg:w="2493927"/><text x="36.4110%" y="479.50"></text></g><g><title>cargo::core::resolver::resolve (27,708,072 samples, 7.11%)</title><rect x="30.2948%" y="725" width="7.1132%" height="15" fill="rgb(227,7,12)" fg:x="118007939" fg:w="27708072"/><text x="30.5448%" y="735.50">cargo::cor..</text></g><g><title>cargo::core::resolver::activate_deps_loop (27,708,072 samples, 7.11%)</title><rect x="30.2948%" y="709" width="7.1132%" height="15" fill="rgb(245,203,43)" fg:x="118007939" fg:w="27708072"/><text x="30.5448%" y="719.50">cargo::cor..</text></g><g><title>cargo::core::resolver::activate (27,708,072 samples, 7.11%)</title><rect x="30.2948%" y="693" width="7.1132%" height="15" fill="rgb(238,205,33)" fg:x="118007939" fg:w="27708072"/><text x="30.5448%" y="703.50">cargo::cor..</text></g><g><title>cargo::core::resolver::context::ResolverContext::flag_activated (2,363,437 samples, 0.61%)</title><rect x="36.8012%" y="677" width="0.6067%" height="15" fill="rgb(231,56,7)" fg:x="143352574" fg:w="2363437"/><text x="37.0512%" y="687.50"></text></g><g><title>alloc::collections::btree::set::BTreeSet&lt;T,A&gt;::is_subset (2,363,437 samples, 0.61%)</title><rect x="36.8012%" y="661" width="0.6067%" height="15" fill="rgb(244,186,29)" fg:x="143352574" fg:w="2363437"/><text x="37.0512%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,363,437 samples, 0.61%)</title><rect x="36.8012%" y="645" width="0.6067%" height="15" fill="rgb(234,111,31)" fg:x="143352574" fg:w="2363437"/><text x="37.0512%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (6,039,748 samples, 1.55%)</title><rect x="37.4080%" y="645" width="1.5505%" height="15" fill="rgb(241,149,10)" fg:x="145716011" fg:w="6039748"/><text x="37.6580%" y="655.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (6,039,748 samples, 1.55%)</title><rect x="37.4080%" y="629" width="1.5505%" height="15" fill="rgb(249,206,44)" fg:x="145716011" fg:w="6039748"/><text x="37.6580%" y="639.50"></text></g><g><title>cargo::core::package::Package::serialized (6,039,748 samples, 1.55%)</title><rect x="37.4080%" y="613" width="1.5505%" height="15" fill="rgb(251,153,30)" fg:x="145716011" fg:w="6039748"/><text x="37.6580%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (6,039,748 samples, 1.55%)</title><rect x="37.4080%" y="597" width="1.5505%" height="15" fill="rgb(239,152,38)" fg:x="145716011" fg:w="6039748"/><text x="37.6580%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (6,039,748 samples, 1.55%)</title><rect x="37.4080%" y="581" width="1.5505%" height="15" fill="rgb(249,139,47)" fg:x="145716011" fg:w="6039748"/><text x="37.6580%" y="591.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (6,039,748 samples, 1.55%)</title><rect x="37.4080%" y="565" width="1.5505%" height="15" fill="rgb(244,64,35)" fg:x="145716011" fg:w="6039748"/><text x="37.6580%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (6,039,748 samples, 1.55%)</title><rect x="37.4080%" y="549" width="1.5505%" height="15" fill="rgb(216,46,15)" fg:x="145716011" fg:w="6039748"/><text x="37.6580%" y="559.50"></text></g><g><title>cargo::util::interning::InternedString::new (6,039,748 samples, 1.55%)</title><rect x="37.4080%" y="533" width="1.5505%" height="15" fill="rgb(250,74,19)" fg:x="145716011" fg:w="6039748"/><text x="37.6580%" y="543.50"></text></g><g><title>core::hash::BuildHasher::hash_one (6,039,748 samples, 1.55%)</title><rect x="37.4080%" y="517" width="1.5505%" height="15" fill="rgb(249,42,33)" fg:x="145716011" fg:w="6039748"/><text x="37.6580%" y="527.50"></text></g><g><title>_ZN71_$LT$core..hash..sip..Hasher$LT$S$GT$$u20$as$u20$core..hash..Hasher$GT$5write17h20779edf860a8d85E.llvm.13954920962215114781 (6,039,748 samples, 1.55%)</title><rect x="37.4080%" y="501" width="1.5505%" height="15" fill="rgb(242,149,17)" fg:x="145716011" fg:w="6039748"/><text x="37.6580%" y="511.50"></text></g><g><title>cargo::core::resolver::resolve::Resolve::extern_crate_name_and_dep_name (1,710,414 samples, 0.44%)</title><rect x="38.9585%" y="597" width="0.4391%" height="15" fill="rgb(244,29,21)" fg:x="151755759" fg:w="1710414"/><text x="39.2085%" y="607.50"></text></g><g><title>cargo::util::graph::Graph&lt;N,E&gt;::edge (1,710,414 samples, 0.44%)</title><rect x="38.9585%" y="581" width="0.4391%" height="15" fill="rgb(220,130,37)" fg:x="151755759" fg:w="1710414"/><text x="39.2085%" y="591.50"></text></g><g><title>im_rc::ord::map::&lt;impl im_rc::nodes::btree::BTreeValue for (K,V)&gt;::search_key (1,710,414 samples, 0.44%)</title><rect x="38.9585%" y="565" width="0.4391%" height="15" fill="rgb(211,67,2)" fg:x="151755759" fg:w="1710414"/><text x="39.2085%" y="575.50"></text></g><g><title>cargo::ops::cargo_output_metadata::build_resolve_graph_r (1,829,427 samples, 0.47%)</title><rect x="38.9585%" y="645" width="0.4696%" height="15" fill="rgb(235,68,52)" fg:x="151755759" fg:w="1829427"/><text x="39.2085%" y="655.50"></text></g><g><title>cargo::ops::cargo_output_metadata::build_resolve_graph_r (1,829,427 samples, 0.47%)</title><rect x="38.9585%" y="629" width="0.4696%" height="15" fill="rgb(246,142,3)" fg:x="151755759" fg:w="1829427"/><text x="39.2085%" y="639.50"></text></g><g><title>cargo::ops::cargo_output_metadata::build_resolve_graph_r (1,829,427 samples, 0.47%)</title><rect x="38.9585%" y="613" width="0.4696%" height="15" fill="rgb(241,25,7)" fg:x="151755759" fg:w="1829427"/><text x="39.2085%" y="623.50"></text></g><g><title>cargo::ops::cargo_output_metadata::build_resolve_graph_r (119,013 samples, 0.03%)</title><rect x="39.3976%" y="597" width="0.0306%" height="15" fill="rgb(242,119,39)" fg:x="153466173" fg:w="119013"/><text x="39.6476%" y="607.50"></text></g><g><title>_ZN4core3ptr60drop_in_place$LT$cargo..core..resolver..resolve..Resolve$GT$17hb4467579b642c22fE.llvm.2219623679986394725 (2,754,248 samples, 0.71%)</title><rect x="39.4281%" y="613" width="0.7071%" height="15" fill="rgb(241,98,45)" fg:x="153585186" fg:w="2754248"/><text x="39.6781%" y="623.50"></text></g><g><title>_ZN4core3ptr246drop_in_place$LT$im_rc..nodes..btree..Node$LT$$LP$cargo..core..package_id..PackageId$C$im_rc..ord..map..OrdMap$LT$cargo..core..package_id..PackageId$C$std..collections..hash..set..HashSet$LT$cargo..core..dependency..Dependency$GT$$GT$$RP$$GT$$GT$17h51ea3420ba1e01f9E.llvm.12570498106867794895 (2,754,248 samples, 0.71%)</title><rect x="39.4281%" y="597" width="0.7071%" height="15" fill="rgb(254,28,30)" fg:x="153585186" fg:w="2754248"/><text x="39.6781%" y="607.50"></text></g><g><title>_ZN4core3ptr246drop_in_place$LT$im_rc..nodes..btree..Node$LT$$LP$cargo..core..package_id..PackageId$C$im_rc..ord..map..OrdMap$LT$cargo..core..package_id..PackageId$C$std..collections..hash..set..HashSet$LT$cargo..core..dependency..Dependency$GT$$GT$$RP$$GT$$GT$17h51ea3420ba1e01f9E.llvm.12570498106867794895 (2,754,248 samples, 0.71%)</title><rect x="39.4281%" y="581" width="0.7071%" height="15" fill="rgb(241,142,54)" fg:x="153585186" fg:w="2754248"/><text x="39.6781%" y="591.50"></text></g><g><title>_ZN4core3ptr205drop_in_place$LT$im_rc..fakepool..Rc$LT$im_rc..nodes..btree..Node$LT$$LP$cargo..core..package_id..PackageId$C$std..collections..hash..set..HashSet$LT$cargo..core..dependency..Dependency$GT$$RP$$GT$$GT$$GT$17h05e86ccce3946d71E.llvm.12570498106867794895 (2,754,248 samples, 0.71%)</title><rect x="39.4281%" y="565" width="0.7071%" height="15" fill="rgb(222,85,15)" fg:x="153585186" fg:w="2754248"/><text x="39.6781%" y="575.50"></text></g><g><title>_ZN5cargo3ops7resolve21resolve_with_registry17h15aaf12c47a16657E.llvm.2219623679986394725 (5,046,250 samples, 1.30%)</title><rect x="39.4281%" y="629" width="1.2955%" height="15" fill="rgb(210,85,47)" fg:x="153585186" fg:w="5046250"/><text x="39.6781%" y="639.50"></text></g><g><title>cargo::ops::resolve::resolve_with_previous (2,292,002 samples, 0.59%)</title><rect x="40.1352%" y="613" width="0.5884%" height="15" fill="rgb(224,206,25)" fg:x="156339434" fg:w="2292002"/><text x="40.3852%" y="623.50"></text></g><g><title>cargo::core::resolver::resolve::Resolve::merge_from (2,292,002 samples, 0.59%)</title><rect x="40.1352%" y="597" width="0.5884%" height="15" fill="rgb(243,201,19)" fg:x="156339434" fg:w="2292002"/><text x="40.3852%" y="607.50"></text></g><g><title>__memcmp_avx2_movbe (2,292,002 samples, 0.59%)</title><rect x="40.1352%" y="581" width="0.5884%" height="15" fill="rgb(236,59,4)" fg:x="156339434" fg:w="2292002"/><text x="40.3852%" y="591.50"></text></g><g><title>cargo::ops::resolve::resolve_ws_with_opts (7,688,582 samples, 1.97%)</title><rect x="39.4281%" y="645" width="1.9738%" height="15" fill="rgb(254,179,45)" fg:x="153585186" fg:w="7688582"/><text x="39.6781%" y="655.50">c..</text></g><g><title>cargo::core::package::PackageSet::download_accessible (2,642,332 samples, 0.68%)</title><rect x="40.7236%" y="629" width="0.6783%" height="15" fill="rgb(226,14,10)" fg:x="158631436" fg:w="2642332"/><text x="40.9736%" y="639.50"></text></g><g><title>cargo::core::global_cache_tracker::DeferredGlobalLastUse::save_no_error (2,642,332 samples, 0.68%)</title><rect x="40.7236%" y="613" width="0.6783%" height="15" fill="rgb(244,27,41)" fg:x="158631436" fg:w="2642332"/><text x="40.9736%" y="623.50"></text></g><g><title>cargo::core::global_cache_tracker::DeferredGlobalLastUse::save (2,642,332 samples, 0.68%)</title><rect x="40.7236%" y="597" width="0.6783%" height="15" fill="rgb(235,35,32)" fg:x="158631436" fg:w="2642332"/><text x="40.9736%" y="607.50"></text></g><g><title>&lt;rusqlite::row::Rows as fallible_streaming_iterator::FallibleStreamingIterator&gt;::advance (2,642,332 samples, 0.68%)</title><rect x="40.7236%" y="581" width="0.6783%" height="15" fill="rgb(218,68,31)" fg:x="158631436" fg:w="2642332"/><text x="40.9736%" y="591.50"></text></g><g><title>sqlite3_step (2,642,332 samples, 0.68%)</title><rect x="40.7236%" y="565" width="0.6783%" height="15" fill="rgb(207,120,37)" fg:x="158631436" fg:w="2642332"/><text x="40.9736%" y="575.50"></text></g><g><title>sqlite3VdbeExec (2,642,332 samples, 0.68%)</title><rect x="40.7236%" y="549" width="0.6783%" height="15" fill="rgb(227,98,0)" fg:x="158631436" fg:w="2642332"/><text x="40.9736%" y="559.50"></text></g><g><title>btreeBeginTrans (2,642,332 samples, 0.68%)</title><rect x="40.7236%" y="533" width="0.6783%" height="15" fill="rgb(207,7,3)" fg:x="158631436" fg:w="2642332"/><text x="40.9736%" y="543.50"></text></g><g><title>sqlite3PagerSharedLock (2,642,332 samples, 0.68%)</title><rect x="40.7236%" y="517" width="0.6783%" height="15" fill="rgb(206,98,19)" fg:x="158631436" fg:w="2642332"/><text x="40.9736%" y="527.50"></text></g><g><title>unixAccess (2,642,332 samples, 0.68%)</title><rect x="40.7236%" y="501" width="0.6783%" height="15" fill="rgb(217,5,26)" fg:x="158631436" fg:w="2642332"/><text x="40.9736%" y="511.50"></text></g><g><title>_ZN4core3ptr42drop_in_place$LT$toml_edit..item..Item$GT$17h1a7880e0bb15f3e2E.llvm.12570498106867794895 (5,120,602 samples, 1.31%)</title><rect x="41.4019%" y="581" width="1.3146%" height="15" fill="rgb(235,190,38)" fg:x="161273768" fg:w="5120602"/><text x="41.6519%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5,120,602 samples, 1.31%)</title><rect x="41.4019%" y="565" width="1.3146%" height="15" fill="rgb(247,86,24)" fg:x="161273768" fg:w="5120602"/><text x="41.6519%" y="575.50"></text></g><g><title>_ZN4core3ptr144drop_in_place$LT$alloc..vec..Vec$LT$indexmap..Bucket$LT$toml_edit..internal_string..InternalString$C$toml_edit..table..TableKeyValue$GT$$GT$$GT$17h35b68f6945301a89E.llvm.790525420194297934 (5,120,602 samples, 1.31%)</title><rect x="41.4019%" y="549" width="1.3146%" height="15" fill="rgb(205,101,16)" fg:x="161273768" fg:w="5120602"/><text x="41.6519%" y="559.50"></text></g><g><title>cfree@GLIBC_2.2.5 (5,120,602 samples, 1.31%)</title><rect x="41.4019%" y="533" width="1.3146%" height="15" fill="rgb(246,168,33)" fg:x="161273768" fg:w="5120602"/><text x="41.6519%" y="543.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9,689,044 samples, 2.49%)</title><rect x="41.4019%" y="597" width="2.4874%" height="15" fill="rgb(231,114,1)" fg:x="161273768" fg:w="9689044"/><text x="41.6519%" y="607.50">&lt;a..</text></g><g><title>_ZN4core3ptr61drop_in_place$LT$cargo_util_schemas..manifest..TomlTarget$GT$17h8deaaa1bcf420630E.llvm.790525420194297934 (4,568,442 samples, 1.17%)</title><rect x="42.7165%" y="581" width="1.1728%" height="15" fill="rgb(207,184,53)" fg:x="166394370" fg:w="4568442"/><text x="42.9665%" y="591.50"></text></g><g><title>cfree@GLIBC_2.2.5 (4,568,442 samples, 1.17%)</title><rect x="42.7165%" y="565" width="1.1728%" height="15" fill="rgb(224,95,51)" fg:x="166394370" fg:w="4568442"/><text x="42.9665%" y="575.50"></text></g><g><title>_ZN4core3ptr52drop_in_place$LT$cargo..core..manifest..Manifest$GT$17h05c353d2b970be14E.llvm.12570498106867794895 (14,446,509 samples, 3.71%)</title><rect x="41.4019%" y="613" width="3.7087%" height="15" fill="rgb(212,188,45)" fg:x="161273768" fg:w="14446509"/><text x="41.6519%" y="623.50">_ZN4..</text></g><g><title>core::ptr::drop_in_place&lt;cargo::core::manifest::ManifestMetadata&gt; (4,757,465 samples, 1.22%)</title><rect x="43.8893%" y="597" width="1.2213%" height="15" fill="rgb(223,154,38)" fg:x="170962812" fg:w="4757465"/><text x="44.1393%" y="607.50"></text></g><g><title>cfree@GLIBC_2.2.5 (4,757,465 samples, 1.22%)</title><rect x="43.8893%" y="581" width="1.2213%" height="15" fill="rgb(251,22,52)" fg:x="170962812" fg:w="4757465"/><text x="44.1393%" y="591.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (19,983,200 samples, 5.13%)</title><rect x="41.4019%" y="629" width="5.1301%" height="15" fill="rgb(229,209,22)" fg:x="161273768" fg:w="19983200"/><text x="41.6519%" y="639.50">&lt;hashb..</text></g><g><title>cfree@GLIBC_2.2.5 (5,536,691 samples, 1.42%)</title><rect x="45.1106%" y="613" width="1.4214%" height="15" fill="rgb(234,138,34)" fg:x="175720277" fg:w="5536691"/><text x="45.3606%" y="623.50"></text></g><g><title>_int_free_maybe_consolidate.part.0 (5,536,691 samples, 1.42%)</title><rect x="45.1106%" y="597" width="1.4214%" height="15" fill="rgb(212,95,11)" fg:x="175720277" fg:w="5536691"/><text x="45.3606%" y="607.50"></text></g><g><title>malloc_consolidate (5,536,691 samples, 1.42%)</title><rect x="45.1106%" y="581" width="1.4214%" height="15" fill="rgb(240,179,47)" fg:x="175720277" fg:w="5536691"/><text x="45.3606%" y="591.50"></text></g><g><title>unlink_chunk.isra.0 (5,536,691 samples, 1.42%)</title><rect x="45.1106%" y="565" width="1.4214%" height="15" fill="rgb(240,163,11)" fg:x="175720277" fg:w="5536691"/><text x="45.3606%" y="575.50"></text></g><g><title>cargo::cli::Exec::exec (39,608,814 samples, 10.17%)</title><rect x="37.4080%" y="693" width="10.1683%" height="15" fill="rgb(236,37,12)" fg:x="145716011" fg:w="39608814"/><text x="37.6580%" y="703.50">cargo::cli::Exe..</text></g><g><title>_ZN5cargo8commands8metadata4exec17h7975ae71b1a65801E.llvm.650511682995495274 (39,608,814 samples, 10.17%)</title><rect x="37.4080%" y="677" width="10.1683%" height="15" fill="rgb(232,164,16)" fg:x="145716011" fg:w="39608814"/><text x="37.6580%" y="687.50">_ZN5cargo8comma..</text></g><g><title>cargo::ops::cargo_output_metadata::output_metadata (39,608,814 samples, 10.17%)</title><rect x="37.4080%" y="661" width="10.1683%" height="15" fill="rgb(244,205,15)" fg:x="145716011" fg:w="39608814"/><text x="37.6580%" y="671.50">cargo::ops::car..</text></g><g><title>core::ptr::drop_in_place&lt;cargo::ops::resolve::WorkspaceResolve&gt; (24,051,057 samples, 6.17%)</title><rect x="41.4019%" y="645" width="6.1743%" height="15" fill="rgb(223,117,47)" fg:x="161273768" fg:w="24051057"/><text x="41.6519%" y="655.50">core::pt..</text></g><g><title>core::ptr::drop_in_place&lt;cargo::core::resolver::resolve::Resolve&gt; (4,067,857 samples, 1.04%)</title><rect x="46.5320%" y="629" width="1.0443%" height="15" fill="rgb(244,107,35)" fg:x="181256968" fg:w="4067857"/><text x="46.7820%" y="639.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (4,067,857 samples, 1.04%)</title><rect x="46.5320%" y="613" width="1.0443%" height="15" fill="rgb(205,140,8)" fg:x="181256968" fg:w="4067857"/><text x="46.7820%" y="623.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (4,067,857 samples, 1.04%)</title><rect x="46.5320%" y="597" width="1.0443%" height="15" fill="rgb(228,84,46)" fg:x="181256968" fg:w="4067857"/><text x="46.7820%" y="607.50"></text></g><g><title>ASN1_item_d2i_ex (2,437,673 samples, 0.63%)</title><rect x="47.5763%" y="517" width="0.6258%" height="15" fill="rgb(254,188,9)" fg:x="185324825" fg:w="2437673"/><text x="47.8263%" y="527.50"></text></g><g><title>asn1_item_embed_d2i (2,437,673 samples, 0.63%)</title><rect x="47.5763%" y="501" width="0.6258%" height="15" fill="rgb(206,112,54)" fg:x="185324825" fg:w="2437673"/><text x="47.8263%" y="511.50"></text></g><g><title>asn1_template_noexp_d2i (2,437,673 samples, 0.63%)</title><rect x="47.5763%" y="485" width="0.6258%" height="15" fill="rgb(216,84,49)" fg:x="185324825" fg:w="2437673"/><text x="47.8263%" y="495.50"></text></g><g><title>asn1_item_embed_d2i (2,437,673 samples, 0.63%)</title><rect x="47.5763%" y="469" width="0.6258%" height="15" fill="rgb(214,194,35)" fg:x="185324825" fg:w="2437673"/><text x="47.8263%" y="479.50"></text></g><g><title>asn1_template_noexp_d2i (2,437,673 samples, 0.63%)</title><rect x="47.5763%" y="453" width="0.6258%" height="15" fill="rgb(249,28,3)" fg:x="185324825" fg:w="2437673"/><text x="47.8263%" y="463.50"></text></g><g><title>asn1_item_embed_d2i (2,437,673 samples, 0.63%)</title><rect x="47.5763%" y="437" width="0.6258%" height="15" fill="rgb(222,56,52)" fg:x="185324825" fg:w="2437673"/><text x="47.8263%" y="447.50"></text></g><g><title>x509_pubkey_ex_d2i_ex (2,437,673 samples, 0.63%)</title><rect x="47.5763%" y="421" width="0.6258%" height="15" fill="rgb(245,217,50)" fg:x="185324825" fg:w="2437673"/><text x="47.8263%" y="431.50"></text></g><g><title>OSSL_DECODER_CTX_new_for_pkey (2,437,673 samples, 0.63%)</title><rect x="47.5763%" y="405" width="0.6258%" height="15" fill="rgb(213,201,24)" fg:x="185324825" fg:w="2437673"/><text x="47.8263%" y="415.50"></text></g><g><title>OSSL_DECODER_do_all_provided (2,437,673 samples, 0.63%)</title><rect x="47.5763%" y="389" width="0.6258%" height="15" fill="rgb(248,116,28)" fg:x="185324825" fg:w="2437673"/><text x="47.8263%" y="399.50"></text></g><g><title>ossl_method_construct (2,437,673 samples, 0.63%)</title><rect x="47.5763%" y="373" width="0.6258%" height="15" fill="rgb(219,72,43)" fg:x="185324825" fg:w="2437673"/><text x="47.8263%" y="383.50"></text></g><g><title>ossl_algorithm_do_all (2,437,673 samples, 0.63%)</title><rect x="47.5763%" y="357" width="0.6258%" height="15" fill="rgb(209,138,14)" fg:x="185324825" fg:w="2437673"/><text x="47.8263%" y="367.50"></text></g><g><title>ossl_provider_doall_activated (2,437,673 samples, 0.63%)</title><rect x="47.5763%" y="341" width="0.6258%" height="15" fill="rgb(222,18,33)" fg:x="185324825" fg:w="2437673"/><text x="47.8263%" y="351.50"></text></g><g><title>algorithm_do_this (2,437,673 samples, 0.63%)</title><rect x="47.5763%" y="325" width="0.6258%" height="15" fill="rgb(213,199,7)" fg:x="185324825" fg:w="2437673"/><text x="47.8263%" y="335.50"></text></g><g><title>ossl_method_construct_this (2,437,673 samples, 0.63%)</title><rect x="47.5763%" y="309" width="0.6258%" height="15" fill="rgb(250,110,10)" fg:x="185324825" fg:w="2437673"/><text x="47.8263%" y="319.50"></text></g><g><title>construct_decoder (2,437,673 samples, 0.63%)</title><rect x="47.5763%" y="293" width="0.6258%" height="15" fill="rgb(248,123,6)" fg:x="185324825" fg:w="2437673"/><text x="47.8263%" y="303.50"></text></g><g><title>ossl_decoder_from_algorithm (2,437,673 samples, 0.63%)</title><rect x="47.5763%" y="277" width="0.6258%" height="15" fill="rgb(206,91,31)" fg:x="185324825" fg:w="2437673"/><text x="47.8263%" y="287.50"></text></g><g><title>ossl_parse_property (2,437,673 samples, 0.63%)</title><rect x="47.5763%" y="261" width="0.6258%" height="15" fill="rgb(211,154,13)" fg:x="185324825" fg:w="2437673"/><text x="47.8263%" y="271.50"></text></g><g><title>parse_unquoted (2,437,673 samples, 0.63%)</title><rect x="47.5763%" y="245" width="0.6258%" height="15" fill="rgb(225,148,7)" fg:x="185324825" fg:w="2437673"/><text x="47.8263%" y="255.50"></text></g><g><title>ossl_property_value (2,437,673 samples, 0.63%)</title><rect x="47.5763%" y="229" width="0.6258%" height="15" fill="rgb(220,160,43)" fg:x="185324825" fg:w="2437673"/><text x="47.8263%" y="239.50"></text></g><g><title>OPENSSL_sk_insert (2,437,673 samples, 0.63%)</title><rect x="47.5763%" y="213" width="0.6258%" height="15" fill="rgb(213,52,39)" fg:x="185324825" fg:w="2437673"/><text x="47.8263%" y="223.50"></text></g><g><title>realloc (2,437,673 samples, 0.63%)</title><rect x="47.5763%" y="197" width="0.6258%" height="15" fill="rgb(243,137,7)" fg:x="185324825" fg:w="2437673"/><text x="47.8263%" y="207.50"></text></g><g><title>cargo::main (45,191,186 samples, 11.60%)</title><rect x="37.4080%" y="725" width="11.6014%" height="15" fill="rgb(230,79,13)" fg:x="145716011" fg:w="45191186"/><text x="37.6580%" y="735.50">cargo::main</text></g><g><title>cargo::cli::main (45,191,186 samples, 11.60%)</title><rect x="37.4080%" y="709" width="11.6014%" height="15" fill="rgb(247,105,23)" fg:x="145716011" fg:w="45191186"/><text x="37.6580%" y="719.50">cargo::cli::main</text></g><g><title>cargo::init_git (5,582,372 samples, 1.43%)</title><rect x="47.5763%" y="693" width="1.4331%" height="15" fill="rgb(223,179,41)" fg:x="185324825" fg:w="5582372"/><text x="47.8263%" y="703.50"></text></g><g><title>git2::opts::set_verify_owner_validation (5,582,372 samples, 1.43%)</title><rect x="47.5763%" y="677" width="1.4331%" height="15" fill="rgb(218,9,34)" fg:x="185324825" fg:w="5582372"/><text x="47.8263%" y="687.50"></text></g><g><title>libgit2_sys::init (5,582,372 samples, 1.43%)</title><rect x="47.5763%" y="661" width="1.4331%" height="15" fill="rgb(222,106,8)" fg:x="185324825" fg:w="5582372"/><text x="47.8263%" y="671.50"></text></g><g><title>std::sys::sync::once::futex::Once::call (5,582,372 samples, 1.43%)</title><rect x="47.5763%" y="645" width="1.4331%" height="15" fill="rgb(211,220,0)" fg:x="185324825" fg:w="5582372"/><text x="47.8263%" y="655.50"></text></g><g><title>std::sync::once::Once::call_once::_{{closure}} (5,582,372 samples, 1.43%)</title><rect x="47.5763%" y="629" width="1.4331%" height="15" fill="rgb(229,52,16)" fg:x="185324825" fg:w="5582372"/><text x="47.8263%" y="639.50"></text></g><g><title>git_runtime_init (5,582,372 samples, 1.43%)</title><rect x="47.5763%" y="613" width="1.4331%" height="15" fill="rgb(212,155,18)" fg:x="185324825" fg:w="5582372"/><text x="47.8263%" y="623.50"></text></g><g><title>git_openssl_stream_global_init (5,582,372 samples, 1.43%)</title><rect x="47.5763%" y="597" width="1.4331%" height="15" fill="rgb(242,21,14)" fg:x="185324825" fg:w="5582372"/><text x="47.8263%" y="607.50"></text></g><g><title>X509_STORE_set_default_paths_ex (5,582,372 samples, 1.43%)</title><rect x="47.5763%" y="581" width="1.4331%" height="15" fill="rgb(222,19,48)" fg:x="185324825" fg:w="5582372"/><text x="47.8263%" y="591.50"></text></g><g><title>by_file_ctrl_ex (5,582,372 samples, 1.43%)</title><rect x="47.5763%" y="565" width="1.4331%" height="15" fill="rgb(232,45,27)" fg:x="185324825" fg:w="5582372"/><text x="47.8263%" y="575.50"></text></g><g><title>X509_load_cert_crl_file_ex (5,582,372 samples, 1.43%)</title><rect x="47.5763%" y="549" width="1.4331%" height="15" fill="rgb(249,103,42)" fg:x="185324825" fg:w="5582372"/><text x="47.8263%" y="559.50"></text></g><g><title>PEM_X509_INFO_read_bio_ex (5,582,372 samples, 1.43%)</title><rect x="47.5763%" y="533" width="1.4331%" height="15" fill="rgb(246,81,33)" fg:x="185324825" fg:w="5582372"/><text x="47.8263%" y="543.50"></text></g><g><title>d2i_X509_AUX (3,144,699 samples, 0.81%)</title><rect x="48.2021%" y="517" width="0.8073%" height="15" fill="rgb(252,33,42)" fg:x="187762498" fg:w="3144699"/><text x="48.4521%" y="527.50"></text></g><g><title>ASN1_item_d2i_ex (3,144,699 samples, 0.81%)</title><rect x="48.2021%" y="501" width="0.8073%" height="15" fill="rgb(209,212,41)" fg:x="187762498" fg:w="3144699"/><text x="48.4521%" y="511.50"></text></g><g><title>asn1_item_embed_d2i (3,144,699 samples, 0.81%)</title><rect x="48.2021%" y="485" width="0.8073%" height="15" fill="rgb(207,154,6)" fg:x="187762498" fg:w="3144699"/><text x="48.4521%" y="495.50"></text></g><g><title>asn1_template_noexp_d2i (3,144,699 samples, 0.81%)</title><rect x="48.2021%" y="469" width="0.8073%" height="15" fill="rgb(223,64,47)" fg:x="187762498" fg:w="3144699"/><text x="48.4521%" y="479.50"></text></g><g><title>asn1_item_embed_d2i (3,144,699 samples, 0.81%)</title><rect x="48.2021%" y="453" width="0.8073%" height="15" fill="rgb(211,161,38)" fg:x="187762498" fg:w="3144699"/><text x="48.4521%" y="463.50"></text></g><g><title>asn1_template_noexp_d2i (3,144,699 samples, 0.81%)</title><rect x="48.2021%" y="437" width="0.8073%" height="15" fill="rgb(219,138,40)" fg:x="187762498" fg:w="3144699"/><text x="48.4521%" y="447.50"></text></g><g><title>asn1_item_embed_d2i (3,144,699 samples, 0.81%)</title><rect x="48.2021%" y="421" width="0.8073%" height="15" fill="rgb(241,228,46)" fg:x="187762498" fg:w="3144699"/><text x="48.4521%" y="431.50"></text></g><g><title>x509_pubkey_ex_d2i_ex (3,144,699 samples, 0.81%)</title><rect x="48.2021%" y="405" width="0.8073%" height="15" fill="rgb(223,209,38)" fg:x="187762498" fg:w="3144699"/><text x="48.4521%" y="415.50"></text></g><g><title>OSSL_DECODER_from_data (3,144,699 samples, 0.81%)</title><rect x="48.2021%" y="389" width="0.8073%" height="15" fill="rgb(236,164,45)" fg:x="187762498" fg:w="3144699"/><text x="48.4521%" y="399.50"></text></g><g><title>OSSL_DECODER_from_bio (3,144,699 samples, 0.81%)</title><rect x="48.2021%" y="373" width="0.8073%" height="15" fill="rgb(231,15,5)" fg:x="187762498" fg:w="3144699"/><text x="48.4521%" y="383.50"></text></g><g><title>decoder_process (3,144,699 samples, 0.81%)</title><rect x="48.2021%" y="357" width="0.8073%" height="15" fill="rgb(252,35,15)" fg:x="187762498" fg:w="3144699"/><text x="48.4521%" y="367.50"></text></g><g><title>spki2typespki_decode (3,144,699 samples, 0.81%)</title><rect x="48.2021%" y="341" width="0.8073%" height="15" fill="rgb(248,181,18)" fg:x="187762498" fg:w="3144699"/><text x="48.4521%" y="351.50"></text></g><g><title>decoder_process (3,144,699 samples, 0.81%)</title><rect x="48.2021%" y="325" width="0.8073%" height="15" fill="rgb(233,39,42)" fg:x="187762498" fg:w="3144699"/><text x="48.4521%" y="335.50"></text></g><g><title>der2key_decode (3,144,699 samples, 0.81%)</title><rect x="48.2021%" y="309" width="0.8073%" height="15" fill="rgb(238,110,33)" fg:x="187762498" fg:w="3144699"/><text x="48.4521%" y="319.50"></text></g><g><title>d2i_EC_PUBKEY (3,144,699 samples, 0.81%)</title><rect x="48.2021%" y="293" width="0.8073%" height="15" fill="rgb(233,195,10)" fg:x="187762498" fg:w="3144699"/><text x="48.4521%" y="303.50"></text></g><g><title>ossl_d2i_PUBKEY_legacy (3,144,699 samples, 0.81%)</title><rect x="48.2021%" y="277" width="0.8073%" height="15" fill="rgb(254,105,3)" fg:x="187762498" fg:w="3144699"/><text x="48.4521%" y="287.50"></text></g><g><title>ASN1_item_d2i_ex (3,144,699 samples, 0.81%)</title><rect x="48.2021%" y="261" width="0.8073%" height="15" fill="rgb(221,225,9)" fg:x="187762498" fg:w="3144699"/><text x="48.4521%" y="271.50"></text></g><g><title>asn1_item_embed_d2i (3,144,699 samples, 0.81%)</title><rect x="48.2021%" y="245" width="0.8073%" height="15" fill="rgb(224,227,45)" fg:x="187762498" fg:w="3144699"/><text x="48.4521%" y="255.50"></text></g><g><title>x509_pubkey_ex_d2i_ex (3,144,699 samples, 0.81%)</title><rect x="48.2021%" y="229" width="0.8073%" height="15" fill="rgb(229,198,43)" fg:x="187762498" fg:w="3144699"/><text x="48.4521%" y="239.50"></text></g><g><title>x509_pubkey_decode (3,144,699 samples, 0.81%)</title><rect x="48.2021%" y="213" width="0.8073%" height="15" fill="rgb(206,209,35)" fg:x="187762498" fg:w="3144699"/><text x="48.4521%" y="223.50"></text></g><g><title>eckey_pub_decode (3,144,699 samples, 0.81%)</title><rect x="48.2021%" y="197" width="0.8073%" height="15" fill="rgb(245,195,53)" fg:x="187762498" fg:w="3144699"/><text x="48.4521%" y="207.50"></text></g><g><title>ossl_ec_key_param_from_x509_algor (3,144,699 samples, 0.81%)</title><rect x="48.2021%" y="181" width="0.8073%" height="15" fill="rgb(240,92,26)" fg:x="187762498" fg:w="3144699"/><text x="48.4521%" y="191.50"></text></g><g><title>EC_GROUP_new_by_curve_name_ex (3,144,699 samples, 0.81%)</title><rect x="48.2021%" y="165" width="0.8073%" height="15" fill="rgb(207,40,23)" fg:x="187762498" fg:w="3144699"/><text x="48.4521%" y="175.50"></text></g><g><title>EC_GROUP_new_curve_GFp (3,144,699 samples, 0.81%)</title><rect x="48.2021%" y="149" width="0.8073%" height="15" fill="rgb(223,111,35)" fg:x="187762498" fg:w="3144699"/><text x="48.4521%" y="159.50"></text></g><g><title>ossl_ec_GFp_mont_group_set_curve (3,144,699 samples, 0.81%)</title><rect x="48.2021%" y="133" width="0.8073%" height="15" fill="rgb(229,147,28)" fg:x="187762498" fg:w="3144699"/><text x="48.4521%" y="143.50"></text></g><g><title>BN_MONT_CTX_set (3,144,699 samples, 0.81%)</title><rect x="48.2021%" y="117" width="0.8073%" height="15" fill="rgb(211,29,28)" fg:x="187762498" fg:w="3144699"/><text x="48.4521%" y="127.50"></text></g><g><title>BN_div (3,144,699 samples, 0.81%)</title><rect x="48.2021%" y="101" width="0.8073%" height="15" fill="rgb(228,72,33)" fg:x="187762498" fg:w="3144699"/><text x="48.4521%" y="111.50"></text></g><g><title>bn_div_fixed_top (3,144,699 samples, 0.81%)</title><rect x="48.2021%" y="85" width="0.8073%" height="15" fill="rgb(205,214,31)" fg:x="187762498" fg:w="3144699"/><text x="48.4521%" y="95.50"></text></g><g><title>BN_copy (3,144,699 samples, 0.81%)</title><rect x="48.2021%" y="69" width="0.8073%" height="15" fill="rgb(224,111,15)" fg:x="187762498" fg:w="3144699"/><text x="48.4521%" y="79.50"></text></g><g><title>bn_expand2 (3,144,699 samples, 0.81%)</title><rect x="48.2021%" y="53" width="0.8073%" height="15" fill="rgb(253,21,26)" fg:x="187762498" fg:w="3144699"/><text x="48.4521%" y="63.50"></text></g><g><title>CRYPTO_zalloc (3,144,699 samples, 0.81%)</title><rect x="48.2021%" y="37" width="0.8073%" height="15" fill="rgb(245,139,43)" fg:x="187762498" fg:w="3144699"/><text x="48.4521%" y="47.50"></text></g><g><title>cargo::core::resolver::activate_deps_loop (2,077,176 samples, 0.53%)</title><rect x="49.0094%" y="693" width="0.5332%" height="15" fill="rgb(252,170,7)" fg:x="190907197" fg:w="2077176"/><text x="49.2594%" y="703.50"></text></g><g><title>cargo::core::resolver::activate (2,077,176 samples, 0.53%)</title><rect x="49.0094%" y="677" width="0.5332%" height="15" fill="rgb(231,118,14)" fg:x="190907197" fg:w="2077176"/><text x="49.2594%" y="687.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::make_mut (2,077,176 samples, 0.53%)</title><rect x="49.0094%" y="661" width="0.5332%" height="15" fill="rgb(238,83,0)" fg:x="190907197" fg:w="2077176"/><text x="49.2594%" y="671.50"></text></g><g><title>cargo::ops::resolve::resolve_with_previous (4,237,570 samples, 1.09%)</title><rect x="49.0094%" y="725" width="1.0879%" height="15" fill="rgb(221,39,39)" fg:x="190907197" fg:w="4237570"/><text x="49.2594%" y="735.50"></text></g><g><title>cargo::core::resolver::resolve (4,237,570 samples, 1.09%)</title><rect x="49.0094%" y="709" width="1.0879%" height="15" fill="rgb(222,119,46)" fg:x="190907197" fg:w="4237570"/><text x="49.2594%" y="719.50"></text></g><g><title>im_rc::ord::map::Entry&lt;K,V&gt;::or_insert_with (2,160,394 samples, 0.55%)</title><rect x="49.5426%" y="693" width="0.5546%" height="15" fill="rgb(222,165,49)" fg:x="192984373" fg:w="2160394"/><text x="49.7926%" y="703.50"></text></g><g><title>im_rc::nodes::btree::Node&lt;A&gt;::lookup_mut (2,160,394 samples, 0.55%)</title><rect x="49.5426%" y="677" width="0.5546%" height="15" fill="rgb(219,113,52)" fg:x="192984373" fg:w="2160394"/><text x="49.7926%" y="687.50"></text></g><g><title>im_rc::ord::map::&lt;impl im_rc::nodes::btree::BTreeValue for (K,V)&gt;::search_key (2,160,394 samples, 0.55%)</title><rect x="49.5426%" y="661" width="0.5546%" height="15" fill="rgb(214,7,15)" fg:x="192984373" fg:w="2160394"/><text x="49.7926%" y="671.50"></text></g><g><title>semver::impls::&lt;impl core::cmp::Ord for semver::BuildMetadata&gt;::cmp (2,160,394 samples, 0.55%)</title><rect x="49.5426%" y="645" width="0.5546%" height="15" fill="rgb(235,32,4)" fg:x="192984373" fg:w="2160394"/><text x="49.7926%" y="655.50"></text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next (2,160,394 samples, 0.55%)</title><rect x="49.5426%" y="629" width="0.5546%" height="15" fill="rgb(238,90,54)" fg:x="192984373" fg:w="2160394"/><text x="49.7926%" y="639.50"></text></g><g><title>cargo::ops::resolve::resolve_ws_with_opts (3,549,569 samples, 0.91%)</title><rect x="50.0972%" y="725" width="0.9112%" height="15" fill="rgb(213,208,19)" fg:x="195144767" fg:w="3549569"/><text x="50.3472%" y="735.50"></text></g><g><title>_ZN5cargo3ops7resolve21resolve_with_registry17h15aaf12c47a16657E.llvm.2219623679986394725 (3,549,569 samples, 0.91%)</title><rect x="50.0972%" y="709" width="0.9112%" height="15" fill="rgb(233,156,4)" fg:x="195144767" fg:w="3549569"/><text x="50.3472%" y="719.50"></text></g><g><title>cargo::ops::lockfile::load_pkg_lockfile (3,549,569 samples, 0.91%)</title><rect x="50.0972%" y="693" width="0.9112%" height="15" fill="rgb(207,194,5)" fg:x="195144767" fg:w="3549569"/><text x="50.3472%" y="703.50"></text></g><g><title>&lt;toml::de::Deserializer as serde::de::Deserializer&gt;::deserialize_struct (3,549,569 samples, 0.91%)</title><rect x="50.0972%" y="677" width="0.9112%" height="15" fill="rgb(206,111,30)" fg:x="195144767" fg:w="3549569"/><text x="50.3472%" y="687.50"></text></g><g><title>&lt;toml_edit::de::Deserializer&lt;S&gt; as serde::de::Deserializer&gt;::deserialize_struct (3,549,569 samples, 0.91%)</title><rect x="50.0972%" y="661" width="0.9112%" height="15" fill="rgb(243,70,54)" fg:x="195144767" fg:w="3549569"/><text x="50.3472%" y="671.50"></text></g><g><title>&lt;toml_edit::de::table::TableDeserializer as serde::de::Deserializer&gt;::deserialize_any (3,549,569 samples, 0.91%)</title><rect x="50.0972%" y="645" width="0.9112%" height="15" fill="rgb(242,28,8)" fg:x="195144767" fg:w="3549569"/><text x="50.3472%" y="655.50"></text></g><g><title>&lt;toml_edit::de::value::ValueDeserializer as serde::de::Deserializer&gt;::deserialize_option (3,549,569 samples, 0.91%)</title><rect x="50.0972%" y="629" width="0.9112%" height="15" fill="rgb(219,106,18)" fg:x="195144767" fg:w="3549569"/><text x="50.3472%" y="639.50"></text></g><g><title>&lt;toml_edit::de::value::ValueDeserializer as serde::de::Deserializer&gt;::deserialize_any (3,549,569 samples, 0.91%)</title><rect x="50.0972%" y="613" width="0.9112%" height="15" fill="rgb(244,222,10)" fg:x="195144767" fg:w="3549569"/><text x="50.3472%" y="623.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (3,549,569 samples, 0.91%)</title><rect x="50.0972%" y="597" width="0.9112%" height="15" fill="rgb(236,179,52)" fg:x="195144767" fg:w="3549569"/><text x="50.3472%" y="607.50"></text></g><g><title>&lt;toml_edit::de::value::ValueDeserializer as serde::de::Deserializer&gt;::deserialize_struct (3,549,569 samples, 0.91%)</title><rect x="50.0972%" y="581" width="0.9112%" height="15" fill="rgb(213,23,39)" fg:x="195144767" fg:w="3549569"/><text x="50.3472%" y="591.50"></text></g><g><title>&lt;toml_edit::de::table::TableDeserializer as serde::de::Deserializer&gt;::deserialize_any (3,549,569 samples, 0.91%)</title><rect x="50.0972%" y="565" width="0.9112%" height="15" fill="rgb(238,48,10)" fg:x="195144767" fg:w="3549569"/><text x="50.3472%" y="575.50"></text></g><g><title>&lt;toml_edit::de::table::TableMapAccess as serde::de::MapAccess&gt;::next_value_seed (3,549,569 samples, 0.91%)</title><rect x="50.0972%" y="549" width="0.9112%" height="15" fill="rgb(251,196,23)" fg:x="195144767" fg:w="3549569"/><text x="50.3472%" y="559.50"></text></g><g><title>_ZN4core3ptr40drop_in_place$LT$toml_edit..key..Key$GT$17hf8b2e43c02e9b17eE.llvm.10261705501845221505 (3,549,569 samples, 0.91%)</title><rect x="50.0972%" y="533" width="0.9112%" height="15" fill="rgb(250,152,24)" fg:x="195144767" fg:w="3549569"/><text x="50.3472%" y="543.50"></text></g><g><title>__rdl_dealloc (3,549,569 samples, 0.91%)</title><rect x="50.0972%" y="517" width="0.9112%" height="15" fill="rgb(209,150,17)" fg:x="195144767" fg:w="3549569"/><text x="50.3472%" y="527.50"></text></g><g><title>__memcmp_avx2_movbe (2,435,419 samples, 0.63%)</title><rect x="51.0085%" y="597" width="0.6252%" height="15" fill="rgb(234,202,34)" fg:x="198694336" fg:w="2435419"/><text x="51.2585%" y="607.50"></text></g><g><title>&lt;toml_edit::de::value::ValueDeserializer as serde::de::Deserializer&gt;::deserialize_any (11,033,880 samples, 2.83%)</title><rect x="51.0085%" y="645" width="2.8326%" height="15" fill="rgb(253,148,53)" fg:x="198694336" fg:w="11033880"/><text x="51.2585%" y="655.50">&lt;t..</text></g><g><title>&lt;serde_ignored::Wrap&lt;X,F&gt; as serde::de::Visitor&gt;::visit_map (11,033,880 samples, 2.83%)</title><rect x="51.0085%" y="629" width="2.8326%" height="15" fill="rgb(218,129,16)" fg:x="198694336" fg:w="11033880"/><text x="51.2585%" y="639.50">&lt;s..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (11,033,880 samples, 2.83%)</title><rect x="51.0085%" y="613" width="2.8326%" height="15" fill="rgb(216,85,19)" fg:x="198694336" fg:w="11033880"/><text x="51.2585%" y="623.50">al..</text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (8,598,461 samples, 2.21%)</title><rect x="51.6337%" y="597" width="2.2074%" height="15" fill="rgb(235,228,7)" fg:x="201129755" fg:w="8598461"/><text x="51.8837%" y="607.50">a..</text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::KV&gt;::split (2,699,910 samples, 0.69%)</title><rect x="53.1479%" y="581" width="0.6931%" height="15" fill="rgb(245,175,0)" fg:x="207028306" fg:w="2699910"/><text x="53.3979%" y="591.50"></text></g><g><title>malloc (2,699,910 samples, 0.69%)</title><rect x="53.1479%" y="565" width="0.6931%" height="15" fill="rgb(208,168,36)" fg:x="207028306" fg:w="2699910"/><text x="53.3979%" y="575.50"></text></g><g><title>_int_malloc (2,699,910 samples, 0.69%)</title><rect x="53.1479%" y="549" width="0.6931%" height="15" fill="rgb(246,171,24)" fg:x="207028306" fg:w="2699910"/><text x="53.3979%" y="559.50"></text></g><g><title>[unknown] (2,699,910 samples, 0.69%)</title><rect x="53.1479%" y="533" width="0.6931%" height="15" fill="rgb(215,142,24)" fg:x="207028306" fg:w="2699910"/><text x="53.3979%" y="543.50"></text></g><g><title>&lt;toml_edit::de::Deserializer&lt;S&gt; as serde::de::Deserializer&gt;::deserialize_struct (13,526,486 samples, 3.47%)</title><rect x="51.0085%" y="709" width="3.4725%" height="15" fill="rgb(250,187,7)" fg:x="198694336" fg:w="13526486"/><text x="51.2585%" y="719.50">&lt;to..</text></g><g><title>&lt;serde_ignored::Wrap&lt;X,F&gt; as serde::de::Visitor&gt;::visit_map (13,526,486 samples, 3.47%)</title><rect x="51.0085%" y="693" width="3.4725%" height="15" fill="rgb(228,66,33)" fg:x="198694336" fg:w="13526486"/><text x="51.2585%" y="703.50">&lt;se..</text></g><g><title>&lt;toml_edit::de::table::TableMapAccess as serde::de::MapAccess&gt;::next_value_seed (13,526,486 samples, 3.47%)</title><rect x="51.0085%" y="677" width="3.4725%" height="15" fill="rgb(234,215,21)" fg:x="198694336" fg:w="13526486"/><text x="51.2585%" y="687.50">&lt;to..</text></g><g><title>&lt;toml_edit::de::value::ValueDeserializer as serde::de::Deserializer&gt;::deserialize_option (13,526,486 samples, 3.47%)</title><rect x="51.0085%" y="661" width="3.4725%" height="15" fill="rgb(222,191,20)" fg:x="198694336" fg:w="13526486"/><text x="51.2585%" y="671.50">&lt;to..</text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::boxed::Box&lt;T&gt;&gt;::deserialize (2,492,606 samples, 0.64%)</title><rect x="53.8411%" y="645" width="0.6399%" height="15" fill="rgb(245,79,54)" fg:x="209728216" fg:w="2492606"/><text x="54.0911%" y="655.50"></text></g><g><title>&lt;toml_edit::de::value::ValueDeserializer as serde::de::Deserializer&gt;::deserialize_struct (2,492,606 samples, 0.64%)</title><rect x="53.8411%" y="629" width="0.6399%" height="15" fill="rgb(240,10,37)" fg:x="209728216" fg:w="2492606"/><text x="54.0911%" y="639.50"></text></g><g><title>_ZN189_$LT$cargo_util_schemas..manifest.._..$LT$impl$u20$serde..de..Deserialize$u20$for$u20$cargo_util_schemas..manifest..TomlPackage$GT$..deserialize..__Visitor$u20$as$u20$serde..de..Visitor$GT$9visit_map17h1461f9c76e41c9e2E.llvm.12570498106867794895 (2,492,606 samples, 0.64%)</title><rect x="53.8411%" y="613" width="0.6399%" height="15" fill="rgb(214,192,32)" fg:x="209728216" fg:w="2492606"/><text x="54.0911%" y="623.50"></text></g><g><title>&lt;toml_edit::de::table::TableMapAccess as serde::de::MapAccess&gt;::next_value_seed (2,492,606 samples, 0.64%)</title><rect x="53.8411%" y="597" width="0.6399%" height="15" fill="rgb(209,36,54)" fg:x="209728216" fg:w="2492606"/><text x="54.0911%" y="607.50"></text></g><g><title>&lt;toml_edit::item::Item as core::clone::Clone&gt;::clone (2,843,529 samples, 0.73%)</title><rect x="54.4810%" y="549" width="0.7300%" height="15" fill="rgb(220,10,11)" fg:x="212220822" fg:w="2843529"/><text x="54.7310%" y="559.50"></text></g><g><title>&lt;indexmap::map::core::IndexMapCore&lt;K,V&gt; as core::clone::Clone&gt;::clone (2,843,529 samples, 0.73%)</title><rect x="54.4810%" y="533" width="0.7300%" height="15" fill="rgb(221,106,17)" fg:x="212220822" fg:w="2843529"/><text x="54.7310%" y="543.50"></text></g><g><title>&lt;[T] as alloc::slice::SpecCloneIntoVec&lt;T,A&gt;&gt;::clone_into (2,843,529 samples, 0.73%)</title><rect x="54.4810%" y="517" width="0.7300%" height="15" fill="rgb(251,142,44)" fg:x="212220822" fg:w="2843529"/><text x="54.7310%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,843,529 samples, 0.73%)</title><rect x="54.4810%" y="501" width="0.7300%" height="15" fill="rgb(238,13,15)" fg:x="212220822" fg:w="2843529"/><text x="54.7310%" y="511.50"></text></g><g><title>&lt;indexmap::Bucket&lt;K,V&gt; as core::clone::Clone&gt;::clone (2,843,529 samples, 0.73%)</title><rect x="54.4810%" y="485" width="0.7300%" height="15" fill="rgb(208,107,27)" fg:x="212220822" fg:w="2843529"/><text x="54.7310%" y="495.50"></text></g><g><title>&lt;toml_edit::key::Key as core::clone::Clone&gt;::clone (2,843,529 samples, 0.73%)</title><rect x="54.4810%" y="469" width="0.7300%" height="15" fill="rgb(205,136,37)" fg:x="212220822" fg:w="2843529"/><text x="54.7310%" y="479.50"></text></g><g><title>&lt;toml_edit::key::Key as core::clone::Clone&gt;::clone (2,673,524 samples, 0.69%)</title><rect x="55.2109%" y="549" width="0.6863%" height="15" fill="rgb(250,205,27)" fg:x="215064351" fg:w="2673524"/><text x="55.4609%" y="559.50"></text></g><g><title>&lt;toml_edit::item::Item as core::clone::Clone&gt;::clone (8,046,150 samples, 2.07%)</title><rect x="54.4810%" y="709" width="2.0656%" height="15" fill="rgb(210,80,43)" fg:x="212220822" fg:w="8046150"/><text x="54.7310%" y="719.50">&lt;..</text></g><g><title>&lt;indexmap::map::core::IndexMapCore&lt;K,V&gt; as core::clone::Clone&gt;::clone (8,046,150 samples, 2.07%)</title><rect x="54.4810%" y="693" width="2.0656%" height="15" fill="rgb(247,160,36)" fg:x="212220822" fg:w="8046150"/><text x="54.7310%" y="703.50">&lt;..</text></g><g><title>&lt;[T] as alloc::slice::SpecCloneIntoVec&lt;T,A&gt;&gt;::clone_into (8,046,150 samples, 2.07%)</title><rect x="54.4810%" y="677" width="2.0656%" height="15" fill="rgb(234,13,49)" fg:x="212220822" fg:w="8046150"/><text x="54.7310%" y="687.50">&lt;..</text></g><g><title>&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (8,046,150 samples, 2.07%)</title><rect x="54.4810%" y="661" width="2.0656%" height="15" fill="rgb(234,122,0)" fg:x="212220822" fg:w="8046150"/><text x="54.7310%" y="671.50">&lt;..</text></g><g><title>&lt;indexmap::Bucket&lt;K,V&gt; as core::clone::Clone&gt;::clone (8,046,150 samples, 2.07%)</title><rect x="54.4810%" y="645" width="2.0656%" height="15" fill="rgb(207,146,38)" fg:x="212220822" fg:w="8046150"/><text x="54.7310%" y="655.50">&lt;..</text></g><g><title>&lt;toml_edit::item::Item as core::clone::Clone&gt;::clone (8,046,150 samples, 2.07%)</title><rect x="54.4810%" y="629" width="2.0656%" height="15" fill="rgb(207,177,25)" fg:x="212220822" fg:w="8046150"/><text x="54.7310%" y="639.50">&lt;..</text></g><g><title>&lt;indexmap::map::core::IndexMapCore&lt;K,V&gt; as core::clone::Clone&gt;::clone (8,046,150 samples, 2.07%)</title><rect x="54.4810%" y="613" width="2.0656%" height="15" fill="rgb(211,178,42)" fg:x="212220822" fg:w="8046150"/><text x="54.7310%" y="623.50">&lt;..</text></g><g><title>&lt;[T] as alloc::slice::SpecCloneIntoVec&lt;T,A&gt;&gt;::clone_into (8,046,150 samples, 2.07%)</title><rect x="54.4810%" y="597" width="2.0656%" height="15" fill="rgb(230,69,54)" fg:x="212220822" fg:w="8046150"/><text x="54.7310%" y="607.50">&lt;..</text></g><g><title>&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (8,046,150 samples, 2.07%)</title><rect x="54.4810%" y="581" width="2.0656%" height="15" fill="rgb(214,135,41)" fg:x="212220822" fg:w="8046150"/><text x="54.7310%" y="591.50">&lt;..</text></g><g><title>&lt;indexmap::Bucket&lt;K,V&gt; as core::clone::Clone&gt;::clone (8,046,150 samples, 2.07%)</title><rect x="54.4810%" y="565" width="2.0656%" height="15" fill="rgb(237,67,25)" fg:x="212220822" fg:w="8046150"/><text x="54.7310%" y="575.50">&lt;..</text></g><g><title>__memmove_avx_unaligned_erms (2,529,097 samples, 0.65%)</title><rect x="55.8973%" y="549" width="0.6493%" height="15" fill="rgb(222,189,50)" fg:x="217737875" fg:w="2529097"/><text x="56.1473%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,586,051 samples, 0.66%)</title><rect x="56.5466%" y="693" width="0.6639%" height="15" fill="rgb(245,148,34)" fg:x="220266972" fg:w="2586051"/><text x="56.7966%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,586,051 samples, 0.66%)</title><rect x="56.5466%" y="677" width="0.6639%" height="15" fill="rgb(222,29,6)" fg:x="220266972" fg:w="2586051"/><text x="56.7966%" y="687.50"></text></g><g><title>_ZN96_$LT$alloc..collections..btree..map..BTreeMap$LT$K$C$V$C$A$GT$$u20$as$u20$core..clone..Clone$GT$5clone13clone_subtree17h39db3839fa8703efE.llvm.66316692854318981 (2,721,851 samples, 0.70%)</title><rect x="57.2104%" y="693" width="0.6987%" height="15" fill="rgb(221,189,43)" fg:x="222853023" fg:w="2721851"/><text x="57.4604%" y="703.50"></text></g><g><title>malloc (2,721,851 samples, 0.70%)</title><rect x="57.2104%" y="677" width="0.6987%" height="15" fill="rgb(207,36,27)" fg:x="222853023" fg:w="2721851"/><text x="57.4604%" y="687.50"></text></g><g><title>_int_malloc (2,721,851 samples, 0.70%)</title><rect x="57.2104%" y="661" width="0.6987%" height="15" fill="rgb(217,90,24)" fg:x="222853023" fg:w="2721851"/><text x="57.4604%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2,538,028 samples, 0.65%)</title><rect x="57.9092%" y="645" width="0.6516%" height="15" fill="rgb(224,66,35)" fg:x="225574874" fg:w="2538028"/><text x="58.1592%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,538,028 samples, 0.65%)</title><rect x="57.9092%" y="629" width="0.6516%" height="15" fill="rgb(221,13,50)" fg:x="225574874" fg:w="2538028"/><text x="58.1592%" y="639.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (2,538,028 samples, 0.65%)</title><rect x="57.9092%" y="613" width="0.6516%" height="15" fill="rgb(236,68,49)" fg:x="225574874" fg:w="2538028"/><text x="58.1592%" y="623.50"></text></g><g><title>std::path::Path::_strip_prefix (2,538,028 samples, 0.65%)</title><rect x="57.9092%" y="597" width="0.6516%" height="15" fill="rgb(229,146,28)" fg:x="225574874" fg:w="2538028"/><text x="58.1592%" y="607.50"></text></g><g><title>cargo::util::toml::targets::normalize_tests::_{{closure}} (5,090,605 samples, 1.31%)</title><rect x="57.9092%" y="661" width="1.3069%" height="15" fill="rgb(225,31,38)" fg:x="225574874" fg:w="5090605"/><text x="58.1592%" y="671.50"></text></g><g><title>std::sys::pal::unix::fs::readdir (2,552,577 samples, 0.66%)</title><rect x="58.5607%" y="645" width="0.6553%" height="15" fill="rgb(250,208,3)" fg:x="228112902" fg:w="2552577"/><text x="58.8107%" y="655.50"></text></g><g><title>opendir_tail (2,552,577 samples, 0.66%)</title><rect x="58.5607%" y="629" width="0.6553%" height="15" fill="rgb(246,54,23)" fg:x="228112902" fg:w="2552577"/><text x="58.8107%" y="639.50"></text></g><g><title>__alloc_dir (2,552,577 samples, 0.66%)</title><rect x="58.5607%" y="613" width="0.6553%" height="15" fill="rgb(243,76,11)" fg:x="228112902" fg:w="2552577"/><text x="58.8107%" y="623.50"></text></g><g><title>malloc (2,552,577 samples, 0.66%)</title><rect x="58.5607%" y="597" width="0.6553%" height="15" fill="rgb(245,21,50)" fg:x="228112902" fg:w="2552577"/><text x="58.8107%" y="607.50"></text></g><g><title>_int_malloc (2,552,577 samples, 0.66%)</title><rect x="58.5607%" y="581" width="0.6553%" height="15" fill="rgb(228,9,43)" fg:x="228112902" fg:w="2552577"/><text x="58.8107%" y="591.50"></text></g><g><title>[unknown] (2,552,577 samples, 0.66%)</title><rect x="58.5607%" y="565" width="0.6553%" height="15" fill="rgb(208,100,47)" fg:x="228112902" fg:w="2552577"/><text x="58.8107%" y="575.50"></text></g><g><title>[unknown] (2,552,577 samples, 0.66%)</title><rect x="58.5607%" y="549" width="0.6553%" height="15" fill="rgb(232,26,8)" fg:x="228112902" fg:w="2552577"/><text x="58.8107%" y="559.50"></text></g><g><title>[unknown] (2,552,577 samples, 0.66%)</title><rect x="58.5607%" y="533" width="0.6553%" height="15" fill="rgb(216,166,38)" fg:x="228112902" fg:w="2552577"/><text x="58.8107%" y="543.50"></text></g><g><title>cargo::util::toml::targets::normalize_tests (7,562,734 samples, 1.94%)</title><rect x="57.9092%" y="693" width="1.9415%" height="15" fill="rgb(251,202,51)" fg:x="225574874" fg:w="7562734"/><text x="58.1592%" y="703.50">c..</text></g><g><title>cargo::util::toml::targets::normalize_targets_with_legacy_path (7,562,734 samples, 1.94%)</title><rect x="57.9092%" y="677" width="1.9415%" height="15" fill="rgb(254,216,34)" fg:x="225574874" fg:w="7562734"/><text x="58.1592%" y="687.50">c..</text></g><g><title>cargo::util::toml::targets::toml_targets_and_inferred (2,472,129 samples, 0.63%)</title><rect x="59.2160%" y="661" width="0.6346%" height="15" fill="rgb(251,32,27)" fg:x="230665479" fg:w="2472129"/><text x="59.4660%" y="671.50"></text></g><g><title>_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$20sort_unstable_by_key28_$u7b$$u7b$closure$u7d$$u7d$17hcbbf9cd5ceb64088E.llvm.3331091486652241122 (2,472,129 samples, 0.63%)</title><rect x="59.2160%" y="645" width="0.6346%" height="15" fill="rgb(208,127,28)" fg:x="230665479" fg:w="2472129"/><text x="59.4660%" y="655.50"></text></g><g><title>cfree@GLIBC_2.2.5 (2,472,129 samples, 0.63%)</title><rect x="59.2160%" y="629" width="0.6346%" height="15" fill="rgb(224,137,22)" fg:x="230665479" fg:w="2472129"/><text x="59.4660%" y="639.50"></text></g><g><title>_int_free (2,472,129 samples, 0.63%)</title><rect x="59.2160%" y="613" width="0.6346%" height="15" fill="rgb(254,70,32)" fg:x="230665479" fg:w="2472129"/><text x="59.4660%" y="623.50"></text></g><g><title>cargo::util::toml::normalize_toml (16,140,092 samples, 4.14%)</title><rect x="56.5466%" y="709" width="4.1435%" height="15" fill="rgb(229,75,37)" fg:x="220266972" fg:w="16140092"/><text x="56.7966%" y="719.50">cargo..</text></g><g><title>cargo::util::toml::targets::validate_proc_macro (3,269,456 samples, 0.84%)</title><rect x="59.8507%" y="693" width="0.8393%" height="15" fill="rgb(252,64,23)" fg:x="233137608" fg:w="3269456"/><text x="60.1007%" y="703.50"></text></g><g><title>cargo::util::toml::deprecated_underscore (3,269,456 samples, 0.84%)</title><rect x="59.8507%" y="677" width="0.8393%" height="15" fill="rgb(232,162,48)" fg:x="233137608" fg:w="3269456"/><text x="60.1007%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,488,045 samples, 0.64%)</title><rect x="60.6900%" y="693" width="0.6387%" height="15" fill="rgb(246,160,12)" fg:x="236407064" fg:w="2488045"/><text x="60.9400%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (2,449,080 samples, 0.63%)</title><rect x="61.3287%" y="693" width="0.6287%" height="15" fill="rgb(247,166,0)" fg:x="238895109" fg:w="2449080"/><text x="61.5787%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2,449,080 samples, 0.63%)</title><rect x="61.3287%" y="677" width="0.6287%" height="15" fill="rgb(249,219,21)" fg:x="238895109" fg:w="2449080"/><text x="61.5787%" y="687.50"></text></g><g><title>cargo::util::interning::InternedString::new (2,449,080 samples, 0.63%)</title><rect x="61.3287%" y="661" width="0.6287%" height="15" fill="rgb(205,209,3)" fg:x="238895109" fg:w="2449080"/><text x="61.5787%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,983,091 samples, 0.77%)</title><rect x="61.9575%" y="693" width="0.7658%" height="15" fill="rgb(243,44,1)" fg:x="241344189" fg:w="2983091"/><text x="62.2075%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2,983,091 samples, 0.77%)</title><rect x="61.9575%" y="677" width="0.7658%" height="15" fill="rgb(206,159,16)" fg:x="241344189" fg:w="2983091"/><text x="62.2075%" y="687.50"></text></g><g><title>cargo::util::toml::to_real_manifest (12,800,313 samples, 3.29%)</title><rect x="60.6900%" y="709" width="3.2861%" height="15" fill="rgb(244,77,30)" fg:x="236407064" fg:w="12800313"/><text x="60.9400%" y="719.50">car..</text></g><g><title>cargo::util::toml::validate_dependencies (4,880,097 samples, 1.25%)</title><rect x="62.7233%" y="693" width="1.2528%" height="15" fill="rgb(218,69,12)" fg:x="244327280" fg:w="4880097"/><text x="62.9733%" y="703.50"></text></g><g><title>&lt;cargo_platform::Platform as core::fmt::Display&gt;::fmt (4,880,097 samples, 1.25%)</title><rect x="62.7233%" y="677" width="1.2528%" height="15" fill="rgb(212,87,7)" fg:x="244327280" fg:w="4880097"/><text x="62.9733%" y="687.50"></text></g><g><title>core::fmt::write (4,880,097 samples, 1.25%)</title><rect x="62.7233%" y="661" width="1.2528%" height="15" fill="rgb(245,114,25)" fg:x="244327280" fg:w="4880097"/><text x="62.9733%" y="671.50"></text></g><g><title>&lt;cargo_platform::cfg::CfgExpr as core::fmt::Display&gt;::fmt (2,413,624 samples, 0.62%)</title><rect x="63.3565%" y="645" width="0.6196%" height="15" fill="rgb(210,61,42)" fg:x="246793753" fg:w="2413624"/><text x="63.6065%" y="655.50"></text></g><g><title>core::fmt::write (2,413,624 samples, 0.62%)</title><rect x="63.3565%" y="629" width="0.6196%" height="15" fill="rgb(211,52,33)" fg:x="246793753" fg:w="2413624"/><text x="63.6065%" y="639.50"></text></g><g><title>__memmove_avx_unaligned_erms (3,324,798 samples, 0.85%)</title><rect x="64.7002%" y="661" width="0.8535%" height="15" fill="rgb(234,58,33)" fg:x="252028081" fg:w="3324798"/><text x="64.9502%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (2,680,783 samples, 0.69%)</title><rect x="65.5537%" y="629" width="0.6882%" height="15" fill="rgb(220,115,36)" fg:x="255352879" fg:w="2680783"/><text x="65.8037%" y="639.50"></text></g><g><title>__memmove_avx_unaligned_erms (2,483,621 samples, 0.64%)</title><rect x="66.2420%" y="613" width="0.6376%" height="15" fill="rgb(243,153,54)" fg:x="258033662" fg:w="2483621"/><text x="66.4920%" y="623.50"></text></g><g><title>toml_edit::parser::key::key (7,684,666 samples, 1.97%)</title><rect x="65.5537%" y="661" width="1.9728%" height="15" fill="rgb(251,47,18)" fg:x="255352879" fg:w="7684666"/><text x="65.8037%" y="671.50">t..</text></g><g><title>winnow::combinator::multi::separated1_ (7,684,666 samples, 1.97%)</title><rect x="65.5537%" y="645" width="1.9728%" height="15" fill="rgb(242,102,42)" fg:x="255352879" fg:w="7684666"/><text x="65.8037%" y="655.50">w..</text></g><g><title>toml_edit::parser::key::simple_key (5,003,883 samples, 1.28%)</title><rect x="66.2420%" y="629" width="1.2846%" height="15" fill="rgb(234,31,38)" fg:x="258033662" fg:w="5003883"/><text x="66.4920%" y="639.50"></text></g><g><title>malloc (2,520,262 samples, 0.65%)</title><rect x="66.8795%" y="613" width="0.6470%" height="15" fill="rgb(221,117,51)" fg:x="260517283" fg:w="2520262"/><text x="67.1295%" y="623.50"></text></g><g><title>_int_malloc (2,520,262 samples, 0.65%)</title><rect x="66.8795%" y="597" width="0.6470%" height="15" fill="rgb(212,20,18)" fg:x="260517283" fg:w="2520262"/><text x="67.1295%" y="607.50"></text></g><g><title>&lt;(Alt2,Alt3,Alt4) as winnow::combinator::branch::Alt&lt;I,Output,Error&gt;&gt;::choice (2,514,570 samples, 0.65%)</title><rect x="67.5265%" y="645" width="0.6455%" height="15" fill="rgb(245,133,36)" fg:x="263037545" fg:w="2514570"/><text x="67.7765%" y="655.50"></text></g><g><title>&lt;(Alt2,Alt3) as winnow::combinator::branch::Alt&lt;I,Output,Error&gt;&gt;::choice (2,514,570 samples, 0.65%)</title><rect x="67.5265%" y="629" width="0.6455%" height="15" fill="rgb(212,6,19)" fg:x="263037545" fg:w="2514570"/><text x="67.7765%" y="639.50"></text></g><g><title>toml_edit::parser::numbers::float_ (2,514,570 samples, 0.65%)</title><rect x="67.5265%" y="613" width="0.6455%" height="15" fill="rgb(218,1,36)" fg:x="263037545" fg:w="2514570"/><text x="67.7765%" y="623.50"></text></g><g><title>&lt;(Alt2,Alt3) as winnow::combinator::branch::Alt&lt;I,Output,Error&gt;&gt;::choice (2,514,570 samples, 0.65%)</title><rect x="67.5265%" y="597" width="0.6455%" height="15" fill="rgb(246,84,54)" fg:x="263037545" fg:w="2514570"/><text x="67.7765%" y="607.50"></text></g><g><title>__memmove_avx_unaligned_erms (2,512,995 samples, 0.65%)</title><rect x="68.1721%" y="613" width="0.6451%" height="15" fill="rgb(242,110,6)" fg:x="265552115" fg:w="2512995"/><text x="68.4221%" y="623.50"></text></g><g><title>toml_edit::parser::array::array (7,755,302 samples, 1.99%)</title><rect x="68.1721%" y="645" width="1.9909%" height="15" fill="rgb(214,47,5)" fg:x="265552115" fg:w="7755302"/><text x="68.4221%" y="655.50">t..</text></g><g><title>winnow::combinator::multi::separated0_ (7,755,302 samples, 1.99%)</title><rect x="68.1721%" y="629" width="1.9909%" height="15" fill="rgb(218,159,25)" fg:x="265552115" fg:w="7755302"/><text x="68.4221%" y="639.50">w..</text></g><g><title>toml_edit::parser::array::array_value (5,242,307 samples, 1.35%)</title><rect x="68.8172%" y="613" width="1.3458%" height="15" fill="rgb(215,211,28)" fg:x="268065110" fg:w="5242307"/><text x="69.0672%" y="623.50"></text></g><g><title>toml_edit::parser::document::parse_keyval (29,183,106 samples, 7.49%)</title><rect x="63.9761%" y="677" width="7.4918%" height="15" fill="rgb(238,59,32)" fg:x="249207377" fg:w="29183106"/><text x="64.2261%" y="687.50">toml_edit:..</text></g><g><title>toml_edit::parser::value::value (15,352,938 samples, 3.94%)</title><rect x="67.5265%" y="661" width="3.9414%" height="15" fill="rgb(226,82,3)" fg:x="263037545" fg:w="15352938"/><text x="67.7765%" y="671.50">toml..</text></g><g><title>toml_edit::parser::strings::string (5,083,066 samples, 1.30%)</title><rect x="70.1630%" y="645" width="1.3049%" height="15" fill="rgb(240,164,32)" fg:x="273307417" fg:w="5083066"/><text x="70.4130%" y="655.50"></text></g><g><title>toml_edit::parser::strings::basic_string (5,083,066 samples, 1.30%)</title><rect x="70.1630%" y="629" width="1.3049%" height="15" fill="rgb(232,46,7)" fg:x="273307417" fg:w="5083066"/><text x="70.4130%" y="639.50"></text></g><g><title>&lt;(Alt2,Alt3) as winnow::combinator::branch::Alt&lt;I,Output,Error&gt;&gt;::choice (5,083,066 samples, 1.30%)</title><rect x="70.1630%" y="613" width="1.3049%" height="15" fill="rgb(229,129,53)" fg:x="273307417" fg:w="5083066"/><text x="70.4130%" y="623.50"></text></g><g><title>&lt;winnow::combinator::parser::Map&lt;F,G,I,O,O2,E&gt; as winnow::parser::Parser&lt;I,O2,E&gt;&gt;::parse_next (5,083,066 samples, 1.30%)</title><rect x="70.1630%" y="597" width="1.3049%" height="15" fill="rgb(234,188,29)" fg:x="273307417" fg:w="5083066"/><text x="70.4130%" y="607.50"></text></g><g><title>core::str::converts::from_utf8 (2,636,306 samples, 0.68%)</title><rect x="70.7911%" y="581" width="0.6768%" height="15" fill="rgb(246,141,4)" fg:x="275754177" fg:w="2636306"/><text x="71.0411%" y="591.50"></text></g><g><title>toml_edit::parser::state::ParseState::on_array_header (2,446,453 samples, 0.63%)</title><rect x="71.4679%" y="677" width="0.6280%" height="15" fill="rgb(229,23,39)" fg:x="278390483" fg:w="2446453"/><text x="71.7179%" y="687.50"></text></g><g><title>toml_edit::table::Table::entry_format (2,446,453 samples, 0.63%)</title><rect x="71.4679%" y="661" width="0.6280%" height="15" fill="rgb(206,12,3)" fg:x="278390483" fg:w="2446453"/><text x="71.7179%" y="671.50"></text></g><g><title>_ZN8indexmap3map25IndexMap$LT$K$C$V$C$S$GT$4hash17ha0555891fddd98c1E.llvm.10426018826759401253 (2,446,453 samples, 0.63%)</title><rect x="71.4679%" y="645" width="0.6280%" height="15" fill="rgb(252,226,20)" fg:x="278390483" fg:w="2446453"/><text x="71.7179%" y="655.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2,446,453 samples, 0.63%)</title><rect x="71.4679%" y="629" width="0.6280%" height="15" fill="rgb(216,123,35)" fg:x="278390483" fg:w="2446453"/><text x="71.7179%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2,567,914 samples, 0.66%)</title><rect x="72.0960%" y="661" width="0.6592%" height="15" fill="rgb(212,68,40)" fg:x="280836936" fg:w="2567914"/><text x="72.3460%" y="671.50"></text></g><g><title>malloc (2,567,914 samples, 0.66%)</title><rect x="72.0960%" y="645" width="0.6592%" height="15" fill="rgb(254,125,32)" fg:x="280836936" fg:w="2567914"/><text x="72.3460%" y="655.50"></text></g><g><title>_int_malloc (2,567,914 samples, 0.66%)</title><rect x="72.0960%" y="629" width="0.6592%" height="15" fill="rgb(253,97,22)" fg:x="280836936" fg:w="2567914"/><text x="72.3460%" y="639.50"></text></g><g><title>toml_edit::parser::state::ParseState::on_keyval (5,040,113 samples, 1.29%)</title><rect x="72.0960%" y="677" width="1.2939%" height="15" fill="rgb(241,101,14)" fg:x="280836936" fg:w="5040113"/><text x="72.3460%" y="687.50"></text></g><g><title>_ZN8indexmap3map25IndexMap$LT$K$C$V$C$S$GT$4hash17ha0555891fddd98c1E.llvm.10426018826759401253 (2,472,199 samples, 0.63%)</title><rect x="72.7552%" y="661" width="0.6347%" height="15" fill="rgb(238,103,29)" fg:x="283404850" fg:w="2472199"/><text x="73.0052%" y="671.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2,472,199 samples, 0.63%)</title><rect x="72.7552%" y="645" width="0.6347%" height="15" fill="rgb(233,195,47)" fg:x="283404850" fg:w="2472199"/><text x="73.0052%" y="655.50"></text></g><g><title>cargo::util::toml::read_manifest (89,842,500 samples, 23.06%)</title><rect x="51.0085%" y="725" width="23.0642%" height="15" fill="rgb(246,218,30)" fg:x="198694336" fg:w="89842500"/><text x="51.2585%" y="735.50">cargo::util::toml::read_manifest</text></g><g><title>toml_edit::parser::parse_document (39,329,459 samples, 10.10%)</title><rect x="63.9761%" y="709" width="10.0966%" height="15" fill="rgb(219,145,47)" fg:x="249207377" fg:w="39329459"/><text x="64.2261%" y="719.50">toml_edit::pars..</text></g><g><title>winnow::parser::Parser::parse (39,329,459 samples, 10.10%)</title><rect x="63.9761%" y="693" width="10.0966%" height="15" fill="rgb(243,12,26)" fg:x="249207377" fg:w="39329459"/><text x="64.2261%" y="703.50">winnow::parser:..</text></g><g><title>toml_edit::parser::trivia::comment (2,659,787 samples, 0.68%)</title><rect x="73.3899%" y="677" width="0.6828%" height="15" fill="rgb(214,87,16)" fg:x="285877049" fg:w="2659787"/><text x="73.6399%" y="687.50"></text></g><g><title>.cargo-wrapped (291,852,930 samples, 74.92%)</title><rect x="0.0000%" y="741" width="74.9240%" height="15" fill="rgb(208,99,42)" fg:x="0" fg:w="291852930"/><text x="0.2500%" y="751.50">.cargo-wrapped</text></g><g><title>std::rt::lang_start_internal (3,316,094 samples, 0.85%)</title><rect x="74.0727%" y="725" width="0.8513%" height="15" fill="rgb(253,99,2)" fg:x="288536836" fg:w="3316094"/><text x="74.3227%" y="735.50"></text></g><g><title>_ZN3std2rt10lang_start28_$u7b$$u7b$closure$u7d$$u7d$17h022acb3f23eb0f6aE.llvm.6692314159830505196 (3,316,094 samples, 0.85%)</title><rect x="74.0727%" y="709" width="0.8513%" height="15" fill="rgb(220,168,23)" fg:x="288536836" fg:w="3316094"/><text x="74.3227%" y="719.50"></text></g><g><title>std::sys::backtrace::__rust_begin_short_backtrace (3,316,094 samples, 0.85%)</title><rect x="74.0727%" y="693" width="0.8513%" height="15" fill="rgb(242,38,24)" fg:x="288536836" fg:w="3316094"/><text x="74.3227%" y="703.50"></text></g><g><title>cargo::main (3,316,094 samples, 0.85%)</title><rect x="74.0727%" y="677" width="0.8513%" height="15" fill="rgb(225,182,9)" fg:x="288536836" fg:w="3316094"/><text x="74.3227%" y="687.50"></text></g><g><title>cargo::cli::main (3,316,094 samples, 0.85%)</title><rect x="74.0727%" y="661" width="0.8513%" height="15" fill="rgb(243,178,37)" fg:x="288536836" fg:w="3316094"/><text x="74.3227%" y="671.50"></text></g><g><title>cargo::init_git (3,316,094 samples, 0.85%)</title><rect x="74.0727%" y="645" width="0.8513%" height="15" fill="rgb(232,139,19)" fg:x="288536836" fg:w="3316094"/><text x="74.3227%" y="655.50"></text></g><g><title>git2::opts::set_verify_owner_validation (3,316,094 samples, 0.85%)</title><rect x="74.0727%" y="629" width="0.8513%" height="15" fill="rgb(225,201,24)" fg:x="288536836" fg:w="3316094"/><text x="74.3227%" y="639.50"></text></g><g><title>libgit2_sys::init (3,316,094 samples, 0.85%)</title><rect x="74.0727%" y="613" width="0.8513%" height="15" fill="rgb(221,47,46)" fg:x="288536836" fg:w="3316094"/><text x="74.3227%" y="623.50"></text></g><g><title>std::sys::sync::once::futex::Once::call (3,316,094 samples, 0.85%)</title><rect x="74.0727%" y="597" width="0.8513%" height="15" fill="rgb(249,23,13)" fg:x="288536836" fg:w="3316094"/><text x="74.3227%" y="607.50"></text></g><g><title>std::sync::once::Once::call_once::_{{closure}} (3,316,094 samples, 0.85%)</title><rect x="74.0727%" y="581" width="0.8513%" height="15" fill="rgb(219,9,5)" fg:x="288536836" fg:w="3316094"/><text x="74.3227%" y="591.50"></text></g><g><title>git_runtime_init (3,316,094 samples, 0.85%)</title><rect x="74.0727%" y="565" width="0.8513%" height="15" fill="rgb(254,171,16)" fg:x="288536836" fg:w="3316094"/><text x="74.3227%" y="575.50"></text></g><g><title>git_openssl_stream_global_init (3,316,094 samples, 0.85%)</title><rect x="74.0727%" y="549" width="0.8513%" height="15" fill="rgb(230,171,20)" fg:x="288536836" fg:w="3316094"/><text x="74.3227%" y="559.50"></text></g><g><title>X509_STORE_set_default_paths_ex (3,316,094 samples, 0.85%)</title><rect x="74.0727%" y="533" width="0.8513%" height="15" fill="rgb(210,71,41)" fg:x="288536836" fg:w="3316094"/><text x="74.3227%" y="543.50"></text></g><g><title>by_file_ctrl_ex (3,316,094 samples, 0.85%)</title><rect x="74.0727%" y="517" width="0.8513%" height="15" fill="rgb(206,173,20)" fg:x="288536836" fg:w="3316094"/><text x="74.3227%" y="527.50"></text></g><g><title>X509_load_cert_crl_file_ex (3,316,094 samples, 0.85%)</title><rect x="74.0727%" y="501" width="0.8513%" height="15" fill="rgb(233,88,34)" fg:x="288536836" fg:w="3316094"/><text x="74.3227%" y="511.50"></text></g><g><title>PEM_X509_INFO_read_bio_ex (3,316,094 samples, 0.85%)</title><rect x="74.0727%" y="485" width="0.8513%" height="15" fill="rgb(223,209,46)" fg:x="288536836" fg:w="3316094"/><text x="74.3227%" y="495.50"></text></g><g><title>d2i_X509_AUX (3,316,094 samples, 0.85%)</title><rect x="74.0727%" y="469" width="0.8513%" height="15" fill="rgb(250,43,18)" fg:x="288536836" fg:w="3316094"/><text x="74.3227%" y="479.50"></text></g><g><title>ASN1_item_d2i_ex (3,316,094 samples, 0.85%)</title><rect x="74.0727%" y="453" width="0.8513%" height="15" fill="rgb(208,13,10)" fg:x="288536836" fg:w="3316094"/><text x="74.3227%" y="463.50"></text></g><g><title>asn1_item_embed_d2i (3,316,094 samples, 0.85%)</title><rect x="74.0727%" y="437" width="0.8513%" height="15" fill="rgb(212,200,36)" fg:x="288536836" fg:w="3316094"/><text x="74.3227%" y="447.50"></text></g><g><title>asn1_template_noexp_d2i (3,316,094 samples, 0.85%)</title><rect x="74.0727%" y="421" width="0.8513%" height="15" fill="rgb(225,90,30)" fg:x="288536836" fg:w="3316094"/><text x="74.3227%" y="431.50"></text></g><g><title>asn1_item_embed_d2i (3,316,094 samples, 0.85%)</title><rect x="74.0727%" y="405" width="0.8513%" height="15" fill="rgb(236,182,39)" fg:x="288536836" fg:w="3316094"/><text x="74.3227%" y="415.50"></text></g><g><title>asn1_template_noexp_d2i (3,316,094 samples, 0.85%)</title><rect x="74.0727%" y="389" width="0.8513%" height="15" fill="rgb(212,144,35)" fg:x="288536836" fg:w="3316094"/><text x="74.3227%" y="399.50"></text></g><g><title>asn1_item_embed_d2i (3,316,094 samples, 0.85%)</title><rect x="74.0727%" y="373" width="0.8513%" height="15" fill="rgb(228,63,44)" fg:x="288536836" fg:w="3316094"/><text x="74.3227%" y="383.50"></text></g><g><title>x509_pubkey_ex_d2i_ex (3,316,094 samples, 0.85%)</title><rect x="74.0727%" y="357" width="0.8513%" height="15" fill="rgb(228,109,6)" fg:x="288536836" fg:w="3316094"/><text x="74.3227%" y="367.50"></text></g><g><title>OSSL_DECODER_from_data (3,316,094 samples, 0.85%)</title><rect x="74.0727%" y="341" width="0.8513%" height="15" fill="rgb(238,117,24)" fg:x="288536836" fg:w="3316094"/><text x="74.3227%" y="351.50"></text></g><g><title>OSSL_DECODER_from_bio (3,316,094 samples, 0.85%)</title><rect x="74.0727%" y="325" width="0.8513%" height="15" fill="rgb(242,26,26)" fg:x="288536836" fg:w="3316094"/><text x="74.3227%" y="335.50"></text></g><g><title>decoder_process (3,316,094 samples, 0.85%)</title><rect x="74.0727%" y="309" width="0.8513%" height="15" fill="rgb(221,92,48)" fg:x="288536836" fg:w="3316094"/><text x="74.3227%" y="319.50"></text></g><g><title>spki2typespki_decode (3,316,094 samples, 0.85%)</title><rect x="74.0727%" y="293" width="0.8513%" height="15" fill="rgb(209,209,32)" fg:x="288536836" fg:w="3316094"/><text x="74.3227%" y="303.50"></text></g><g><title>decoder_process (3,316,094 samples, 0.85%)</title><rect x="74.0727%" y="277" width="0.8513%" height="15" fill="rgb(221,70,22)" fg:x="288536836" fg:w="3316094"/><text x="74.3227%" y="287.50"></text></g><g><title>der2key_decode (3,316,094 samples, 0.85%)</title><rect x="74.0727%" y="261" width="0.8513%" height="15" fill="rgb(248,145,5)" fg:x="288536836" fg:w="3316094"/><text x="74.3227%" y="271.50"></text></g><g><title>decoder_process (3,316,094 samples, 0.85%)</title><rect x="74.0727%" y="245" width="0.8513%" height="15" fill="rgb(226,116,26)" fg:x="288536836" fg:w="3316094"/><text x="74.3227%" y="255.50"></text></g><g><title>decoder_construct_pkey (3,316,094 samples, 0.85%)</title><rect x="74.0727%" y="229" width="0.8513%" height="15" fill="rgb(244,5,17)" fg:x="288536836" fg:w="3316094"/><text x="74.3227%" y="239.50"></text></g><g><title>evp_keymgmt_util_make_pkey (3,316,094 samples, 0.85%)</title><rect x="74.0727%" y="213" width="0.8513%" height="15" fill="rgb(252,159,33)" fg:x="288536836" fg:w="3316094"/><text x="74.3227%" y="223.50"></text></g><g><title>evp_keymgmt_util_assign_pkey (3,316,094 samples, 0.85%)</title><rect x="74.0727%" y="197" width="0.8513%" height="15" fill="rgb(206,71,0)" fg:x="288536836" fg:w="3316094"/><text x="74.3227%" y="207.50"></text></g><g><title>EVP_PKEY_set_type_by_keymgmt (3,316,094 samples, 0.85%)</title><rect x="74.0727%" y="181" width="0.8513%" height="15" fill="rgb(233,118,54)" fg:x="288536836" fg:w="3316094"/><text x="74.3227%" y="191.50"></text></g><g><title>ossl_namemap_doall_names (3,316,094 samples, 0.85%)</title><rect x="74.0727%" y="165" width="0.8513%" height="15" fill="rgb(234,83,48)" fg:x="288536836" fg:w="3316094"/><text x="74.3227%" y="175.50"></text></g><g><title>find_ameth (3,316,094 samples, 0.85%)</title><rect x="74.0727%" y="149" width="0.8513%" height="15" fill="rgb(228,3,54)" fg:x="288536836" fg:w="3316094"/><text x="74.3227%" y="159.50"></text></g><g><title>EVP_PKEY_asn1_find_str (3,316,094 samples, 0.85%)</title><rect x="74.0727%" y="133" width="0.8513%" height="15" fill="rgb(226,155,13)" fg:x="288536836" fg:w="3316094"/><text x="74.3227%" y="143.50"></text></g><g><title>__strlen_avx2 (3,316,094 samples, 0.85%)</title><rect x="74.0727%" y="117" width="0.8513%" height="15" fill="rgb(241,28,37)" fg:x="288536836" fg:w="3316094"/><text x="74.3227%" y="127.50"></text></g><g><title>[unknown] (199,565 samples, 0.05%)</title><rect x="74.9257%" y="693" width="0.0512%" height="15" fill="rgb(233,93,10)" fg:x="291859475" fg:w="199565"/><text x="75.1757%" y="703.50"></text></g><g><title>[unknown] (190,159 samples, 0.05%)</title><rect x="74.9281%" y="677" width="0.0488%" height="15" fill="rgb(225,113,19)" fg:x="291868881" fg:w="190159"/><text x="75.1781%" y="687.50"></text></g><g><title>[unknown] (190,142 samples, 0.05%)</title><rect x="74.9281%" y="661" width="0.0488%" height="15" fill="rgb(241,2,18)" fg:x="291868898" fg:w="190142"/><text x="75.1781%" y="671.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (182,171 samples, 0.05%)</title><rect x="74.9800%" y="677" width="0.0468%" height="15" fill="rgb(228,207,21)" fg:x="292070958" fg:w="182171"/><text x="75.2300%" y="687.50"></text></g><g><title>std::sys::pal::unix::thread::Thread::set_name (182,171 samples, 0.05%)</title><rect x="74.9800%" y="661" width="0.0468%" height="15" fill="rgb(213,211,35)" fg:x="292070958" fg:w="182171"/><text x="75.2300%" y="671.50"></text></g><g><title>pthread_setname_np@@GLIBC_2.34 (182,171 samples, 0.05%)</title><rect x="74.9800%" y="645" width="0.0468%" height="15" fill="rgb(209,83,10)" fg:x="292070958" fg:w="182171"/><text x="75.2300%" y="655.50"></text></g><g><title>__GI___prctl_time64 (182,171 samples, 0.05%)</title><rect x="74.9800%" y="629" width="0.0468%" height="15" fill="rgb(209,164,1)" fg:x="292070958" fg:w="182171"/><text x="75.2300%" y="639.50"></text></g><g><title>[unknown] (182,171 samples, 0.05%)</title><rect x="74.9800%" y="613" width="0.0468%" height="15" fill="rgb(213,184,43)" fg:x="292070958" fg:w="182171"/><text x="75.2300%" y="623.50"></text></g><g><title>[unknown] (182,171 samples, 0.05%)</title><rect x="74.9800%" y="597" width="0.0468%" height="15" fill="rgb(231,61,34)" fg:x="292070958" fg:w="182171"/><text x="75.2300%" y="607.50"></text></g><g><title>[unknown] (182,171 samples, 0.05%)</title><rect x="74.9800%" y="581" width="0.0468%" height="15" fill="rgb(235,75,3)" fg:x="292070958" fg:w="182171"/><text x="75.2300%" y="591.50"></text></g><g><title>__GI___pthread_attr_destroy (241,826 samples, 0.06%)</title><rect x="75.0776%" y="661" width="0.0621%" height="15" fill="rgb(220,106,47)" fg:x="292451409" fg:w="241826"/><text x="75.3276%" y="671.50"></text></g><g><title>cfree@GLIBC_2.2.5 (241,826 samples, 0.06%)</title><rect x="75.0776%" y="645" width="0.0621%" height="15" fill="rgb(210,196,33)" fg:x="292451409" fg:w="241826"/><text x="75.3276%" y="655.50"></text></g><g><title>__mprotect (136,871 samples, 0.04%)</title><rect x="75.1397%" y="661" width="0.0351%" height="15" fill="rgb(229,154,42)" fg:x="292693235" fg:w="136871"/><text x="75.3897%" y="671.50"></text></g><g><title>[unknown] (136,871 samples, 0.04%)</title><rect x="75.1397%" y="645" width="0.0351%" height="15" fill="rgb(228,114,26)" fg:x="292693235" fg:w="136871"/><text x="75.3897%" y="655.50"></text></g><g><title>[unknown] (136,871 samples, 0.04%)</title><rect x="75.1397%" y="629" width="0.0351%" height="15" fill="rgb(208,144,1)" fg:x="292693235" fg:w="136871"/><text x="75.3897%" y="639.50"></text></g><g><title>[unknown] (136,871 samples, 0.04%)</title><rect x="75.1397%" y="613" width="0.0351%" height="15" fill="rgb(239,112,37)" fg:x="292693235" fg:w="136871"/><text x="75.3897%" y="623.50"></text></g><g><title>[unknown] (136,871 samples, 0.04%)</title><rect x="75.1397%" y="597" width="0.0351%" height="15" fill="rgb(210,96,50)" fg:x="292693235" fg:w="136871"/><text x="75.3897%" y="607.50"></text></g><g><title>[unknown] (136,871 samples, 0.04%)</title><rect x="75.1397%" y="581" width="0.0351%" height="15" fill="rgb(222,178,2)" fg:x="292693235" fg:w="136871"/><text x="75.3897%" y="591.50"></text></g><g><title>[unknown] (136,871 samples, 0.04%)</title><rect x="75.1397%" y="565" width="0.0351%" height="15" fill="rgb(226,74,18)" fg:x="292693235" fg:w="136871"/><text x="75.3897%" y="575.50"></text></g><g><title>[unknown] (136,871 samples, 0.04%)</title><rect x="75.1397%" y="549" width="0.0351%" height="15" fill="rgb(225,67,54)" fg:x="292693235" fg:w="136871"/><text x="75.3897%" y="559.50"></text></g><g><title>cfree@GLIBC_2.2.5 (480,183 samples, 0.12%)</title><rect x="75.1748%" y="645" width="0.1233%" height="15" fill="rgb(251,92,32)" fg:x="292830106" fg:w="480183"/><text x="75.4248%" y="655.50"></text></g><g><title>[unknown] (74,278 samples, 0.02%)</title><rect x="75.3231%" y="581" width="0.0191%" height="15" fill="rgb(228,149,22)" fg:x="293407721" fg:w="74278"/><text x="75.5731%" y="591.50"></text></g><g><title>[unknown] (74,278 samples, 0.02%)</title><rect x="75.3231%" y="565" width="0.0191%" height="15" fill="rgb(243,54,13)" fg:x="293407721" fg:w="74278"/><text x="75.5731%" y="575.50"></text></g><g><title>[unknown] (74,278 samples, 0.02%)</title><rect x="75.3231%" y="549" width="0.0191%" height="15" fill="rgb(243,180,28)" fg:x="293407721" fg:w="74278"/><text x="75.5731%" y="559.50"></text></g><g><title>[unknown] (74,278 samples, 0.02%)</title><rect x="75.3231%" y="533" width="0.0191%" height="15" fill="rgb(208,167,24)" fg:x="293407721" fg:w="74278"/><text x="75.5731%" y="543.50"></text></g><g><title>[unknown] (74,278 samples, 0.02%)</title><rect x="75.3231%" y="517" width="0.0191%" height="15" fill="rgb(245,73,45)" fg:x="293407721" fg:w="74278"/><text x="75.5731%" y="527.50"></text></g><g><title>malloc (182,014 samples, 0.05%)</title><rect x="75.2981%" y="645" width="0.0467%" height="15" fill="rgb(237,203,48)" fg:x="293310289" fg:w="182014"/><text x="75.5481%" y="655.50"></text></g><g><title>tcache_init.part.0 (102,642 samples, 0.03%)</title><rect x="75.3185%" y="629" width="0.0264%" height="15" fill="rgb(211,197,16)" fg:x="293389661" fg:w="102642"/><text x="75.5685%" y="639.50"></text></g><g><title>arena_get2 (102,642 samples, 0.03%)</title><rect x="75.3185%" y="613" width="0.0264%" height="15" fill="rgb(243,99,51)" fg:x="293389661" fg:w="102642"/><text x="75.5685%" y="623.50"></text></g><g><title>alloc_new_heap (95,498 samples, 0.02%)</title><rect x="75.3203%" y="597" width="0.0245%" height="15" fill="rgb(215,123,29)" fg:x="293396805" fg:w="95498"/><text x="75.5703%" y="607.50"></text></g><g><title>__GI___clone3 (1,979,526 samples, 0.51%)</title><rect x="74.9240%" y="725" width="0.5082%" height="15" fill="rgb(239,186,37)" fg:x="291852944" fg:w="1979526"/><text x="75.1740%" y="735.50"></text></g><g><title>start_thread (1,979,526 samples, 0.51%)</title><rect x="74.9240%" y="709" width="0.5082%" height="15" fill="rgb(252,136,39)" fg:x="291852944" fg:w="1979526"/><text x="75.1740%" y="719.50"></text></g><g><title>std::sys::pal::unix::thread::Thread::new::thread_start (1,761,512 samples, 0.45%)</title><rect x="74.9800%" y="693" width="0.4522%" height="15" fill="rgb(223,213,32)" fg:x="292070958" fg:w="1761512"/><text x="75.2300%" y="703.50"></text></g><g><title>std::sys::pal::unix::stack_overflow::imp::make_handler (1,579,341 samples, 0.41%)</title><rect x="75.0267%" y="677" width="0.4054%" height="15" fill="rgb(233,115,5)" fg:x="292253129" fg:w="1579341"/><text x="75.2767%" y="687.50"></text></g><g><title>pthread_getattr_np@@GLIBC_2.32 (1,002,364 samples, 0.26%)</title><rect x="75.1748%" y="661" width="0.2573%" height="15" fill="rgb(207,226,44)" fg:x="292830106" fg:w="1002364"/><text x="75.4248%" y="671.50"></text></g><g><title>pthread_getaffinity_np@GLIBC_2.3.4 (340,167 samples, 0.09%)</title><rect x="75.3448%" y="645" width="0.0873%" height="15" fill="rgb(208,126,0)" fg:x="293492303" fg:w="340167"/><text x="75.5948%" y="655.50"></text></g><g><title>[unknown] (162,512 samples, 0.04%)</title><rect x="75.3904%" y="629" width="0.0417%" height="15" fill="rgb(244,66,21)" fg:x="293669958" fg:w="162512"/><text x="75.6404%" y="639.50"></text></g><g><title>[unknown] (162,512 samples, 0.04%)</title><rect x="75.3904%" y="613" width="0.0417%" height="15" fill="rgb(222,97,12)" fg:x="293669958" fg:w="162512"/><text x="75.6404%" y="623.50"></text></g><g><title>[unknown] (162,512 samples, 0.04%)</title><rect x="75.3904%" y="597" width="0.0417%" height="15" fill="rgb(219,213,19)" fg:x="293669958" fg:w="162512"/><text x="75.6404%" y="607.50"></text></g><g><title>[unknown] (162,512 samples, 0.04%)</title><rect x="75.3904%" y="581" width="0.0417%" height="15" fill="rgb(252,169,30)" fg:x="293669958" fg:w="162512"/><text x="75.6404%" y="591.50"></text></g><g><title>__execvpe_common (200,222 samples, 0.05%)</title><rect x="75.4342%" y="709" width="0.0514%" height="15" fill="rgb(206,32,51)" fg:x="293840366" fg:w="200222"/><text x="75.6842%" y="719.50"></text></g><g><title>__mempcpy_chk_avx_unaligned_erms (129,850 samples, 0.03%)</title><rect x="75.4523%" y="693" width="0.0333%" height="15" fill="rgb(250,172,42)" fg:x="293910738" fg:w="129850"/><text x="75.7023%" y="703.50"></text></g><g><title>__spawni_child (208,266 samples, 0.05%)</title><rect x="75.4322%" y="725" width="0.0535%" height="15" fill="rgb(209,34,43)" fg:x="293832470" fg:w="208266"/><text x="75.6822%" y="735.50"></text></g><g><title>&lt;criterion::Criterion as core::default::Default&gt;::default (2,221,459 samples, 0.57%)</title><rect x="75.4856%" y="597" width="0.5703%" height="15" fill="rgb(223,11,35)" fg:x="294040738" fg:w="2221459"/><text x="75.7356%" y="607.50"></text></g><g><title>criterion::html::Html::new (2,221,459 samples, 0.57%)</title><rect x="75.4856%" y="581" width="0.5703%" height="15" fill="rgb(251,219,26)" fg:x="294040738" fg:w="2221459"/><text x="75.7356%" y="591.50"></text></g><g><title>tinytemplate::TinyTemplate::add_template (2,221,459 samples, 0.57%)</title><rect x="75.4856%" y="565" width="0.5703%" height="15" fill="rgb(231,119,3)" fg:x="294040738" fg:w="2221459"/><text x="75.7356%" y="575.50"></text></g><g><title>tinytemplate::compiler::TemplateCompiler::compile (2,221,459 samples, 0.57%)</title><rect x="75.4856%" y="549" width="0.5703%" height="15" fill="rgb(216,97,11)" fg:x="294040738" fg:w="2221459"/><text x="75.7356%" y="559.50"></text></g><g><title>tinytemplate::compiler::TemplateCompiler::consume_tag (2,221,459 samples, 0.57%)</title><rect x="75.4856%" y="533" width="0.5703%" height="15" fill="rgb(223,59,9)" fg:x="294040738" fg:w="2221459"/><text x="75.7356%" y="543.50"></text></g><g><title>&lt;core::str::pattern::CharSearcher as core::str::pattern::Searcher&gt;::next_match (2,221,459 samples, 0.57%)</title><rect x="75.4856%" y="517" width="0.5703%" height="15" fill="rgb(233,93,31)" fg:x="294040738" fg:w="2221459"/><text x="75.7356%" y="527.50"></text></g><g><title>core::slice::memchr::memchr_aligned (2,221,459 samples, 0.57%)</title><rect x="75.4856%" y="501" width="0.5703%" height="15" fill="rgb(239,81,33)" fg:x="294040738" fg:w="2221459"/><text x="75.7356%" y="511.50"></text></g><g><title>alloc::fmt::format::format_inner (204,771 samples, 0.05%)</title><rect x="76.0559%" y="597" width="0.0526%" height="15" fill="rgb(213,120,34)" fg:x="296262197" fg:w="204771"/><text x="76.3059%" y="607.50"></text></g><g><title>core::fmt::write (204,771 samples, 0.05%)</title><rect x="76.0559%" y="581" width="0.0526%" height="15" fill="rgb(243,49,53)" fg:x="296262197" fg:w="204771"/><text x="76.3059%" y="591.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (2,648,335 samples, 0.68%)</title><rect x="76.1085%" y="597" width="0.6799%" height="15" fill="rgb(247,216,33)" fg:x="296466968" fg:w="2648335"/><text x="76.3585%" y="607.50"></text></g><g><title>cfree@GLIBC_2.2.5 (2,648,335 samples, 0.68%)</title><rect x="76.1085%" y="581" width="0.6799%" height="15" fill="rgb(226,26,14)" fg:x="296466968" fg:w="2648335"/><text x="76.3585%" y="591.50"></text></g><g><title>_int_free (2,648,335 samples, 0.68%)</title><rect x="76.1085%" y="565" width="0.6799%" height="15" fill="rgb(215,49,53)" fg:x="296466968" fg:w="2648335"/><text x="76.3585%" y="575.50"></text></g><g><title>_int_free_maybe_consolidate.part.0 (2,648,335 samples, 0.68%)</title><rect x="76.1085%" y="549" width="0.6799%" height="15" fill="rgb(245,162,40)" fg:x="296466968" fg:w="2648335"/><text x="76.3585%" y="559.50"></text></g><g><title>malloc_consolidate (2,648,335 samples, 0.68%)</title><rect x="76.1085%" y="533" width="0.6799%" height="15" fill="rgb(229,68,17)" fg:x="296466968" fg:w="2648335"/><text x="76.3585%" y="543.50"></text></g><g><title>unlink_chunk.isra.0 (2,648,335 samples, 0.68%)</title><rect x="76.1085%" y="517" width="0.6799%" height="15" fill="rgb(213,182,10)" fg:x="296466968" fg:w="2648335"/><text x="76.3585%" y="527.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (114,340 samples, 0.03%)</title><rect x="76.7884%" y="549" width="0.0294%" height="15" fill="rgb(245,125,30)" fg:x="299115304" fg:w="114340"/><text x="77.0384%" y="559.50"></text></g><g><title>cfree@GLIBC_2.2.5 (114,324 samples, 0.03%)</title><rect x="76.7884%" y="533" width="0.0293%" height="15" fill="rgb(232,202,2)" fg:x="299115320" fg:w="114324"/><text x="77.0384%" y="543.50"></text></g><g><title>_int_free (114,324 samples, 0.03%)</title><rect x="76.7884%" y="517" width="0.0293%" height="15" fill="rgb(237,140,51)" fg:x="299115320" fg:w="114324"/><text x="77.0384%" y="527.50"></text></g><g><title>std::thread::JoinInner&lt;T&gt;::join (120,128 samples, 0.03%)</title><rect x="76.7884%" y="565" width="0.0308%" height="15" fill="rgb(236,157,25)" fg:x="299115304" fg:w="120128"/><text x="77.0384%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::blocking::pool::BlockingPool&gt; (120,130 samples, 0.03%)</title><rect x="76.7884%" y="597" width="0.0308%" height="15" fill="rgb(219,209,0)" fg:x="299115303" fg:w="120130"/><text x="77.0384%" y="607.50"></text></g><g><title>tokio::runtime::blocking::pool::BlockingPool::shutdown (120,130 samples, 0.03%)</title><rect x="76.7884%" y="581" width="0.0308%" height="15" fill="rgb(240,116,54)" fg:x="299115303" fg:w="120130"/><text x="77.0384%" y="591.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::drop_join_handle_slow (62,808 samples, 0.02%)</title><rect x="76.8195%" y="501" width="0.0161%" height="15" fill="rgb(216,10,36)" fg:x="299236462" fg:w="62808"/><text x="77.0695%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (75,645 samples, 0.02%)</title><rect x="76.8192%" y="549" width="0.0194%" height="15" fill="rgb(222,72,44)" fg:x="299235433" fg:w="75645"/><text x="77.0692%" y="559.50"></text></g><g><title>criterion::bencher::AsyncBencher&lt;A,M&gt;::iter (75,207 samples, 0.02%)</title><rect x="76.8193%" y="533" width="0.0193%" height="15" fill="rgb(232,159,9)" fg:x="299235871" fg:w="75207"/><text x="77.0693%" y="543.50"></text></g><g><title>futures_executor::local_pool::block_on (75,207 samples, 0.02%)</title><rect x="76.8193%" y="517" width="0.0193%" height="15" fill="rgb(210,39,32)" fg:x="299235871" fg:w="75207"/><text x="77.0693%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (974,896 samples, 0.25%)</title><rect x="76.8192%" y="565" width="0.2503%" height="15" fill="rgb(216,194,45)" fg:x="299235433" fg:w="974896"/><text x="77.0692%" y="575.50"></text></g><g><title>criterion::bencher::AsyncBencher&lt;A,M&gt;::iter (899,251 samples, 0.23%)</title><rect x="76.8386%" y="549" width="0.2309%" height="15" fill="rgb(218,18,35)" fg:x="299311078" fg:w="899251"/><text x="77.0886%" y="559.50"></text></g><g><title>futures_executor::local_pool::block_on (899,251 samples, 0.23%)</title><rect x="76.8386%" y="533" width="0.2309%" height="15" fill="rgb(207,83,51)" fg:x="299311078" fg:w="899251"/><text x="77.0886%" y="543.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::handle::Handle::bind_new_task (899,251 samples, 0.23%)</title><rect x="76.8386%" y="517" width="0.2309%" height="15" fill="rgb(225,63,43)" fg:x="299311078" fg:w="899251"/><text x="77.0886%" y="527.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task (899,251 samples, 0.23%)</title><rect x="76.8386%" y="501" width="0.2309%" height="15" fill="rgb(207,57,36)" fg:x="299311078" fg:w="899251"/><text x="77.0886%" y="511.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (899,251 samples, 0.23%)</title><rect x="76.8386%" y="485" width="0.2309%" height="15" fill="rgb(216,99,33)" fg:x="299311078" fg:w="899251"/><text x="77.0886%" y="495.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (899,251 samples, 0.23%)</title><rect x="76.8386%" y="469" width="0.2309%" height="15" fill="rgb(225,42,16)" fg:x="299311078" fg:w="899251"/><text x="77.0886%" y="479.50"></text></g><g><title>clock_gettime@@GLIBC_2.17 (899,251 samples, 0.23%)</title><rect x="76.8386%" y="453" width="0.2309%" height="15" fill="rgb(220,201,45)" fg:x="299311078" fg:w="899251"/><text x="77.0886%" y="463.50"></text></g><g><title>__vdso_clock_gettime (899,251 samples, 0.23%)</title><rect x="76.8386%" y="437" width="0.2309%" height="15" fill="rgb(225,33,4)" fg:x="299311078" fg:w="899251"/><text x="77.0886%" y="447.50"></text></g><g><title>[unknown] (899,251 samples, 0.23%)</title><rect x="76.8386%" y="421" width="0.2309%" height="15" fill="rgb(224,33,50)" fg:x="299311078" fg:w="899251"/><text x="77.0886%" y="431.50"></text></g><g><title>[unknown] (899,251 samples, 0.23%)</title><rect x="76.8386%" y="405" width="0.2309%" height="15" fill="rgb(246,198,51)" fg:x="299311078" fg:w="899251"/><text x="77.0886%" y="415.50"></text></g><g><title>[unknown] (899,251 samples, 0.23%)</title><rect x="76.8386%" y="389" width="0.2309%" height="15" fill="rgb(205,22,4)" fg:x="299311078" fg:w="899251"/><text x="77.0886%" y="399.50"></text></g><g><title>__rdl_dealloc (245,406 samples, 0.06%)</title><rect x="77.0754%" y="549" width="0.0630%" height="15" fill="rgb(206,3,8)" fg:x="300233348" fg:w="245406"/><text x="77.3254%" y="559.50"></text></g><g><title>criterion::report::BenchmarkId::new (646,379 samples, 0.17%)</title><rect x="77.0754%" y="565" width="0.1659%" height="15" fill="rgb(251,23,15)" fg:x="300233348" fg:w="646379"/><text x="77.3254%" y="575.50"></text></g><g><title>criterion::report::make_filename_safe (400,973 samples, 0.10%)</title><rect x="77.1384%" y="549" width="0.1029%" height="15" fill="rgb(252,88,28)" fg:x="300478754" fg:w="400973"/><text x="77.3884%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (400,973 samples, 0.10%)</title><rect x="77.1384%" y="533" width="0.1029%" height="15" fill="rgb(212,127,14)" fg:x="300478754" fg:w="400973"/><text x="77.3884%" y="543.50"></text></g><g><title>_ZN5alloc7raw_vec11finish_grow17h108803b650ef4e46E.llvm.8417936540558171266 (400,973 samples, 0.10%)</title><rect x="77.1384%" y="517" width="0.1029%" height="15" fill="rgb(247,145,37)" fg:x="300478754" fg:w="400973"/><text x="77.3884%" y="527.50"></text></g><g><title>__libc_start_main@@GLIBC_2.34 (7,411,840 samples, 1.90%)</title><rect x="75.4856%" y="709" width="1.9028%" height="15" fill="rgb(209,117,53)" fg:x="294040738" fg:w="7411840"/><text x="75.7356%" y="719.50">_..</text></g><g><title>__libc_start_call_main (7,411,840 samples, 1.90%)</title><rect x="75.4856%" y="693" width="1.9028%" height="15" fill="rgb(212,90,42)" fg:x="294040738" fg:w="7411840"/><text x="75.7356%" y="703.50">_..</text></g><g><title>main (7,411,840 samples, 1.90%)</title><rect x="75.4856%" y="677" width="1.9028%" height="15" fill="rgb(218,164,37)" fg:x="294040738" fg:w="7411840"/><text x="75.7356%" y="687.50">m..</text></g><g><title>std::rt::lang_start_internal (7,411,840 samples, 1.90%)</title><rect x="75.4856%" y="661" width="1.9028%" height="15" fill="rgb(246,65,34)" fg:x="294040738" fg:w="7411840"/><text x="75.7356%" y="671.50">s..</text></g><g><title>_ZN3std2rt10lang_start28_$u7b$$u7b$closure$u7d$$u7d$17hf6c9f955b80e9afeE.llvm.13528618501471782376 (7,411,840 samples, 1.90%)</title><rect x="75.4856%" y="645" width="1.9028%" height="15" fill="rgb(231,100,33)" fg:x="294040738" fg:w="7411840"/><text x="75.7356%" y="655.50">_..</text></g><g><title>std::sys::backtrace::__rust_begin_short_backtrace (7,411,840 samples, 1.90%)</title><rect x="75.4856%" y="629" width="1.9028%" height="15" fill="rgb(228,126,14)" fg:x="294040738" fg:w="7411840"/><text x="75.7356%" y="639.50">s..</text></g><g><title>my_benchmark::main (7,411,840 samples, 1.90%)</title><rect x="75.4856%" y="613" width="1.9028%" height="15" fill="rgb(215,173,21)" fg:x="294040738" fg:w="7411840"/><text x="75.7356%" y="623.50">m..</text></g><g><title>criterion::Criterion&lt;M&gt;::bench_with_input (2,217,145 samples, 0.57%)</title><rect x="76.8192%" y="597" width="0.5692%" height="15" fill="rgb(210,6,40)" fg:x="299235433" fg:w="2217145"/><text x="77.0692%" y="607.50"></text></g><g><title>criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_with_input (2,217,145 samples, 0.57%)</title><rect x="76.8192%" y="581" width="0.5692%" height="15" fill="rgb(212,48,18)" fg:x="299235433" fg:w="2217145"/><text x="77.0692%" y="591.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (572,851 samples, 0.15%)</title><rect x="77.2413%" y="565" width="0.1471%" height="15" fill="rgb(230,214,11)" fg:x="300879727" fg:w="572851"/><text x="77.4913%" y="575.50"></text></g><g><title>__GI___tunables_init (40,630 samples, 0.01%)</title><rect x="77.3889%" y="677" width="0.0104%" height="15" fill="rgb(254,105,39)" fg:x="301454530" fg:w="40630"/><text x="77.6389%" y="687.50"></text></g><g><title>my_benchmark-91 (13,517,229 samples, 3.47%)</title><rect x="74.9240%" y="741" width="3.4701%" height="15" fill="rgb(245,158,5)" fg:x="291852930" fg:w="13517229"/><text x="75.1740%" y="751.50">my_..</text></g><g><title>_start (11,329,423 samples, 2.91%)</title><rect x="75.4856%" y="725" width="2.9085%" height="15" fill="rgb(249,208,11)" fg:x="294040736" fg:w="11329423"/><text x="75.7356%" y="735.50">_s..</text></g><g><title>_dl_start (3,917,581 samples, 1.01%)</title><rect x="77.3884%" y="709" width="1.0057%" height="15" fill="rgb(210,39,28)" fg:x="301452578" fg:w="3917581"/><text x="77.6384%" y="719.50"></text></g><g><title>_dl_sysdep_start (3,915,629 samples, 1.01%)</title><rect x="77.3889%" y="693" width="1.0052%" height="15" fill="rgb(211,56,53)" fg:x="301454530" fg:w="3915629"/><text x="77.6389%" y="703.50"></text></g><g><title>dl_main (3,874,999 samples, 0.99%)</title><rect x="77.3993%" y="677" width="0.9948%" height="15" fill="rgb(226,201,30)" fg:x="301495160" fg:w="3874999"/><text x="77.6493%" y="687.50"></text></g><g><title>_dl_relocate_object (3,286,470 samples, 0.84%)</title><rect x="77.5504%" y="661" width="0.8437%" height="15" fill="rgb(239,101,34)" fg:x="302083689" fg:w="3286470"/><text x="77.8004%" y="671.50"></text></g><g><title>_dl_lookup_symbol_x (3,286,470 samples, 0.84%)</title><rect x="77.5504%" y="645" width="0.8437%" height="15" fill="rgb(226,209,5)" fg:x="302083689" fg:w="3286470"/><text x="77.8004%" y="655.50"></text></g><g><title>do_lookup_x (3,286,470 samples, 0.84%)</title><rect x="77.5504%" y="629" width="0.8437%" height="15" fill="rgb(250,105,47)" fg:x="302083689" fg:w="3286470"/><text x="77.8004%" y="639.50"></text></g><g><title>check_match (3,286,470 samples, 0.84%)</title><rect x="77.5504%" y="613" width="0.8437%" height="15" fill="rgb(230,72,3)" fg:x="302083689" fg:w="3286470"/><text x="77.8004%" y="623.50"></text></g><g><title>__libc_thread_freeres (104,350 samples, 0.03%)</title><rect x="78.3990%" y="693" width="0.0268%" height="15" fill="rgb(232,218,39)" fg:x="305389245" fg:w="104350"/><text x="78.6490%" y="703.50"></text></g><g><title>__glibc_tls_internal_free (104,350 samples, 0.03%)</title><rect x="78.3990%" y="677" width="0.0268%" height="15" fill="rgb(248,166,6)" fg:x="305389245" fg:w="104350"/><text x="78.6490%" y="687.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (125,117 samples, 0.03%)</title><rect x="78.4322%" y="645" width="0.0321%" height="15" fill="rgb(247,89,20)" fg:x="305518472" fg:w="125117"/><text x="78.6822%" y="655.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (125,117 samples, 0.03%)</title><rect x="78.4322%" y="629" width="0.0321%" height="15" fill="rgb(248,130,54)" fg:x="305518472" fg:w="125117"/><text x="78.6822%" y="639.50"></text></g><g><title>cfree@GLIBC_2.2.5 (125,117 samples, 0.03%)</title><rect x="78.4322%" y="613" width="0.0321%" height="15" fill="rgb(234,196,4)" fg:x="305518472" fg:w="125117"/><text x="78.6822%" y="623.50"></text></g><g><title>_int_free (125,117 samples, 0.03%)</title><rect x="78.4322%" y="597" width="0.0321%" height="15" fill="rgb(250,143,31)" fg:x="305518472" fg:w="125117"/><text x="78.6822%" y="607.50"></text></g><g><title>_int_free_merge_chunk (125,117 samples, 0.03%)</title><rect x="78.4322%" y="581" width="0.0321%" height="15" fill="rgb(211,110,34)" fg:x="305518472" fg:w="125117"/><text x="78.6822%" y="591.50"></text></g><g><title>_int_free_create_chunk (125,117 samples, 0.03%)</title><rect x="78.4322%" y="565" width="0.0321%" height="15" fill="rgb(215,124,48)" fg:x="305518472" fg:w="125117"/><text x="78.6822%" y="575.50"></text></g><g><title>parking_lot_core::word_lock::WordLock::lock_slow (129,384 samples, 0.03%)</title><rect x="78.4643%" y="613" width="0.0332%" height="15" fill="rgb(216,46,13)" fg:x="305643619" fg:w="129384"/><text x="78.7143%" y="623.50"></text></g><g><title>__sched_yield (129,383 samples, 0.03%)</title><rect x="78.4643%" y="597" width="0.0332%" height="15" fill="rgb(205,184,25)" fg:x="305643620" fg:w="129383"/><text x="78.7143%" y="607.50"></text></g><g><title>[unknown] (129,383 samples, 0.03%)</title><rect x="78.4643%" y="581" width="0.0332%" height="15" fill="rgb(228,1,10)" fg:x="305643620" fg:w="129383"/><text x="78.7143%" y="591.50"></text></g><g><title>[unknown] (129,383 samples, 0.03%)</title><rect x="78.4643%" y="565" width="0.0332%" height="15" fill="rgb(213,116,27)" fg:x="305643620" fg:w="129383"/><text x="78.7143%" y="575.50"></text></g><g><title>[unknown] (129,383 samples, 0.03%)</title><rect x="78.4643%" y="549" width="0.0332%" height="15" fill="rgb(241,95,50)" fg:x="305643620" fg:w="129383"/><text x="78.7143%" y="559.50"></text></g><g><title>[unknown] (129,383 samples, 0.03%)</title><rect x="78.4643%" y="533" width="0.0332%" height="15" fill="rgb(238,48,32)" fg:x="305643620" fg:w="129383"/><text x="78.7143%" y="543.50"></text></g><g><title>parking_lot::raw_mutex::RawMutex::lock_slow (132,830 samples, 0.03%)</title><rect x="78.4643%" y="629" width="0.0341%" height="15" fill="rgb(235,113,49)" fg:x="305643615" fg:w="132830"/><text x="78.7143%" y="639.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (257,865 samples, 0.07%)</title><rect x="78.5489%" y="613" width="0.0662%" height="15" fill="rgb(205,127,43)" fg:x="305973151" fg:w="257865"/><text x="78.7989%" y="623.50"></text></g><g><title>clock_gettime@@GLIBC_2.17 (257,865 samples, 0.07%)</title><rect x="78.5489%" y="597" width="0.0662%" height="15" fill="rgb(250,162,2)" fg:x="305973151" fg:w="257865"/><text x="78.7989%" y="607.50"></text></g><g><title>__vdso_clock_gettime (257,865 samples, 0.07%)</title><rect x="78.5489%" y="581" width="0.0662%" height="15" fill="rgb(220,13,41)" fg:x="305973151" fg:w="257865"/><text x="78.7989%" y="591.50"></text></g><g><title>[unknown] (257,131 samples, 0.07%)</title><rect x="78.5491%" y="565" width="0.0660%" height="15" fill="rgb(249,221,25)" fg:x="305973885" fg:w="257131"/><text x="78.7991%" y="575.50"></text></g><g><title>[unknown] (257,131 samples, 0.07%)</title><rect x="78.5491%" y="549" width="0.0660%" height="15" fill="rgb(215,208,19)" fg:x="305973885" fg:w="257131"/><text x="78.7991%" y="559.50"></text></g><g><title>[unknown] (257,131 samples, 0.07%)</title><rect x="78.5491%" y="533" width="0.0660%" height="15" fill="rgb(236,175,2)" fg:x="305973885" fg:w="257131"/><text x="78.7991%" y="543.50"></text></g><g><title>parking_lot::raw_mutex::RawMutex::unlock_slow (454,844 samples, 0.12%)</title><rect x="78.4984%" y="629" width="0.1168%" height="15" fill="rgb(241,52,2)" fg:x="305776445" fg:w="454844"/><text x="78.7484%" y="639.50"></text></g><g><title>tokio::loom::std::rand::seed (176,641 samples, 0.05%)</title><rect x="78.6152%" y="549" width="0.0453%" height="15" fill="rgb(248,140,14)" fg:x="306231289" fg:w="176641"/><text x="78.8652%" y="559.50"></text></g><g><title>std::sys::pal::unix::rand::hashmap_random_keys (176,641 samples, 0.05%)</title><rect x="78.6152%" y="533" width="0.0453%" height="15" fill="rgb(253,22,42)" fg:x="306231289" fg:w="176641"/><text x="78.8652%" y="543.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (198,599 samples, 0.05%)</title><rect x="78.7034%" y="533" width="0.0510%" height="15" fill="rgb(234,61,47)" fg:x="306574858" fg:w="198599"/><text x="78.9534%" y="543.50"></text></g><g><title>clock_gettime@@GLIBC_2.17 (198,599 samples, 0.05%)</title><rect x="78.7034%" y="517" width="0.0510%" height="15" fill="rgb(208,226,15)" fg:x="306574858" fg:w="198599"/><text x="78.9534%" y="527.50"></text></g><g><title>__vdso_clock_gettime (189,506 samples, 0.05%)</title><rect x="78.7057%" y="501" width="0.0486%" height="15" fill="rgb(217,221,4)" fg:x="306583951" fg:w="189506"/><text x="78.9557%" y="511.50"></text></g><g><title>[unknown] (189,489 samples, 0.05%)</title><rect x="78.7057%" y="485" width="0.0486%" height="15" fill="rgb(212,174,34)" fg:x="306583968" fg:w="189489"/><text x="78.9557%" y="495.50"></text></g><g><title>[unknown] (189,489 samples, 0.05%)</title><rect x="78.7057%" y="469" width="0.0486%" height="15" fill="rgb(253,83,4)" fg:x="306583968" fg:w="189489"/><text x="78.9557%" y="479.50"></text></g><g><title>[unknown] (189,025 samples, 0.05%)</title><rect x="78.7058%" y="453" width="0.0485%" height="15" fill="rgb(250,195,49)" fg:x="306584432" fg:w="189025"/><text x="78.9558%" y="463.50"></text></g><g><title>[unknown] (161,756 samples, 0.04%)</title><rect x="78.7128%" y="437" width="0.0415%" height="15" fill="rgb(241,192,25)" fg:x="306611701" fg:w="161756"/><text x="78.9628%" y="447.50"></text></g><g><title>[unknown] (161,756 samples, 0.04%)</title><rect x="78.7128%" y="421" width="0.0415%" height="15" fill="rgb(208,124,10)" fg:x="306611701" fg:w="161756"/><text x="78.9628%" y="431.50"></text></g><g><title>[unknown] (161,756 samples, 0.04%)</title><rect x="78.7128%" y="405" width="0.0415%" height="15" fill="rgb(222,33,0)" fg:x="306611701" fg:w="161756"/><text x="78.9628%" y="415.50"></text></g><g><title>cfree@GLIBC_2.2.5 (249,052 samples, 0.06%)</title><rect x="78.7549%" y="517" width="0.0639%" height="15" fill="rgb(234,209,28)" fg:x="306775546" fg:w="249052"/><text x="79.0049%" y="527.50"></text></g><g><title>_int_free (249,052 samples, 0.06%)</title><rect x="78.7549%" y="501" width="0.0639%" height="15" fill="rgb(224,11,23)" fg:x="306775546" fg:w="249052"/><text x="79.0049%" y="511.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::shutdown_core (257,758 samples, 0.07%)</title><rect x="78.7549%" y="533" width="0.0662%" height="15" fill="rgb(232,99,1)" fg:x="306775546" fg:w="257758"/><text x="79.0049%" y="543.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::park_timeout (666,967 samples, 0.17%)</title><rect x="78.8211%" y="533" width="0.1712%" height="15" fill="rgb(237,95,45)" fg:x="307033304" fg:w="666967"/><text x="79.0711%" y="543.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Parker::park (666,085 samples, 0.17%)</title><rect x="78.8213%" y="517" width="0.1710%" height="15" fill="rgb(208,109,11)" fg:x="307034186" fg:w="666085"/><text x="79.0713%" y="527.50"></text></g><g><title>parking_lot::condvar::Condvar::wait_until_internal (634,520 samples, 0.16%)</title><rect x="78.8294%" y="501" width="0.1629%" height="15" fill="rgb(216,190,48)" fg:x="307065751" fg:w="634520"/><text x="79.0794%" y="511.50"></text></g><g><title>syscall (617,274 samples, 0.16%)</title><rect x="78.8338%" y="485" width="0.1585%" height="15" fill="rgb(251,171,36)" fg:x="307082997" fg:w="617274"/><text x="79.0838%" y="495.50"></text></g><g><title>[unknown] (617,274 samples, 0.16%)</title><rect x="78.8338%" y="469" width="0.1585%" height="15" fill="rgb(230,62,22)" fg:x="307082997" fg:w="617274"/><text x="79.0838%" y="479.50"></text></g><g><title>[unknown] (617,274 samples, 0.16%)</title><rect x="78.8338%" y="453" width="0.1585%" height="15" fill="rgb(225,114,35)" fg:x="307082997" fg:w="617274"/><text x="79.0838%" y="463.50"></text></g><g><title>[unknown] (617,274 samples, 0.16%)</title><rect x="78.8338%" y="437" width="0.1585%" height="15" fill="rgb(215,118,42)" fg:x="307082997" fg:w="617274"/><text x="79.0838%" y="447.50"></text></g><g><title>[unknown] (616,456 samples, 0.16%)</title><rect x="78.8340%" y="421" width="0.1583%" height="15" fill="rgb(243,119,21)" fg:x="307083815" fg:w="616456"/><text x="79.0840%" y="431.50"></text></g><g><title>[unknown] (194,878 samples, 0.05%)</title><rect x="78.9423%" y="405" width="0.0500%" height="15" fill="rgb(252,177,53)" fg:x="307505393" fg:w="194878"/><text x="79.1923%" y="415.50"></text></g><g><title>[unknown] (194,878 samples, 0.05%)</title><rect x="78.9423%" y="389" width="0.0500%" height="15" fill="rgb(237,209,29)" fg:x="307505393" fg:w="194878"/><text x="79.1923%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (6,972,242 samples, 1.79%)</title><rect x="79.0029%" y="469" width="1.7899%" height="15" fill="rgb(212,65,23)" fg:x="307741761" fg:w="6972242"/><text x="79.2529%" y="479.50">&lt;..</text></g><g><title>__memmove_avx_unaligned_erms (6,972,242 samples, 1.79%)</title><rect x="79.0029%" y="453" width="1.7899%" height="15" fill="rgb(230,222,46)" fg:x="307741761" fg:w="6972242"/><text x="79.2529%" y="463.50">_..</text></g><g><title>alloc::fmt::format::format_inner (1,500,264 samples, 0.39%)</title><rect x="80.7928%" y="469" width="0.3851%" height="15" fill="rgb(215,135,32)" fg:x="314714003" fg:w="1500264"/><text x="81.0428%" y="479.50"></text></g><g><title>core::fmt::write (1,500,264 samples, 0.39%)</title><rect x="80.7928%" y="453" width="0.3851%" height="15" fill="rgb(246,101,22)" fg:x="314714003" fg:w="1500264"/><text x="81.0428%" y="463.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for i32&gt;::fmt (1,500,264 samples, 0.39%)</title><rect x="80.7928%" y="437" width="0.3851%" height="15" fill="rgb(206,107,13)" fg:x="314714003" fg:w="1500264"/><text x="81.0428%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1,500,264 samples, 0.39%)</title><rect x="80.7928%" y="421" width="0.3851%" height="15" fill="rgb(250,100,44)" fg:x="314714003" fg:w="1500264"/><text x="81.0428%" y="431.50"></text></g><g><title>__memmove_avx_unaligned_erms (1,500,264 samples, 0.39%)</title><rect x="80.7928%" y="405" width="0.3851%" height="15" fill="rgb(231,147,38)" fg:x="314714003" fg:w="1500264"/><text x="81.0428%" y="415.50"></text></g><g><title>_ZN8indexmap3map25IndexMap$LT$K$C$V$C$S$GT$4hash17h3b61835075ab4d23E.llvm.1636661357365998902 (188,138 samples, 0.05%)</title><rect x="82.5017%" y="453" width="0.0483%" height="15" fill="rgb(229,8,40)" fg:x="321370498" fg:w="188138"/><text x="82.7517%" y="463.50"></text></g><g><title>__rust_dealloc (2,283,368 samples, 0.59%)</title><rect x="82.5500%" y="453" width="0.5862%" height="15" fill="rgb(221,135,30)" fg:x="321558636" fg:w="2283368"/><text x="82.8000%" y="463.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (2,446,668 samples, 0.63%)</title><rect x="83.1362%" y="453" width="0.6281%" height="15" fill="rgb(249,193,18)" fg:x="323842004" fg:w="2446668"/><text x="83.3862%" y="463.50"></text></g><g><title>malloc (2,446,668 samples, 0.63%)</title><rect x="83.1362%" y="437" width="0.6281%" height="15" fill="rgb(209,133,39)" fg:x="323842004" fg:w="2446668"/><text x="83.3862%" y="447.50"></text></g><g><title>indexmap::map::core::IndexMapCore&lt;K,V&gt;::insert_full (13,804,448 samples, 3.54%)</title><rect x="83.7643%" y="453" width="3.5439%" height="15" fill="rgb(232,100,14)" fg:x="326288672" fg:w="13804448"/><text x="84.0143%" y="463.50">inde..</text></g><g><title>_ZN9hashbrown3raw21RawTable$LT$T$C$A$GT$14reserve_rehash17h463c6be4eb36575cE.llvm.7071779753658982588 (13,804,147 samples, 3.54%)</title><rect x="83.7643%" y="437" width="3.5438%" height="15" fill="rgb(224,185,1)" fg:x="326288973" fg:w="13804147"/><text x="84.0143%" y="447.50">_ZN9..</text></g><g><title>_ZN12my_benchmark25benchmark_process_command28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$17h09ad0bace39d6a13E.llvm.10345786962710020758 (32,361,248 samples, 8.31%)</title><rect x="79.0029%" y="485" width="8.3077%" height="15" fill="rgb(223,139,8)" fg:x="307741761" fg:w="32361248"/><text x="79.2529%" y="495.50">_ZN12my_benc..</text></g><g><title>sider::process::process_command::_{{closure}} (23,888,742 samples, 6.13%)</title><rect x="81.1780%" y="469" width="6.1327%" height="15" fill="rgb(232,213,38)" fg:x="316214267" fg:w="23888742"/><text x="81.4280%" y="479.50">sider::p..</text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,730,530 samples, 0.44%)</title><rect x="88.3892%" y="437" width="0.4443%" height="15" fill="rgb(207,94,22)" fg:x="344304390" fg:w="1730530"/><text x="88.6392%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (5,009,039 samples, 1.29%)</title><rect x="88.3892%" y="453" width="1.2859%" height="15" fill="rgb(219,183,54)" fg:x="344304390" fg:w="5009039"/><text x="88.6392%" y="463.50"></text></g><g><title>_ZN91_$LT$core..str..iter..SplitWhitespace$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h3275695dbd06ef7eE.llvm.16741590822116946180 (3,278,509 samples, 0.84%)</title><rect x="88.8335%" y="437" width="0.8417%" height="15" fill="rgb(216,185,54)" fg:x="346034920" fg:w="3278509"/><text x="89.0835%" y="447.50"></text></g><g><title>&lt;tokio::sync::mpsc::bounded::Semaphore as tokio::sync::mpsc::chan::Semaphore&gt;::add_permits (2,975,053 samples, 0.76%)</title><rect x="89.6751%" y="453" width="0.7638%" height="15" fill="rgb(254,217,39)" fg:x="349313429" fg:w="2975053"/><text x="89.9251%" y="463.50"></text></g><g><title>alloc::fmt::format::format_inner (4,122,204 samples, 1.06%)</title><rect x="90.4389%" y="453" width="1.0582%" height="15" fill="rgb(240,178,23)" fg:x="352288482" fg:w="4122204"/><text x="90.6889%" y="463.50"></text></g><g><title>malloc (3,896,478 samples, 1.00%)</title><rect x="90.4968%" y="437" width="1.0003%" height="15" fill="rgb(218,11,47)" fg:x="352514208" fg:w="3896478"/><text x="90.7468%" y="447.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (221,267 samples, 0.06%)</title><rect x="91.4971%" y="453" width="0.0568%" height="15" fill="rgb(218,51,51)" fg:x="356410686" fg:w="221267"/><text x="91.7471%" y="463.50"></text></g><g><title>cfree@GLIBC_2.2.5 (1,920,223 samples, 0.49%)</title><rect x="91.5539%" y="453" width="0.4930%" height="15" fill="rgb(238,126,27)" fg:x="356631953" fg:w="1920223"/><text x="91.8039%" y="463.50"></text></g><g><title>_int_free (1,920,223 samples, 0.49%)</title><rect x="91.5539%" y="437" width="0.4930%" height="15" fill="rgb(249,202,22)" fg:x="356631953" fg:w="1920223"/><text x="91.8039%" y="447.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::swap_remove (1,920,223 samples, 0.49%)</title><rect x="92.0469%" y="453" width="0.4930%" height="15" fill="rgb(254,195,49)" fg:x="358552176" fg:w="1920223"/><text x="92.2969%" y="463.50"></text></g><g><title>indexmap::map::core::IndexMapCore&lt;K,V&gt;::swap_remove_full (1,920,223 samples, 0.49%)</title><rect x="92.0469%" y="437" width="0.4930%" height="15" fill="rgb(208,123,14)" fg:x="358552176" fg:w="1920223"/><text x="92.2969%" y="447.50"></text></g><g><title>_ZN12my_benchmark25benchmark_process_command28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$17h2386486d282e74dfE.llvm.10345786962710020758 (23,009,033 samples, 5.91%)</title><rect x="87.3107%" y="485" width="5.9068%" height="15" fill="rgb(224,200,8)" fg:x="340103009" fg:w="23009033"/><text x="87.5607%" y="495.50">_ZN12my_..</text></g><g><title>sider::process::process_command::_{{closure}} (23,009,033 samples, 5.91%)</title><rect x="87.3107%" y="469" width="5.9068%" height="15" fill="rgb(217,61,36)" fg:x="340103009" fg:w="23009033"/><text x="87.5607%" y="479.50">sider::p..</text></g><g><title>tokio::sync::rwlock::RwLock&lt;T&gt;::write::_{{closure}} (2,639,643 samples, 0.68%)</title><rect x="92.5399%" y="453" width="0.6776%" height="15" fill="rgb(206,35,45)" fg:x="360472399" fg:w="2639643"/><text x="92.7899%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (315,734 samples, 0.08%)</title><rect x="93.2175%" y="437" width="0.0811%" height="15" fill="rgb(217,65,33)" fg:x="363112061" fg:w="315734"/><text x="93.4675%" y="447.50"></text></g><g><title>alloc::fmt::format::format_inner (315,736 samples, 0.08%)</title><rect x="93.2175%" y="469" width="0.0811%" height="15" fill="rgb(222,158,48)" fg:x="363112060" fg:w="315736"/><text x="93.4675%" y="479.50"></text></g><g><title>core::fmt::write (315,736 samples, 0.08%)</title><rect x="93.2175%" y="453" width="0.0811%" height="15" fill="rgb(254,2,54)" fg:x="363112060" fg:w="315736"/><text x="93.4675%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1,813,617 samples, 0.47%)</title><rect x="93.3595%" y="453" width="0.4656%" height="15" fill="rgb(250,143,38)" fg:x="363665187" fg:w="1813617"/><text x="93.6095%" y="463.50"></text></g><g><title>__memmove_avx_unaligned_erms (200,936 samples, 0.05%)</title><rect x="93.8251%" y="453" width="0.0516%" height="15" fill="rgb(248,25,0)" fg:x="365478805" fg:w="200936"/><text x="94.0751%" y="463.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (3,222,300 samples, 0.83%)</title><rect x="93.8787%" y="453" width="0.8272%" height="15" fill="rgb(206,152,27)" fg:x="365687834" fg:w="3222300"/><text x="94.1287%" y="463.50"></text></g><g><title>sider::commands::build::build_get_command (4,146,393 samples, 1.06%)</title><rect x="94.7060%" y="453" width="1.0645%" height="15" fill="rgb(240,77,30)" fg:x="368910152" fg:w="4146393"/><text x="94.9560%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (4,146,393 samples, 1.06%)</title><rect x="94.7060%" y="437" width="1.0645%" height="15" fill="rgb(231,5,3)" fg:x="368910152" fg:w="4146393"/><text x="94.9560%" y="447.50"></text></g><g><title>malloc (4,146,393 samples, 1.06%)</title><rect x="94.7060%" y="421" width="1.0645%" height="15" fill="rgb(207,226,32)" fg:x="368910152" fg:w="4146393"/><text x="94.9560%" y="431.50"></text></g><g><title>_ZN12my_benchmark25benchmark_process_command28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$17h86137212c02bd818E.llvm.10345786962710020758 (22,371,618 samples, 5.74%)</title><rect x="93.2175%" y="485" width="5.7432%" height="15" fill="rgb(222,207,47)" fg:x="363112042" fg:w="22371618"/><text x="93.4675%" y="495.50">_ZN12my..</text></g><g><title>sider::process::process_command::_{{closure}} (22,055,864 samples, 5.66%)</title><rect x="93.2986%" y="469" width="5.6621%" height="15" fill="rgb(229,115,45)" fg:x="363427796" fg:w="22055864"/><text x="93.5486%" y="479.50">sider::..</text></g><g><title>sider::keys::&lt;impl sider::types::Key&gt;::is_expired (12,427,115 samples, 3.19%)</title><rect x="95.7704%" y="453" width="3.1903%" height="15" fill="rgb(224,191,6)" fg:x="373056545" fg:w="12427115"/><text x="96.0204%" y="463.50">sid..</text></g><g><title>std::sys::pal::unix::time::Timespec::now (12,427,114 samples, 3.19%)</title><rect x="95.7704%" y="437" width="3.1903%" height="15" fill="rgb(230,227,24)" fg:x="373056546" fg:w="12427114"/><text x="96.0204%" y="447.50">std..</text></g><g><title>clock_gettime@@GLIBC_2.17 (12,427,114 samples, 3.19%)</title><rect x="95.7704%" y="421" width="3.1903%" height="15" fill="rgb(228,80,19)" fg:x="373056546" fg:w="12427114"/><text x="96.0204%" y="431.50">clo..</text></g><g><title>__vdso_clock_gettime (12,427,114 samples, 3.19%)</title><rect x="95.7704%" y="405" width="3.1903%" height="15" fill="rgb(247,229,0)" fg:x="373056546" fg:w="12427114"/><text x="96.0204%" y="415.50">__v..</text></g><g><title>[unknown] (12,427,114 samples, 3.19%)</title><rect x="95.7704%" y="389" width="3.1903%" height="15" fill="rgb(237,194,15)" fg:x="373056546" fg:w="12427114"/><text x="96.0204%" y="399.50">[un..</text></g><g><title>[unknown] (12,427,114 samples, 3.19%)</title><rect x="95.7704%" y="373" width="3.1903%" height="15" fill="rgb(219,203,20)" fg:x="373056546" fg:w="12427114"/><text x="96.0204%" y="383.50">[un..</text></g><g><title>[unknown] (12,427,114 samples, 3.19%)</title><rect x="95.7704%" y="357" width="3.1903%" height="15" fill="rgb(234,128,8)" fg:x="373056546" fg:w="12427114"/><text x="96.0204%" y="367.50">[un..</text></g><g><title>[unknown] (12,427,114 samples, 3.19%)</title><rect x="95.7704%" y="341" width="3.1903%" height="15" fill="rgb(248,202,8)" fg:x="373056546" fg:w="12427114"/><text x="96.0204%" y="351.50">[un..</text></g><g><title>[unknown] (12,427,114 samples, 3.19%)</title><rect x="95.7704%" y="325" width="3.1903%" height="15" fill="rgb(206,104,37)" fg:x="373056546" fg:w="12427114"/><text x="96.0204%" y="335.50">[un..</text></g><g><title>[unknown] (8,341,270 samples, 2.14%)</title><rect x="96.8193%" y="309" width="2.1414%" height="15" fill="rgb(223,8,27)" fg:x="377142390" fg:w="8341270"/><text x="97.0693%" y="319.50">[..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task (78,052,556 samples, 20.04%)</title><rect x="78.9923%" y="533" width="20.0375%" height="15" fill="rgb(216,217,28)" fg:x="307700271" fg:w="78052556"/><text x="79.2423%" y="543.50">tokio::runtime::scheduler::mult..</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (78,023,187 samples, 20.03%)</title><rect x="78.9998%" y="517" width="20.0300%" height="15" fill="rgb(249,199,1)" fg:x="307729640" fg:w="78023187"/><text x="79.2498%" y="527.50">tokio::runtime::task::harness::..</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (78,011,066 samples, 20.03%)</title><rect x="79.0029%" y="501" width="20.0269%" height="15" fill="rgb(240,85,17)" fg:x="307741761" fg:w="78011066"/><text x="79.2529%" y="511.50">tokio::runtime::task::core::Cor..</text></g><g><title>_ZN12my_benchmark25benchmark_process_command28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$17hfe0a0ce05d928fd1E.llvm.10345786962710020758 (269,167 samples, 0.07%)</title><rect x="98.9607%" y="485" width="0.0691%" height="15" fill="rgb(206,108,45)" fg:x="385483660" fg:w="269167"/><text x="99.2107%" y="495.50"></text></g><g><title>sider::process::process_command::_{{closure}} (269,167 samples, 0.07%)</title><rect x="98.9607%" y="469" width="0.0691%" height="15" fill="rgb(245,210,41)" fg:x="385483660" fg:w="269167"/><text x="99.2107%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (269,167 samples, 0.07%)</title><rect x="98.9607%" y="453" width="0.0691%" height="15" fill="rgb(206,13,37)" fg:x="385483660" fg:w="269167"/><text x="99.2107%" y="463.50"></text></g><g><title>malloc (269,167 samples, 0.07%)</title><rect x="98.9607%" y="437" width="0.0691%" height="15" fill="rgb(250,61,18)" fg:x="385483660" fg:w="269167"/><text x="99.2107%" y="447.50"></text></g><g><title>_int_malloc (269,167 samples, 0.07%)</title><rect x="98.9607%" y="421" width="0.0691%" height="15" fill="rgb(235,172,48)" fg:x="385483660" fg:w="269167"/><text x="99.2107%" y="431.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run (79,401,756 samples, 20.38%)</title><rect x="78.6605%" y="549" width="20.3839%" height="15" fill="rgb(249,201,17)" fg:x="306407930" fg:w="79401756"/><text x="78.9105%" y="559.50">tokio::runtime::scheduler::multi..</text></g><g><title>tokio::runtime::task::list::OwnedTasks&lt;S&gt;::close_and_shutdown_all (56,859 samples, 0.01%)</title><rect x="99.0298%" y="533" width="0.0146%" height="15" fill="rgb(219,208,6)" fg:x="385752827" fg:w="56859"/><text x="99.2798%" y="543.50"></text></g><g><title>__GI___clone3 (80,457,445 samples, 20.65%)</title><rect x="78.3943%" y="725" width="20.6549%" height="15" fill="rgb(248,31,23)" fg:x="305370785" fg:w="80457445"/><text x="78.6443%" y="735.50">__GI___clone3</text></g><g><title>start_thread (80,457,445 samples, 20.65%)</title><rect x="78.3943%" y="709" width="20.6549%" height="15" fill="rgb(245,15,42)" fg:x="305370785" fg:w="80457445"/><text x="78.6443%" y="719.50">start_thread</text></g><g><title>std::sys::pal::unix::thread::Thread::new::thread_start (80,317,336 samples, 20.62%)</title><rect x="78.4302%" y="693" width="20.6189%" height="15" fill="rgb(222,217,39)" fg:x="305510894" fg:w="80317336"/><text x="78.6802%" y="703.50">std::sys::pal::unix::thread::Thr..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (80,316,669 samples, 20.62%)</title><rect x="78.4304%" y="677" width="20.6188%" height="15" fill="rgb(210,219,27)" fg:x="305511561" fg:w="80316669"/><text x="78.6804%" y="687.50">core::ops::function::FnOnce::cal..</text></g><g><title>std::sys::backtrace::__rust_begin_short_backtrace (80,309,759 samples, 20.62%)</title><rect x="78.4322%" y="661" width="20.6170%" height="15" fill="rgb(252,166,36)" fg:x="305518471" fg:w="80309759"/><text x="78.6822%" y="671.50">std::sys::backtrace::__rust_begi..</text></g><g><title>tokio::runtime::blocking::pool::Inner::run (80,184,641 samples, 20.58%)</title><rect x="78.4643%" y="645" width="20.5849%" height="15" fill="rgb(245,132,34)" fg:x="305643589" fg:w="80184641"/><text x="78.7143%" y="655.50">tokio::runtime::blocking::pool::..</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (79,596,941 samples, 20.43%)</title><rect x="78.6152%" y="629" width="20.4340%" height="15" fill="rgb(236,54,3)" fg:x="306231289" fg:w="79596941"/><text x="78.8652%" y="639.50">tokio::runtime::task::harness::H..</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (79,596,941 samples, 20.43%)</title><rect x="78.6152%" y="613" width="20.4340%" height="15" fill="rgb(241,173,43)" fg:x="306231289" fg:w="79596941"/><text x="78.8652%" y="623.50">tokio::runtime::task::core::Core..</text></g><g><title>&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (79,596,941 samples, 20.43%)</title><rect x="78.6152%" y="597" width="20.4340%" height="15" fill="rgb(215,190,9)" fg:x="306231289" fg:w="79596941"/><text x="78.8652%" y="607.50">&lt;tokio::runtime::blocking::task:..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run (79,596,941 samples, 20.43%)</title><rect x="78.6152%" y="581" width="20.4340%" height="15" fill="rgb(242,101,16)" fg:x="306231289" fg:w="79596941"/><text x="78.8652%" y="591.50">tokio::runtime::scheduler::multi..</text></g><g><title>tokio::runtime::context::runtime::enter_runtime (79,596,941 samples, 20.43%)</title><rect x="78.6152%" y="565" width="20.4340%" height="15" fill="rgb(223,190,21)" fg:x="306231289" fg:w="79596941"/><text x="78.8652%" y="575.50">tokio::runtime::context::runtime..</text></g><g><title>regex::regex::string::Regex::new (112,548 samples, 0.03%)</title><rect x="99.0492%" y="725" width="0.0289%" height="15" fill="rgb(215,228,25)" fg:x="385828230" fg:w="112548"/><text x="99.2992%" y="735.50"></text></g><g><title>regex::builders::Builder::build_one_string (112,548 samples, 0.03%)</title><rect x="99.0492%" y="709" width="0.0289%" height="15" fill="rgb(225,36,22)" fg:x="385828230" fg:w="112548"/><text x="99.2992%" y="719.50"></text></g><g><title>regex_automata::meta::regex::Builder::build (112,548 samples, 0.03%)</title><rect x="99.0492%" y="693" width="0.0289%" height="15" fill="rgb(251,106,46)" fg:x="385828230" fg:w="112548"/><text x="99.2992%" y="703.50"></text></g><g><title>regex_automata::meta::strategy::new (112,548 samples, 0.03%)</title><rect x="99.0492%" y="677" width="0.0289%" height="15" fill="rgb(208,90,1)" fg:x="385828230" fg:w="112548"/><text x="99.2992%" y="687.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::compile (112,548 samples, 0.03%)</title><rect x="99.0492%" y="661" width="0.0289%" height="15" fill="rgb(243,10,4)" fg:x="385828230" fg:w="112548"/><text x="99.2992%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (112,548 samples, 0.03%)</title><rect x="99.0492%" y="645" width="0.0289%" height="15" fill="rgb(212,137,27)" fg:x="385828230" fg:w="112548"/><text x="99.2992%" y="655.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_cap (112,548 samples, 0.03%)</title><rect x="99.0492%" y="629" width="0.0289%" height="15" fill="rgb(231,220,49)" fg:x="385828230" fg:w="112548"/><text x="99.2992%" y="639.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (112,548 samples, 0.03%)</title><rect x="99.0492%" y="613" width="0.0289%" height="15" fill="rgb(237,96,20)" fg:x="385828230" fg:w="112548"/><text x="99.2992%" y="623.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_at_least (112,548 samples, 0.03%)</title><rect x="99.0492%" y="597" width="0.0289%" height="15" fill="rgb(239,229,30)" fg:x="385828230" fg:w="112548"/><text x="99.2992%" y="607.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (112,548 samples, 0.03%)</title><rect x="99.0492%" y="581" width="0.0289%" height="15" fill="rgb(219,65,33)" fg:x="385828230" fg:w="112548"/><text x="99.2992%" y="591.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Utf8Compiler::new (112,548 samples, 0.03%)</title><rect x="99.0492%" y="565" width="0.0289%" height="15" fill="rgb(243,134,7)" fg:x="385828230" fg:w="112548"/><text x="99.2992%" y="575.50"></text></g><g><title>regex_automata::nfa::thompson::map::Utf8BoundedMap::clear (112,548 samples, 0.03%)</title><rect x="99.0492%" y="549" width="0.0289%" height="15" fill="rgb(216,177,54)" fg:x="385828230" fg:w="112548"/><text x="99.2992%" y="559.50"></text></g><g><title>_ZN62_$LT$T$u20$as$u20$alloc..vec..spec_from_elem..SpecFromElem$GT$9from_elem17h952c988e87ebc9bcE.llvm.14741043157717576644 (112,548 samples, 0.03%)</title><rect x="99.0492%" y="533" width="0.0289%" height="15" fill="rgb(211,160,20)" fg:x="385828230" fg:w="112548"/><text x="99.2992%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_with (112,548 samples, 0.03%)</title><rect x="99.0492%" y="517" width="0.0289%" height="15" fill="rgb(239,85,39)" fg:x="385828230" fg:w="112548"/><text x="99.2992%" y="527.50"></text></g><g><title>[unknown] (112,548 samples, 0.03%)</title><rect x="99.0492%" y="501" width="0.0289%" height="15" fill="rgb(232,125,22)" fg:x="385828230" fg:w="112548"/><text x="99.2992%" y="511.50"></text></g><g><title>[unknown] (112,182 samples, 0.03%)</title><rect x="99.0492%" y="485" width="0.0288%" height="15" fill="rgb(244,57,34)" fg:x="385828596" fg:w="112182"/><text x="99.2992%" y="495.50"></text></g><g><title>[unknown] (112,182 samples, 0.03%)</title><rect x="99.0492%" y="469" width="0.0288%" height="15" fill="rgb(214,203,32)" fg:x="385828596" fg:w="112182"/><text x="99.2992%" y="479.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (999,213 samples, 0.26%)</title><rect x="99.0780%" y="725" width="0.2565%" height="15" fill="rgb(207,58,43)" fg:x="385940778" fg:w="999213"/><text x="99.3280%" y="735.50"></text></g><g><title>_ZN12my_benchmark25benchmark_process_command28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$17hfe0a0ce05d928fd1E.llvm.10345786962710020758 (999,213 samples, 0.26%)</title><rect x="99.0780%" y="709" width="0.2565%" height="15" fill="rgb(215,193,15)" fg:x="385940778" fg:w="999213"/><text x="99.3280%" y="719.50"></text></g><g><title>sider::process::process_command::_{{closure}} (999,213 samples, 0.26%)</title><rect x="99.0780%" y="693" width="0.2565%" height="15" fill="rgb(232,15,44)" fg:x="385940778" fg:w="999213"/><text x="99.3280%" y="703.50"></text></g><g><title>regex::regex::string::Regex::new (999,213 samples, 0.26%)</title><rect x="99.0780%" y="677" width="0.2565%" height="15" fill="rgb(212,3,48)" fg:x="385940778" fg:w="999213"/><text x="99.3280%" y="687.50"></text></g><g><title>regex::builders::Builder::build_one_string (999,213 samples, 0.26%)</title><rect x="99.0780%" y="661" width="0.2565%" height="15" fill="rgb(218,128,7)" fg:x="385940778" fg:w="999213"/><text x="99.3280%" y="671.50"></text></g><g><title>regex_automata::meta::regex::Builder::build (999,213 samples, 0.26%)</title><rect x="99.0780%" y="645" width="0.2565%" height="15" fill="rgb(226,216,39)" fg:x="385940778" fg:w="999213"/><text x="99.3280%" y="655.50"></text></g><g><title>regex_automata::meta::strategy::new (999,213 samples, 0.26%)</title><rect x="99.0780%" y="629" width="0.2565%" height="15" fill="rgb(243,47,51)" fg:x="385940778" fg:w="999213"/><text x="99.3280%" y="639.50"></text></g><g><title>regex_automata::meta::wrappers::BoundedBacktracker::new (999,213 samples, 0.26%)</title><rect x="99.0780%" y="613" width="0.2565%" height="15" fill="rgb(241,183,40)" fg:x="385940778" fg:w="999213"/><text x="99.3280%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex_automata::nfa::thompson::compiler::Compiler&gt; (999,213 samples, 0.26%)</title><rect x="99.0780%" y="597" width="0.2565%" height="15" fill="rgb(231,217,32)" fg:x="385940778" fg:w="999213"/><text x="99.3280%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;regex_automata::nfa::thompson::range_trie::RangeTrie&gt;&gt; (999,213 samples, 0.26%)</title><rect x="99.0780%" y="581" width="0.2565%" height="15" fill="rgb(229,61,38)" fg:x="385940778" fg:w="999213"/><text x="99.3280%" y="591.50"></text></g><g><title>cfree@GLIBC_2.2.5 (999,213 samples, 0.26%)</title><rect x="99.0780%" y="565" width="0.2565%" height="15" fill="rgb(225,210,5)" fg:x="385940778" fg:w="999213"/><text x="99.3280%" y="575.50"></text></g><g><title>_int_free (999,213 samples, 0.26%)</title><rect x="99.0780%" y="549" width="0.2565%" height="15" fill="rgb(231,79,45)" fg:x="385940778" fg:w="999213"/><text x="99.3280%" y="559.50"></text></g><g><title>all (389,532,075 samples, 100%)</title><rect x="0.0000%" y="757" width="100.0000%" height="15" fill="rgb(224,100,7)" fg:x="0" fg:w="389532075"/><text x="0.2500%" y="767.50"></text></g><g><title>tokio-runtime-w (84,161,916 samples, 21.61%)</title><rect x="78.3941%" y="741" width="21.6059%" height="15" fill="rgb(241,198,18)" fg:x="305370159" fg:w="84161916"/><text x="78.6441%" y="751.50">tokio-runtime-w</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (2,592,084 samples, 0.67%)</title><rect x="99.3346%" y="725" width="0.6654%" height="15" fill="rgb(252,97,53)" fg:x="386939991" fg:w="2592084"/><text x="99.5846%" y="735.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (2,592,084 samples, 0.67%)</title><rect x="99.3346%" y="709" width="0.6654%" height="15" fill="rgb(220,88,7)" fg:x="386939991" fg:w="2592084"/><text x="99.5846%" y="719.50"></text></g><g><title>_ZN12my_benchmark25benchmark_process_command28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$17hfe0a0ce05d928fd1E.llvm.10345786962710020758 (2,592,084 samples, 0.67%)</title><rect x="99.3346%" y="693" width="0.6654%" height="15" fill="rgb(213,176,14)" fg:x="386939991" fg:w="2592084"/><text x="99.5846%" y="703.50"></text></g><g><title>sider::process::process_command::_{{closure}} (2,592,084 samples, 0.67%)</title><rect x="99.3346%" y="677" width="0.6654%" height="15" fill="rgb(246,73,7)" fg:x="386939991" fg:w="2592084"/><text x="99.5846%" y="687.50"></text></g><g><title>regex::regex::string::Regex::new (2,592,084 samples, 0.67%)</title><rect x="99.3346%" y="661" width="0.6654%" height="15" fill="rgb(245,64,36)" fg:x="386939991" fg:w="2592084"/><text x="99.5846%" y="671.50"></text></g><g><title>regex::builders::Builder::build_one_string (2,592,084 samples, 0.67%)</title><rect x="99.3346%" y="645" width="0.6654%" height="15" fill="rgb(245,80,10)" fg:x="386939991" fg:w="2592084"/><text x="99.5846%" y="655.50"></text></g><g><title>regex_automata::meta::regex::Builder::build (2,592,084 samples, 0.67%)</title><rect x="99.3346%" y="629" width="0.6654%" height="15" fill="rgb(232,107,50)" fg:x="386939991" fg:w="2592084"/><text x="99.5846%" y="639.50"></text></g><g><title>regex_automata::meta::strategy::new (2,592,084 samples, 0.67%)</title><rect x="99.3346%" y="613" width="0.6654%" height="15" fill="rgb(253,3,0)" fg:x="386939991" fg:w="2592084"/><text x="99.5846%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex_automata::nfa::thompson::compiler::Compiler&gt; (2,592,084 samples, 0.67%)</title><rect x="99.3346%" y="597" width="0.6654%" height="15" fill="rgb(212,99,53)" fg:x="386939991" fg:w="2592084"/><text x="99.5846%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;regex_automata::nfa::thompson::compiler::Utf8State&gt;&gt; (2,592,084 samples, 0.67%)</title><rect x="99.3346%" y="581" width="0.6654%" height="15" fill="rgb(249,111,54)" fg:x="386939991" fg:w="2592084"/><text x="99.5846%" y="591.50"></text></g></svg></svg>